{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "lberger_submission.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "puPtpoZlGWev"
      },
      "source": [
        "# Libraries "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iR4VpY8Fd9J-"
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "%matplotlib inline\n",
        "from sklearn.impute import SimpleImputer\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn import metrics\n",
        "from sklearn.tree import DecisionTreeRegressor\n",
        "from sklearn.ensemble import RandomForestRegressor\n",
        "from sklearn.datasets import make_regression\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.wrappers.scikit_learn import KerasRegressor\n",
        "from sklearn.model_selection import cross_val_score\n",
        "from sklearn.model_selection import KFold\n",
        "from sklearn import neighbors\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from keras.regularizers import l2\n",
        "from tensorflow.keras import regularizers\n",
        "from keras.layers import Dropout\n",
        "import tensorflow as tf\n",
        "from sklearn.svm import SVR\n",
        "from sklearn.decomposition import PCA\n",
        "import xgboost as xgb\n",
        "from sklearn.model_selection import GridSearchCV\n",
        "import dateutil\n",
        "import os\n",
        "import random\n",
        "os.environ['PYTHONHASHSEED']=str(1)\n",
        "tf.random.set_seed(1)\n",
        "np.random.seed(1)\n",
        "random.seed(1)"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nJeehs4HeBKn",
        "outputId": "e2e10368-5f45-4c1b-e479-2c890b454fa0"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/gdrive')"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/gdrive\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TZRLgiaxf63f"
      },
      "source": [
        "# Preprocess"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f4AtXMYJeC58"
      },
      "source": [
        "def pre_process(data):\n",
        "  # User Name column is not relevent\n",
        "  data.drop('User Name', 1,inplace=True)\n",
        "\n",
        "  # Replacing null with 0 and non-null with 1\n",
        "  data['Personal URL'] = data['Personal URL'].notnull().astype('int')\n",
        "\n",
        "  # Set --> 1 and not Set --> 0\n",
        "  data['Profile Cover Image Status'] = np.where(data['Profile Cover Image Status']=='Set', 1, 0)\n",
        "  #One-hot\n",
        "  # data = pd.get_dummies(data, columns = ['Profile Cover Image Status'])\n",
        "\n",
        "  # One-Hot encoding for Profile Verification Status column\n",
        "  data = pd.get_dummies(data, columns = ['Profile Verification Status'],drop_first=True)\n",
        "\n",
        "\n",
        "  #Frequnce encoding for Profile Verification Status column\n",
        "  # enc_prof_verif = (data.groupby('Profile Verification Status').size()) / len(data)\n",
        "  # data['Profile Verification Status'] = data['Profile Verification Status'].apply(lambda x : enc_prof_verif[x])\n",
        "\n",
        "  #Frequnce encoding for Color columns\n",
        "  # data['Profile Theme Color'].fillna(0,inplace = True)\n",
        "  data['Profile Theme Color'].fillna(data['Profile Theme Color'].value_counts().index[0],inplace = True)\n",
        "  enc_color_theme = (data.groupby('Profile Theme Color').size()) / len(data)\n",
        "  data['Profile Theme Color'] = data['Profile Theme Color'].apply(lambda x : enc_color_theme[x])\n",
        "  # data['Profile Text Color'].fillna(0,inplace = True)\n",
        "  data['Profile Text Color'].fillna(data['Profile Text Color'].value_counts().index[0],inplace = True)\n",
        "  enc_color_text = (data.groupby('Profile Text Color').size()) / len(data)\n",
        "  data['Profile Text Color'] = data['Profile Text Color'].apply(lambda x : enc_color_text[x])\n",
        "  # data['Profile Page Color'].fillna(0,inplace = True)\n",
        "  data['Profile Page Color'].fillna(data['Profile Page Color'].value_counts().index[0],inplace = True)\n",
        "  enc_color_page = (data.groupby('Profile Page Color').size()) / len(data)\n",
        "  data['Profile Page Color'] = data['Profile Page Color'].apply(lambda x : enc_color_page[x])\n",
        "\n",
        "  # Mapping True/False --> 1/0\n",
        "  data['Is Profile View Size Customized?'] = data['Is Profile View Size Customized?'].astype(int)\n",
        "  # One_hot\n",
        "  # data = pd.get_dummies(data, columns = ['Is Profile View Size Customized?'])\n",
        "\n",
        "  # Dropping irrelevant Cols (Maybe we should use them)\n",
        "  # data.drop(['UTC Offset', 'Location'], axis=1, inplace=True)\n",
        "  data.drop(['Location'], axis=1, inplace=True)\n",
        "  data['UTC Offset'].fillna(data['UTC Offset'].value_counts().index[0],inplace = True)\n",
        "  # data['Location'].fillna(data['Location'].value_counts().index[0],inplace = True)\n",
        "  # data = pd.get_dummies(data, columns = ['UTC Offset'],drop_first=True)\n",
        "  enc_utc = (data.groupby('UTC Offset').size()) / len(data)\n",
        "  data['UTC Offset'] = data['UTC Offset'].apply(lambda x : enc_utc[x])\n",
        "\n",
        "  # Enabled --> 1 and Disabled or ??? --> 0\n",
        "  data['Location Public Visibility'] = np.where(data['Location Public Visibility'].str.lower() == 'enabled', 1, 0)\n",
        "  # data = pd.get_dummies(data, columns = ['Location Public Visibility'])\n",
        "\n",
        "  # Frequency encoding for user language\n",
        "  enc_user_lang = (data.groupby('User Language').size()) / len(data)\n",
        "  data['User Language'] = data['User Language'].apply(lambda x : enc_user_lang[x])\n",
        "  #One-Hot\n",
        "  # data = pd.get_dummies(data, columns = ['User Language'],drop_first=True)\n",
        "\n",
        "  # Frequency encoding for User time zone\n",
        "  data['User Time Zone'].fillna(data['User Time Zone'].value_counts().index[0],inplace = True)\n",
        "  enc_time_zone = (data.groupby('User Time Zone').size()) / len(data)\n",
        "  data['User Time Zone'] = data['User Time Zone'].apply(lambda x : enc_time_zone[x])\n",
        "\n",
        "  # Replacing the white spaces with nan\n",
        "  data['Profile Category'] = data['Profile Category'].replace(r'^\\s*$', np.nan, regex=True)\n",
        "  # Replacing nan with 'unknown'\n",
        "  data['Profile Category'].fillna('unknown',inplace = True)\n",
        "\n",
        "  # One-hot encoding\n",
        "  data = pd.get_dummies(data, columns = ['Profile Category'],drop_first=True)\n",
        "\n",
        "  # Frequency encoding for profile category\n",
        "  # enc_prof_cat = (data.groupby('Profile Category').size()) / len(data)\n",
        "  # data['Profile Category'] = data['Profile Category'].apply(lambda x : enc_prof_cat[x])\n",
        "\n",
        "\n",
        "  # Median imputation for 'Avg Daily Profile Clicks'And'Avg Daily Profile Visit Duration in seconds'\n",
        "  imp_median = SimpleImputer( strategy='median') #for median imputation replace 'mean' with 'median'\n",
        "  imp_median.fit(data[['Avg Daily Profile Clicks','Avg Daily Profile Visit Duration in seconds']])\n",
        "  imputed_train_df = imp_median.transform(data[['Avg Daily Profile Clicks','Avg Daily Profile Visit Duration in seconds']])\n",
        "  imputed_train_df = pd.DataFrame(imputed_train_df,columns=['Avg Daily Profile Clicks','Avg Daily Profile Visit Duration in seconds'])\n",
        "  data[['Avg Daily Profile Clicks','Avg Daily Profile Visit Duration in seconds']] = imputed_train_df[['Avg Daily Profile Clicks','Avg Daily Profile Visit Duration in seconds']]\n",
        "\n",
        "  # Removing Outliers\n",
        "  # Q1 = data['Num of Followers'].quantile(0.25)\n",
        "  # Q3 = data['Num of Followers'].quantile(0.75)\n",
        "  # IQR = Q3 - Q1\n",
        "  # Q3 + 1.5 * IQR\n",
        "  # data = data[data['Num of Followers'] <(Q3 + 1.5 * IQR)]\n",
        "\n",
        "  # Making Id column as index\n",
        "  data.set_index('Id',inplace=True)\n",
        "\n",
        "  # Dropping Pic Col for now\n",
        "  data.drop('Profile Image', 1,inplace=True)\n",
        "  # Dropping Personal Url column\n",
        "  #data.drop('Personal URL', 1,inplace=True)\n",
        "\n",
        "  #Parsing Number of years until 2020\n",
        "  data['Profile Creation Timestamp'] = data['Profile Creation Timestamp'].apply(lambda x: dateutil.parser.parse(x))\n",
        "  data['Profile Creation Timestamp']=pd.DatetimeIndex(data['Profile Creation Timestamp']).year\n",
        "  data['Profile Creation Timestamp'] = 2020-data['Profile Creation Timestamp']\n",
        "\n",
        "  #Binning Avg Daily Profile Visit Duration in seconds\n",
        "  bins = [10.685,14.795,18.03,20.691,23.205,25.48,28.132,31.091,34.595,48.885]\n",
        "  # labels = [1,2,3,4,5]\n",
        "  data['Avg_seconds_binned'] = pd.cut(data['Avg Daily Profile Visit Duration in seconds'], bins=bins)\n",
        "  # data[\"Avg_seconds_binned\"] = pd.qcut(data[\"Avg Daily Profile Visit Duration in seconds\"], q=10)\n",
        "  data = pd.get_dummies(data, columns = ['Avg_seconds_binned'],drop_first=True)\n",
        "  data.drop('Avg Daily Profile Visit Duration in seconds', 1,inplace=True)\n",
        " \n",
        "\n",
        "\n",
        "  return data\n",
        "\n",
        "\n"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EFWxlGqMeKI0"
      },
      "source": [
        "df_train = pre_process(pd.read_csv(\"/content/gdrive/MyDrive/ift6758-a20/train.csv\"))\n",
        "df_test = pre_process(pd.read_csv(\"/content/gdrive/MyDrive/ift6758-a20/test.csv\")) "
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qf1ZilC8dKX5"
      },
      "source": [
        "end_y_outlier = 200000"
      ],
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "s0qqI8bzeMPs"
      },
      "source": [
        "# Removing Outliers\n",
        "#df_train = df_train.drop(df_train[df_train['Num of Profile Likes']1].index)\n",
        "df_train = df_train.drop(df_train[df_train['Num of Profile Likes']>end_y_outlier].index)\n",
        "df_train = df_train.drop(df_train[df_train['Num of Direct Messages']>150000].index)\n",
        "df_train = df_train.drop(df_train[df_train['Num of Status Updates']>1500000].index)\n",
        "df_train = df_train.drop(df_train[df_train['Num of Followers']>40000000].index)"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2jLZIerWeOD0"
      },
      "source": [
        "num_features = df_train[['Avg Daily Profile Clicks','Num of Followers','Num of People Following','Num of Status Updates','Num of Direct Messages']]"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "arCMqJL8eP20"
      },
      "source": [
        "num_features_test = df_test[['Avg Daily Profile Clicks','Num of Followers','Num of People Following','Num of Status Updates','Num of Direct Messages']]"
      ],
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lKGeShtjeRSs"
      },
      "source": [
        "y_col = ['Num of Profile Likes']\n",
        "x_col = df_train.columns.difference(['Num of Profile Likes'])"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IBVukeG0eS9k"
      },
      "source": [
        "for i in num_features.columns:\n",
        "  df_train[i] = np.log1p(df_train[i])"
      ],
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PV1O6PQveUps"
      },
      "source": [
        "for i in num_features_test.columns:\n",
        "  df_test[i] = np.log1p(df_test[i])"
      ],
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 306
        },
        "id": "zECZ-7s5Hh6z",
        "outputId": "55ae52e1-2300-44c8-e9de-96519673e0aa"
      },
      "source": [
        "df_train.head()"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Personal URL</th>\n",
              "      <th>Profile Cover Image Status</th>\n",
              "      <th>Profile Text Color</th>\n",
              "      <th>Profile Page Color</th>\n",
              "      <th>Profile Theme Color</th>\n",
              "      <th>Is Profile View Size Customized?</th>\n",
              "      <th>UTC Offset</th>\n",
              "      <th>Location Public Visibility</th>\n",
              "      <th>User Language</th>\n",
              "      <th>Profile Creation Timestamp</th>\n",
              "      <th>User Time Zone</th>\n",
              "      <th>Num of Followers</th>\n",
              "      <th>Num of People Following</th>\n",
              "      <th>Num of Status Updates</th>\n",
              "      <th>Num of Direct Messages</th>\n",
              "      <th>Avg Daily Profile Clicks</th>\n",
              "      <th>Num of Profile Likes</th>\n",
              "      <th>Profile Verification Status_Pending</th>\n",
              "      <th>Profile Verification Status_Verified</th>\n",
              "      <th>Profile Category_celebrity</th>\n",
              "      <th>Profile Category_government</th>\n",
              "      <th>Profile Category_unknown</th>\n",
              "      <th>Avg_seconds_binned_(14.795, 18.03]</th>\n",
              "      <th>Avg_seconds_binned_(18.03, 20.691]</th>\n",
              "      <th>Avg_seconds_binned_(20.691, 23.205]</th>\n",
              "      <th>Avg_seconds_binned_(23.205, 25.48]</th>\n",
              "      <th>Avg_seconds_binned_(25.48, 28.132]</th>\n",
              "      <th>Avg_seconds_binned_(28.132, 31.091]</th>\n",
              "      <th>Avg_seconds_binned_(31.091, 34.595]</th>\n",
              "      <th>Avg_seconds_binned_(34.595, 48.885]</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Id</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>AL85S14OMDPF01I9</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.000133</td>\n",
              "      <td>0.000133</td>\n",
              "      <td>0.000133</td>\n",
              "      <td>0</td>\n",
              "      <td>0.008133</td>\n",
              "      <td>1</td>\n",
              "      <td>0.709467</td>\n",
              "      <td>12</td>\n",
              "      <td>0.005067</td>\n",
              "      <td>11.469642</td>\n",
              "      <td>8.364042</td>\n",
              "      <td>10.335595</td>\n",
              "      <td>6.773080</td>\n",
              "      <td>0.946277</td>\n",
              "      <td>2815</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>HI11QOPD7BLJTO7Q</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.005867</td>\n",
              "      <td>0.006267</td>\n",
              "      <td>0.004267</td>\n",
              "      <td>0</td>\n",
              "      <td>0.240000</td>\n",
              "      <td>1</td>\n",
              "      <td>0.709467</td>\n",
              "      <td>10</td>\n",
              "      <td>0.225467</td>\n",
              "      <td>13.834084</td>\n",
              "      <td>5.669881</td>\n",
              "      <td>9.005896</td>\n",
              "      <td>5.673323</td>\n",
              "      <td>2.507825</td>\n",
              "      <td>1242</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>JS49LP5P72RI1OQB</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.000133</td>\n",
              "      <td>0.095067</td>\n",
              "      <td>0.000133</td>\n",
              "      <td>0</td>\n",
              "      <td>0.103200</td>\n",
              "      <td>1</td>\n",
              "      <td>0.709467</td>\n",
              "      <td>11</td>\n",
              "      <td>0.068000</td>\n",
              "      <td>9.506363</td>\n",
              "      <td>7.537430</td>\n",
              "      <td>8.455105</td>\n",
              "      <td>5.429346</td>\n",
              "      <td>0.452667</td>\n",
              "      <td>1559</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>S0GDSC09MACCLBJP</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000133</td>\n",
              "      <td>0.000400</td>\n",
              "      <td>0.000133</td>\n",
              "      <td>0</td>\n",
              "      <td>0.240000</td>\n",
              "      <td>1</td>\n",
              "      <td>0.709467</td>\n",
              "      <td>11</td>\n",
              "      <td>0.225467</td>\n",
              "      <td>12.734254</td>\n",
              "      <td>7.046647</td>\n",
              "      <td>10.882133</td>\n",
              "      <td>8.303009</td>\n",
              "      <td>1.614724</td>\n",
              "      <td>6342</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CRSEMK4QER6LDJSA</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0.000133</td>\n",
              "      <td>0.001733</td>\n",
              "      <td>0.138400</td>\n",
              "      <td>0</td>\n",
              "      <td>0.103200</td>\n",
              "      <td>1</td>\n",
              "      <td>0.709467</td>\n",
              "      <td>11</td>\n",
              "      <td>0.068000</td>\n",
              "      <td>9.128696</td>\n",
              "      <td>4.543295</td>\n",
              "      <td>8.093157</td>\n",
              "      <td>4.875197</td>\n",
              "      <td>1.593898</td>\n",
              "      <td>1078</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                  Personal URL  ...  Avg_seconds_binned_(34.595, 48.885]\n",
              "Id                              ...                                     \n",
              "AL85S14OMDPF01I9             0  ...                                    0\n",
              "HI11QOPD7BLJTO7Q             0  ...                                    0\n",
              "JS49LP5P72RI1OQB             0  ...                                    0\n",
              "S0GDSC09MACCLBJP             1  ...                                    0\n",
              "CRSEMK4QER6LDJSA             1  ...                                    0\n",
              "\n",
              "[5 rows x 30 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TN6YdUNZAbES"
      },
      "source": [
        "# Standardize features by removing the mean and scaling to unit variance"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3bJdlagKeWN8"
      },
      "source": [
        "#Standardization - Train\n",
        "df_train_stand = df_train.copy()\n",
        "for i in x_col:\n",
        "    \n",
        "    # fit on training data column\n",
        "    scale = StandardScaler().fit(df_train_stand[[i]])\n",
        "    \n",
        "    # transform the training data column\n",
        "    df_train_stand[i] = scale.transform(df_train_stand[[i]])"
      ],
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VqMNgoaqeYSV"
      },
      "source": [
        "# #Standardization - Test\n",
        "df_test_stand = df_test.copy()\n",
        "for i in x_col:\n",
        "    \n",
        "    # fit on training data column\n",
        "    scale = StandardScaler().fit(df_test_stand[[i]])\n",
        "    \n",
        "    # transform the training data column\n",
        "    df_test_stand[i] = scale.transform(df_test_stand[[i]])"
      ],
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 306
        },
        "id": "DVFifqfQHaFF",
        "outputId": "b5693e77-ba3d-405d-e09a-d43776205fab"
      },
      "source": [
        "df_test_stand.head()"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Personal URL</th>\n",
              "      <th>Profile Cover Image Status</th>\n",
              "      <th>Profile Text Color</th>\n",
              "      <th>Profile Page Color</th>\n",
              "      <th>Profile Theme Color</th>\n",
              "      <th>Is Profile View Size Customized?</th>\n",
              "      <th>UTC Offset</th>\n",
              "      <th>Location Public Visibility</th>\n",
              "      <th>User Language</th>\n",
              "      <th>Profile Creation Timestamp</th>\n",
              "      <th>User Time Zone</th>\n",
              "      <th>Num of Followers</th>\n",
              "      <th>Num of People Following</th>\n",
              "      <th>Num of Status Updates</th>\n",
              "      <th>Num of Direct Messages</th>\n",
              "      <th>Avg Daily Profile Clicks</th>\n",
              "      <th>Profile Verification Status_Pending</th>\n",
              "      <th>Profile Verification Status_Verified</th>\n",
              "      <th>Profile Category_celebrity</th>\n",
              "      <th>Profile Category_government</th>\n",
              "      <th>Profile Category_unknown</th>\n",
              "      <th>Avg_seconds_binned_(14.795, 18.03]</th>\n",
              "      <th>Avg_seconds_binned_(18.03, 20.691]</th>\n",
              "      <th>Avg_seconds_binned_(20.691, 23.205]</th>\n",
              "      <th>Avg_seconds_binned_(23.205, 25.48]</th>\n",
              "      <th>Avg_seconds_binned_(25.48, 28.132]</th>\n",
              "      <th>Avg_seconds_binned_(28.132, 31.091]</th>\n",
              "      <th>Avg_seconds_binned_(31.091, 34.595]</th>\n",
              "      <th>Avg_seconds_binned_(34.595, 48.885]</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Id</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>49I3SOKLI2CMNGP4</th>\n",
              "      <td>-0.842607</td>\n",
              "      <td>0.553939</td>\n",
              "      <td>-0.672092</td>\n",
              "      <td>-0.898982</td>\n",
              "      <td>-0.991759</td>\n",
              "      <td>-0.306744</td>\n",
              "      <td>-0.201833</td>\n",
              "      <td>0.810387</td>\n",
              "      <td>0.632098</td>\n",
              "      <td>0.626117</td>\n",
              "      <td>-0.698913</td>\n",
              "      <td>-0.573458</td>\n",
              "      <td>0.660997</td>\n",
              "      <td>0.173938</td>\n",
              "      <td>-0.093824</td>\n",
              "      <td>0.363523</td>\n",
              "      <td>-0.280207</td>\n",
              "      <td>-1.355612</td>\n",
              "      <td>-0.476755</td>\n",
              "      <td>-0.311404</td>\n",
              "      <td>-0.970048</td>\n",
              "      <td>-0.315253</td>\n",
              "      <td>-0.325124</td>\n",
              "      <td>-0.351562</td>\n",
              "      <td>-0.306744</td>\n",
              "      <td>-0.353712</td>\n",
              "      <td>-0.331107</td>\n",
              "      <td>-0.312947</td>\n",
              "      <td>-0.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>727IRIR59A3P88LK</th>\n",
              "      <td>-0.842607</td>\n",
              "      <td>-1.805254</td>\n",
              "      <td>-0.470225</td>\n",
              "      <td>-0.885198</td>\n",
              "      <td>-0.991759</td>\n",
              "      <td>-0.306744</td>\n",
              "      <td>-1.609635</td>\n",
              "      <td>0.810387</td>\n",
              "      <td>0.632098</td>\n",
              "      <td>0.626117</td>\n",
              "      <td>-0.975986</td>\n",
              "      <td>-0.448888</td>\n",
              "      <td>-0.347638</td>\n",
              "      <td>0.112489</td>\n",
              "      <td>0.595338</td>\n",
              "      <td>0.300904</td>\n",
              "      <td>-0.280207</td>\n",
              "      <td>-1.355612</td>\n",
              "      <td>-0.476755</td>\n",
              "      <td>3.211264</td>\n",
              "      <td>-0.970048</td>\n",
              "      <td>-0.315253</td>\n",
              "      <td>-0.325124</td>\n",
              "      <td>-0.351562</td>\n",
              "      <td>3.260047</td>\n",
              "      <td>-0.353712</td>\n",
              "      <td>-0.331107</td>\n",
              "      <td>-0.312947</td>\n",
              "      <td>-0.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LN95SD15SRPCEE8F</th>\n",
              "      <td>1.186793</td>\n",
              "      <td>0.553939</td>\n",
              "      <td>-0.672092</td>\n",
              "      <td>-0.444120</td>\n",
              "      <td>0.888061</td>\n",
              "      <td>-0.306744</td>\n",
              "      <td>0.399250</td>\n",
              "      <td>0.810387</td>\n",
              "      <td>0.632098</td>\n",
              "      <td>-0.495153</td>\n",
              "      <td>0.700309</td>\n",
              "      <td>2.328575</td>\n",
              "      <td>-0.154778</td>\n",
              "      <td>-0.019158</td>\n",
              "      <td>2.381361</td>\n",
              "      <td>2.476554</td>\n",
              "      <td>-0.280207</td>\n",
              "      <td>0.737674</td>\n",
              "      <td>-0.476755</td>\n",
              "      <td>-0.311404</td>\n",
              "      <td>1.030876</td>\n",
              "      <td>-0.315253</td>\n",
              "      <td>-0.325124</td>\n",
              "      <td>-0.351562</td>\n",
              "      <td>-0.306744</td>\n",
              "      <td>2.827155</td>\n",
              "      <td>-0.331107</td>\n",
              "      <td>-0.312947</td>\n",
              "      <td>-0.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TB11I7F0PN033D4T</th>\n",
              "      <td>-0.842607</td>\n",
              "      <td>0.553939</td>\n",
              "      <td>-0.612719</td>\n",
              "      <td>-0.879684</td>\n",
              "      <td>-0.660654</td>\n",
              "      <td>-0.306744</td>\n",
              "      <td>0.399250</td>\n",
              "      <td>-1.233979</td>\n",
              "      <td>0.632098</td>\n",
              "      <td>1.747387</td>\n",
              "      <td>0.700309</td>\n",
              "      <td>0.233201</td>\n",
              "      <td>0.124461</td>\n",
              "      <td>0.048541</td>\n",
              "      <td>0.800088</td>\n",
              "      <td>-0.307266</td>\n",
              "      <td>-0.280207</td>\n",
              "      <td>0.737674</td>\n",
              "      <td>2.097515</td>\n",
              "      <td>-0.311404</td>\n",
              "      <td>-0.970048</td>\n",
              "      <td>-0.315253</td>\n",
              "      <td>-0.325124</td>\n",
              "      <td>-0.351562</td>\n",
              "      <td>-0.306744</td>\n",
              "      <td>2.827155</td>\n",
              "      <td>-0.331107</td>\n",
              "      <td>-0.312947</td>\n",
              "      <td>-0.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32PSGCK5PATHMR07</th>\n",
              "      <td>1.186793</td>\n",
              "      <td>0.553939</td>\n",
              "      <td>-0.672092</td>\n",
              "      <td>1.391869</td>\n",
              "      <td>0.380723</td>\n",
              "      <td>-0.306744</td>\n",
              "      <td>1.490692</td>\n",
              "      <td>0.810387</td>\n",
              "      <td>0.632098</td>\n",
              "      <td>-1.055788</td>\n",
              "      <td>1.577709</td>\n",
              "      <td>-1.899801</td>\n",
              "      <td>0.549024</td>\n",
              "      <td>-1.361331</td>\n",
              "      <td>-2.118036</td>\n",
              "      <td>0.594465</td>\n",
              "      <td>-0.280207</td>\n",
              "      <td>-1.355612</td>\n",
              "      <td>-0.476755</td>\n",
              "      <td>-0.311404</td>\n",
              "      <td>1.030876</td>\n",
              "      <td>3.172057</td>\n",
              "      <td>-0.325124</td>\n",
              "      <td>-0.351562</td>\n",
              "      <td>-0.306744</td>\n",
              "      <td>-0.353712</td>\n",
              "      <td>-0.331107</td>\n",
              "      <td>-0.312947</td>\n",
              "      <td>-0.333333</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                  Personal URL  ...  Avg_seconds_binned_(34.595, 48.885]\n",
              "Id                              ...                                     \n",
              "49I3SOKLI2CMNGP4     -0.842607  ...                            -0.333333\n",
              "727IRIR59A3P88LK     -0.842607  ...                            -0.333333\n",
              "LN95SD15SRPCEE8F      1.186793  ...                            -0.333333\n",
              "TB11I7F0PN033D4T     -0.842607  ...                            -0.333333\n",
              "32PSGCK5PATHMR07      1.186793  ...                            -0.333333\n",
              "\n",
              "[5 rows x 29 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VwI_WyJveZw8",
        "outputId": "67188eeb-ebe6-4bab-bc8e-522f3b050448"
      },
      "source": [
        "# pearson's correlation feature selection \n",
        "from sklearn.feature_selection import SelectKBest\n",
        "from sklearn.feature_selection import f_regression\n",
        "from sklearn.feature_selection import mutual_info_regression\n",
        "# define feature selection\n",
        "fs = SelectKBest(score_func=mutual_info_regression, k='all')\n",
        "# apply feature selection\n",
        "X_selected = fs.fit_transform(df_train_stand[x_col], df_train_stand[y_col].values.ravel())\n",
        "names = df_train_stand[x_col].columns.values[fs.get_support()]\n",
        "scores = fs.scores_[fs.get_support()]\n",
        "names_scores = list(zip(names, scores))\n",
        "ns_df = pd.DataFrame(data = names_scores, columns=['Feat_names', 'F_Scores'])\n",
        "#Sort the dataframe for better visualization\n",
        "ns_df_sorted = ns_df.sort_values(['F_Scores', 'Feat_names'], ascending = [False, True])\n",
        "print(ns_df_sorted)"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "                              Feat_names  F_Scores\n",
            "15                          Personal URL  0.242404\n",
            "14                 Num of Status Updates  0.127864\n",
            "13               Num of People Following  0.122654\n",
            "0               Avg Daily Profile Clicks  0.090525\n",
            "11                Num of Direct Messages  0.056677\n",
            "12                      Num of Followers  0.056263\n",
            "18              Profile Category_unknown  0.042424\n",
            "26                            UTC Offset  0.038924\n",
            "10            Location Public Visibility  0.034167\n",
            "28                        User Time Zone  0.031336\n",
            "27                         User Language  0.029885\n",
            "20            Profile Creation Timestamp  0.024382\n",
            "25  Profile Verification Status_Verified  0.023706\n",
            "16            Profile Category_celebrity  0.022705\n",
            "22                    Profile Text Color  0.014056\n",
            "19            Profile Cover Image Status  0.010369\n",
            "21                    Profile Page Color  0.008737\n",
            "6    Avg_seconds_binned_(28.132, 31.091]  0.007520\n",
            "9       Is Profile View Size Customized?  0.006633\n",
            "4     Avg_seconds_binned_(23.205, 25.48]  0.005482\n",
            "8    Avg_seconds_binned_(34.595, 48.885]  0.004829\n",
            "23                   Profile Theme Color  0.003701\n",
            "24   Profile Verification Status_Pending  0.003108\n",
            "17           Profile Category_government  0.001555\n",
            "1     Avg_seconds_binned_(14.795, 18.03]  0.000000\n",
            "2     Avg_seconds_binned_(18.03, 20.691]  0.000000\n",
            "3    Avg_seconds_binned_(20.691, 23.205]  0.000000\n",
            "5     Avg_seconds_binned_(25.48, 28.132]  0.000000\n",
            "7    Avg_seconds_binned_(31.091, 34.595]  0.000000\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iUzJDmAwHKYC",
        "outputId": "39a50d08-05bf-4edd-f811-4b33cbc084f7"
      },
      "source": [
        "from sklearn.feature_selection import SelectPercentile, chi2\n",
        "percentileDriven = SelectPercentile(chi2, percentile=90)\n",
        "X_selected_percentile = percentileDriven.fit_transform(df_train[x_col], df_train[y_col].values.ravel())\n",
        "scores = percentileDriven.scores_[percentileDriven.get_support()]\n",
        "names_scores = list(zip(names, scores))\n",
        "ns_df = pd.DataFrame(data = names_scores, columns=['Feat_names', 'F_Scores'])\n",
        "#Sort the dataframe for better visualization\n",
        "ns_df_sorted_ = ns_df.sort_values(['F_Scores', 'Feat_names'], ascending = [False, True])\n",
        "print(ns_df_sorted_)"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "                              Feat_names     F_Scores\n",
            "17           Profile Category_government  4212.485672\n",
            "6    Avg_seconds_binned_(28.132, 31.091]  3982.383427\n",
            "16            Profile Category_celebrity  3953.025202\n",
            "8    Avg_seconds_binned_(34.595, 48.885]  3941.868557\n",
            "1     Avg_seconds_binned_(14.795, 18.03]  3883.344224\n",
            "4     Avg_seconds_binned_(23.205, 25.48]  3852.907740\n",
            "3    Avg_seconds_binned_(20.691, 23.205]  3800.825698\n",
            "7    Avg_seconds_binned_(31.091, 34.595]  3779.143503\n",
            "2     Avg_seconds_binned_(18.03, 20.691]  3752.908914\n",
            "5     Avg_seconds_binned_(25.48, 28.132]  3692.990942\n",
            "23                   Profile Theme Color  3430.539288\n",
            "15                          Personal URL  3234.938708\n",
            "13               Num of People Following  3165.851710\n",
            "9       Is Profile View Size Customized?  2938.158294\n",
            "18              Profile Category_unknown  2313.813547\n",
            "11                Num of Direct Messages  2093.442995\n",
            "10            Location Public Visibility  1867.504400\n",
            "12                      Num of Followers  1677.138152\n",
            "24   Profile Verification Status_Pending  1505.454224\n",
            "20            Profile Creation Timestamp  1337.394841\n",
            "14                 Num of Status Updates  1163.324419\n",
            "19            Profile Cover Image Status  1075.907177\n",
            "0               Avg Daily Profile Clicks   855.595977\n",
            "25  Profile Verification Status_Verified   681.260899\n",
            "21                    Profile Page Color   663.001429\n",
            "22                    Profile Text Color   402.429486\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TnbeoTgZGcdb"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "j8s-l1sWGff9"
      },
      "source": [
        "# Data Selection "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8oxIP-9rFMah"
      },
      "source": [
        "x_col_top_5 = list(ns_df_sorted['Feat_names'][0:5])\n",
        "x_col_top_6 = list(ns_df_sorted['Feat_names'][0:6])\n",
        "x_col_top_10 = ns_df_sorted['Feat_names'][0:10]\n",
        "x_col_top_15 = ns_df_sorted['Feat_names'][0:15]\n",
        "x_col_top_18 = ns_df_sorted['Feat_names'][0:18]\n",
        "x_col_top_20 = ns_df_sorted['Feat_names'][0:20]\n",
        "x_col_top_20 = ns_df_sorted['Feat_names'][0:20]\n",
        "x_col_all = ns_df_sorted['Feat_names']\n",
        "x_col_top_24 = ns_df_sorted['Feat_names'][0:24]\n",
        "x_col_top_21 = ns_df_sorted['Feat_names'][0:21]"
      ],
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "069OoamFf1rR"
      },
      "source": [
        "# Models\n",
        "\n",
        "Code using different variants of a Neural Network"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9y-w-IoKFPgZ"
      },
      "source": [
        "def plot_loss(history):\n",
        "  plt.plot(history.history['loss'], label='loss')\n",
        "  plt.plot(history.history['val_loss'], label='val_loss')\n",
        "  plt.ylim([0, 10])\n",
        "  plt.xlabel('Epoch')\n",
        "  plt.ylabel('Error [MPG]')\n",
        "  plt.legend()\n",
        "  plt.grid(True)"
      ],
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wU-YKm_hFUuo"
      },
      "source": [
        "from keras.constraints import max_norm\n",
        "def setup_model(data_input, columns, width_multiplier=3):\n",
        "  \"\"\" width_first approach \"\"\"\n",
        "  num_features = data_input[columns].shape[1]\n",
        "  model = Sequential()\n",
        "  # first layer \n",
        "  model.add(Dense(num_features*width_multiplier, activation='relu', input_dim=num_features, kernel_regularizer=regularizers.l2(0.001), kernel_constraint=max_norm(3), bias_constraint=max_norm(3)))\n",
        "  model.add(Dropout(0.3))\n",
        "  # hidden layer layer\n",
        "  model.add(Dense(num_features*width_multiplier, activation='relu', kernel_regularizer=regularizers.l2(0.001), kernel_constraint=max_norm(3), bias_constraint=max_norm(3)))\n",
        "  model.add(Dropout(0.3))\n",
        "  # probably no dropout here {to see?} -> depends on overfit\n",
        "  model.add(Dense(1, kernel_initializer='normal'))\n",
        "  print(model.summary())\n",
        "  return model\n",
        "\n",
        "  \n",
        "\n",
        "def setup_model_smaller(data_input, columns, width_multiplier=3):\n",
        "  num_features = data_input[columns].shape[1]\n",
        "  model = Sequential()\n",
        "  model.add(Dense(num_features*1, activation='relu', input_dim=num_features, kernel_regularizer=regularizers.l2(0.001)))\n",
        "  model.add(Dropout(0.3))\n",
        "  model.add(Dense(10, activation='relu', kernel_regularizer=regularizers.l2(0.001)))\n",
        "  model.add(Dropout(0.3))\n",
        "  model.add(Dense(1, kernel_initializer='normal'))\n",
        "  print(model.summary())\n",
        "  return model\n",
        "\n",
        "\n",
        "def setup_deeper_model(data_input, columns):\n",
        "   \"\"\"\n",
        "    depth first approach  \n",
        "  \"\"\"\n",
        "   num_features = data_input[columns].shape[1]\n",
        "   model = Sequential()\n",
        "   model.add(Dense(num_features*1, activation='relu', input_dim=num_features, kernel_regularizer=regularizers.l2(0.001)))\n",
        "   model.add(Dropout(0.3))\n",
        "   #model.add(Dense(num_features*width_multiplier, activation='relu', kernel_regularizer=regularizers.l2(0.001)))\n",
        "   model.add(Dense(29*5, activation='relu', kernel_regularizer=regularizers.l2(0.001)))\n",
        "   model.add(Dropout(0.5))\n",
        "   model.add(Dense(num_features, activation='relu', input_dim=num_features, kernel_regularizer=regularizers.l2(0.001)))\n",
        " \n",
        "   model.add(Dense(1, kernel_initializer='normal'))\n",
        "   print(model.summary())\n",
        "   return model\n",
        " \n",
        "def add_model_weighing(data_input, columns):\n",
        "    from keras.layers import Dense\n",
        "    from keras.layers import Flatten\n",
        "    from keras.constraints import max_norm\n",
        "    num_features = data_input[columns].shape[1]\n",
        "    model = Sequential()\n",
        "    model.add(Dense(num_features*1, activation='relu', input_dim=num_features, kernel_regularizer=regularizers.l2(0.001), kernel_constraint=max_norm(3), bias_constraint=max_norm(3) ))\n",
        "    model.add(Dropout(0.3))\n",
        "    model.add(Dense(num_features*2, activation='relu', kernel_regularizer=regularizers.l2(0.001)))\n",
        "    model.add(Flatten())\n",
        "    #model.add(Dropout(0.3))\n",
        "    # probably no dropout here {to see?} -> depends on overfit\n",
        "    model.add(Dense(1, kernel_initializer='normal'))\n",
        "    print(model.summary())\n",
        "    return model\n"
      ],
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f-m1Em7wFmx1"
      },
      "source": [
        "from keras.optimizers import Adam\n",
        "def run_training(data_set, \n",
        "                 x_columns, \n",
        "                 batch_size=8, \n",
        "                 epochs=100, \n",
        "                 validation_split=0.2, \n",
        "                 width_multiplier=3, \n",
        "                 use_deep_model=False,\n",
        "                 use_smaller=False):\n",
        "  \"\"\"\n",
        "    hyperparameter list \n",
        "  \"\"\"\n",
        "  \n",
        "\n",
        "  if use_deep_model:\n",
        "      model = setup_deeper_model(data_input=data_set, columns=x_columns)\n",
        "  elif use_smaller:\n",
        "      model = setup_model_smaller(data_input=data_set, columns=x_columns, width_multiplier=width_multiplier)\n",
        "  else:\n",
        "      model = setup_model(data_input=data_set, columns=x_columns, width_multiplier=width_multiplier)\n",
        "  \n",
        "  model.compile(optimizer='adam', loss='mean_squared_logarithmic_error', metrics='mean_squared_logarithmic_error')\n",
        "  history = model.fit(df_train_stand[x_columns] , \n",
        "                      df_train[y_col], \n",
        "                      batch_size=batch_size, \n",
        "                      epochs=epochs,\n",
        "                      validation_split=0.2, \n",
        "                      shuffle=True)\n",
        "  plot_loss(history)\n",
        "  return model\n",
        "\n",
        "def run_training_weights(data_set, \n",
        "                 x_columns, \n",
        "                 batch_size=8, \n",
        "                 epochs=100, \n",
        "                 validation_split=0.2, \n",
        "                 width_multiplier=3, \n",
        "                 use_deep_model=False,\n",
        "                 use_smaller=False):\n",
        "  \"\"\"\n",
        "    hyperparameter list \n",
        "  \"\"\"\n",
        "  model = add_model_weighing(data_input=data_set, columns=x_columns)\n",
        "  model.compile(optimizer=Adam(lr=0.001), \n",
        "                loss='mean_squared_logarithmic_error', \n",
        "                metrics='mean_squared_logarithmic_error')\n",
        "  history = model.fit(data_set[x_columns] , \n",
        "                      df_train[y_col], \n",
        "                      batch_size=batch_size, \n",
        "                      epochs=epochs,\n",
        "                      validation_split=0.1, \n",
        "                      shuffle=True)\n",
        "  plot_loss(history)\n",
        "  return model"
      ],
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VoSUW6t4IMYa"
      },
      "source": [
        "# Training Setup\n",
        "Permutations of training strategies \n",
        "1. Width Multiply Model {15 features, x 10}\n",
        "2. Deeper Model {capture more of the * features* {use all features}}"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m3CQpLU9N1O3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "4934b0d8-3716-4415-9108-eb5c6900a18b"
      },
      "source": [
        "model_22_width_15 = run_training(data_set=df_train_stand, x_columns=x_col_top_15, width_multiplier=10, epochs=200)"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_2\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_6 (Dense)              (None, 150)               2400      \n",
            "_________________________________________________________________\n",
            "dropout_4 (Dropout)          (None, 150)               0         \n",
            "_________________________________________________________________\n",
            "dense_7 (Dense)              (None, 150)               22650     \n",
            "_________________________________________________________________\n",
            "dropout_5 (Dropout)          (None, 150)               0         \n",
            "_________________________________________________________________\n",
            "dense_8 (Dense)              (None, 1)                 151       \n",
            "=================================================================\n",
            "Total params: 25,201\n",
            "Trainable params: 25,201\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "Epoch 1/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 20.2945 - mean_squared_logarithmic_error: 20.0079 - val_loss: 6.6404 - val_mean_squared_logarithmic_error: 6.0825\n",
            "Epoch 2/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 5.6785 - mean_squared_logarithmic_error: 5.0842 - val_loss: 5.3540 - val_mean_squared_logarithmic_error: 4.6913\n",
            "Epoch 3/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 4.6647 - mean_squared_logarithmic_error: 3.9950 - val_loss: 4.8999 - val_mean_squared_logarithmic_error: 4.2434\n",
            "Epoch 4/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 4.3265 - mean_squared_logarithmic_error: 3.6785 - val_loss: 4.6529 - val_mean_squared_logarithmic_error: 4.0447\n",
            "Epoch 5/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 4.0792 - mean_squared_logarithmic_error: 3.4815 - val_loss: 4.4903 - val_mean_squared_logarithmic_error: 3.9270\n",
            "Epoch 6/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.9176 - mean_squared_logarithmic_error: 3.3570 - val_loss: 4.3853 - val_mean_squared_logarithmic_error: 3.8837\n",
            "Epoch 7/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.8153 - mean_squared_logarithmic_error: 3.3190 - val_loss: 4.2888 - val_mean_squared_logarithmic_error: 3.7878\n",
            "Epoch 8/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.6755 - mean_squared_logarithmic_error: 3.1875 - val_loss: 4.2357 - val_mean_squared_logarithmic_error: 3.7792\n",
            "Epoch 9/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.5075 - mean_squared_logarithmic_error: 3.0560 - val_loss: 4.1809 - val_mean_squared_logarithmic_error: 3.7535\n",
            "Epoch 10/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.6142 - mean_squared_logarithmic_error: 3.1903 - val_loss: 4.1554 - val_mean_squared_logarithmic_error: 3.7531\n",
            "Epoch 11/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.4688 - mean_squared_logarithmic_error: 3.0672 - val_loss: 4.1214 - val_mean_squared_logarithmic_error: 3.7341\n",
            "Epoch 12/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.5119 - mean_squared_logarithmic_error: 3.1299 - val_loss: 4.0708 - val_mean_squared_logarithmic_error: 3.6983\n",
            "Epoch 13/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3770 - mean_squared_logarithmic_error: 3.0132 - val_loss: 4.0470 - val_mean_squared_logarithmic_error: 3.6922\n",
            "Epoch 14/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.4452 - mean_squared_logarithmic_error: 3.0937 - val_loss: 4.0033 - val_mean_squared_logarithmic_error: 3.6568\n",
            "Epoch 15/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3694 - mean_squared_logarithmic_error: 3.0307 - val_loss: 3.9825 - val_mean_squared_logarithmic_error: 3.6596\n",
            "Epoch 16/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.4078 - mean_squared_logarithmic_error: 3.0865 - val_loss: 3.9806 - val_mean_squared_logarithmic_error: 3.6704\n",
            "Epoch 17/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.4036 - mean_squared_logarithmic_error: 3.0927 - val_loss: 3.9668 - val_mean_squared_logarithmic_error: 3.6613\n",
            "Epoch 18/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3957 - mean_squared_logarithmic_error: 3.0914 - val_loss: 3.9860 - val_mean_squared_logarithmic_error: 3.6936\n",
            "Epoch 19/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3574 - mean_squared_logarithmic_error: 3.0679 - val_loss: 3.9644 - val_mean_squared_logarithmic_error: 3.6729\n",
            "Epoch 20/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.4630 - mean_squared_logarithmic_error: 3.1779 - val_loss: 3.9143 - val_mean_squared_logarithmic_error: 3.6277\n",
            "Epoch 21/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3020 - mean_squared_logarithmic_error: 3.0200 - val_loss: 3.9174 - val_mean_squared_logarithmic_error: 3.6473\n",
            "Epoch 22/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2190 - mean_squared_logarithmic_error: 2.9468 - val_loss: 3.9115 - val_mean_squared_logarithmic_error: 3.6480\n",
            "Epoch 23/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1948 - mean_squared_logarithmic_error: 2.9319 - val_loss: 3.9238 - val_mean_squared_logarithmic_error: 3.6618\n",
            "Epoch 24/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3294 - mean_squared_logarithmic_error: 3.0730 - val_loss: 3.9179 - val_mean_squared_logarithmic_error: 3.6578\n",
            "Epoch 25/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2609 - mean_squared_logarithmic_error: 3.0053 - val_loss: 3.8970 - val_mean_squared_logarithmic_error: 3.6372\n",
            "Epoch 26/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2763 - mean_squared_logarithmic_error: 3.0215 - val_loss: 3.8943 - val_mean_squared_logarithmic_error: 3.6415\n",
            "Epoch 27/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2715 - mean_squared_logarithmic_error: 3.0237 - val_loss: 3.8742 - val_mean_squared_logarithmic_error: 3.6334\n",
            "Epoch 28/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2399 - mean_squared_logarithmic_error: 2.9965 - val_loss: 3.8697 - val_mean_squared_logarithmic_error: 3.6284\n",
            "Epoch 29/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3355 - mean_squared_logarithmic_error: 3.0978 - val_loss: 3.8733 - val_mean_squared_logarithmic_error: 3.6308\n",
            "Epoch 30/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2386 - mean_squared_logarithmic_error: 3.0012 - val_loss: 3.8704 - val_mean_squared_logarithmic_error: 3.6353\n",
            "Epoch 31/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2373 - mean_squared_logarithmic_error: 3.0032 - val_loss: 3.8481 - val_mean_squared_logarithmic_error: 3.6187\n",
            "Epoch 32/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2880 - mean_squared_logarithmic_error: 3.0577 - val_loss: 3.8633 - val_mean_squared_logarithmic_error: 3.6266\n",
            "Epoch 33/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2400 - mean_squared_logarithmic_error: 3.0074 - val_loss: 3.8885 - val_mean_squared_logarithmic_error: 3.6630\n",
            "Epoch 34/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1688 - mean_squared_logarithmic_error: 2.9389 - val_loss: 3.8412 - val_mean_squared_logarithmic_error: 3.6187\n",
            "Epoch 35/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1447 - mean_squared_logarithmic_error: 2.9211 - val_loss: 3.8502 - val_mean_squared_logarithmic_error: 3.6322\n",
            "Epoch 36/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2161 - mean_squared_logarithmic_error: 2.9965 - val_loss: 3.8679 - val_mean_squared_logarithmic_error: 3.6602\n",
            "Epoch 37/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1733 - mean_squared_logarithmic_error: 2.9572 - val_loss: 3.8600 - val_mean_squared_logarithmic_error: 3.6394\n",
            "Epoch 38/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2940 - mean_squared_logarithmic_error: 3.0768 - val_loss: 3.8241 - val_mean_squared_logarithmic_error: 3.6098\n",
            "Epoch 39/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1321 - mean_squared_logarithmic_error: 2.9160 - val_loss: 3.8652 - val_mean_squared_logarithmic_error: 3.6562\n",
            "Epoch 40/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2172 - mean_squared_logarithmic_error: 3.0048 - val_loss: 3.8793 - val_mean_squared_logarithmic_error: 3.6702\n",
            "Epoch 41/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2359 - mean_squared_logarithmic_error: 3.0225 - val_loss: 3.8303 - val_mean_squared_logarithmic_error: 3.6196\n",
            "Epoch 42/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0510 - mean_squared_logarithmic_error: 2.8384 - val_loss: 3.8862 - val_mean_squared_logarithmic_error: 3.6857\n",
            "Epoch 43/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0818 - mean_squared_logarithmic_error: 2.8737 - val_loss: 3.8378 - val_mean_squared_logarithmic_error: 3.6249\n",
            "Epoch 44/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2217 - mean_squared_logarithmic_error: 3.0118 - val_loss: 3.8326 - val_mean_squared_logarithmic_error: 3.6293\n",
            "Epoch 45/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1723 - mean_squared_logarithmic_error: 2.9681 - val_loss: 3.8326 - val_mean_squared_logarithmic_error: 3.6227\n",
            "Epoch 46/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1061 - mean_squared_logarithmic_error: 2.9015 - val_loss: 3.8076 - val_mean_squared_logarithmic_error: 3.6060\n",
            "Epoch 47/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2259 - mean_squared_logarithmic_error: 3.0215 - val_loss: 3.8288 - val_mean_squared_logarithmic_error: 3.6299\n",
            "Epoch 48/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1816 - mean_squared_logarithmic_error: 2.9805 - val_loss: 3.8263 - val_mean_squared_logarithmic_error: 3.6183\n",
            "Epoch 49/200\n",
            "747/747 [==============================] - 2s 3ms/step - loss: 3.1958 - mean_squared_logarithmic_error: 2.9919 - val_loss: 3.8260 - val_mean_squared_logarithmic_error: 3.6261\n",
            "Epoch 50/200\n",
            "747/747 [==============================] - 2s 3ms/step - loss: 3.1219 - mean_squared_logarithmic_error: 2.9194 - val_loss: 3.7990 - val_mean_squared_logarithmic_error: 3.5960\n",
            "Epoch 51/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2013 - mean_squared_logarithmic_error: 3.0017 - val_loss: 3.8184 - val_mean_squared_logarithmic_error: 3.6133\n",
            "Epoch 52/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2235 - mean_squared_logarithmic_error: 3.0212 - val_loss: 3.7904 - val_mean_squared_logarithmic_error: 3.5854\n",
            "Epoch 53/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0331 - mean_squared_logarithmic_error: 2.8315 - val_loss: 3.7975 - val_mean_squared_logarithmic_error: 3.5961\n",
            "Epoch 54/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1183 - mean_squared_logarithmic_error: 2.9193 - val_loss: 3.7952 - val_mean_squared_logarithmic_error: 3.5907\n",
            "Epoch 55/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2679 - mean_squared_logarithmic_error: 3.0670 - val_loss: 3.7835 - val_mean_squared_logarithmic_error: 3.5839\n",
            "Epoch 56/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2257 - mean_squared_logarithmic_error: 3.0279 - val_loss: 3.7859 - val_mean_squared_logarithmic_error: 3.5869\n",
            "Epoch 57/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1733 - mean_squared_logarithmic_error: 2.9772 - val_loss: 3.7877 - val_mean_squared_logarithmic_error: 3.5877\n",
            "Epoch 58/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2624 - mean_squared_logarithmic_error: 3.0621 - val_loss: 3.8370 - val_mean_squared_logarithmic_error: 3.6376\n",
            "Epoch 59/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3098 - mean_squared_logarithmic_error: 3.1119 - val_loss: 3.7927 - val_mean_squared_logarithmic_error: 3.5974\n",
            "Epoch 60/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0959 - mean_squared_logarithmic_error: 2.9006 - val_loss: 3.8143 - val_mean_squared_logarithmic_error: 3.6218\n",
            "Epoch 61/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1712 - mean_squared_logarithmic_error: 2.9760 - val_loss: 3.7908 - val_mean_squared_logarithmic_error: 3.5948\n",
            "Epoch 62/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1599 - mean_squared_logarithmic_error: 2.9625 - val_loss: 3.8049 - val_mean_squared_logarithmic_error: 3.6123\n",
            "Epoch 63/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0033 - mean_squared_logarithmic_error: 2.8063 - val_loss: 3.7872 - val_mean_squared_logarithmic_error: 3.5955\n",
            "Epoch 64/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1624 - mean_squared_logarithmic_error: 2.9679 - val_loss: 3.7730 - val_mean_squared_logarithmic_error: 3.5781\n",
            "Epoch 65/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2718 - mean_squared_logarithmic_error: 3.0787 - val_loss: 3.8211 - val_mean_squared_logarithmic_error: 3.6248\n",
            "Epoch 66/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1627 - mean_squared_logarithmic_error: 2.9699 - val_loss: 3.7803 - val_mean_squared_logarithmic_error: 3.5824\n",
            "Epoch 67/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0113 - mean_squared_logarithmic_error: 2.8154 - val_loss: 3.8309 - val_mean_squared_logarithmic_error: 3.6358\n",
            "Epoch 68/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2029 - mean_squared_logarithmic_error: 3.0089 - val_loss: 3.8227 - val_mean_squared_logarithmic_error: 3.6285\n",
            "Epoch 69/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0853 - mean_squared_logarithmic_error: 2.8917 - val_loss: 3.7991 - val_mean_squared_logarithmic_error: 3.6116\n",
            "Epoch 70/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9780 - mean_squared_logarithmic_error: 2.7880 - val_loss: 3.8152 - val_mean_squared_logarithmic_error: 3.6270\n",
            "Epoch 71/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1836 - mean_squared_logarithmic_error: 2.9914 - val_loss: 3.7951 - val_mean_squared_logarithmic_error: 3.6047\n",
            "Epoch 72/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1383 - mean_squared_logarithmic_error: 2.9503 - val_loss: 3.7638 - val_mean_squared_logarithmic_error: 3.5706\n",
            "Epoch 73/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0467 - mean_squared_logarithmic_error: 2.8518 - val_loss: 3.8409 - val_mean_squared_logarithmic_error: 3.6578\n",
            "Epoch 74/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0656 - mean_squared_logarithmic_error: 2.8800 - val_loss: 3.7985 - val_mean_squared_logarithmic_error: 3.6082\n",
            "Epoch 75/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0536 - mean_squared_logarithmic_error: 2.8635 - val_loss: 3.8355 - val_mean_squared_logarithmic_error: 3.6444\n",
            "Epoch 76/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0750 - mean_squared_logarithmic_error: 2.8852 - val_loss: 3.8064 - val_mean_squared_logarithmic_error: 3.6144\n",
            "Epoch 77/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1321 - mean_squared_logarithmic_error: 2.9415 - val_loss: 3.8153 - val_mean_squared_logarithmic_error: 3.6258\n",
            "Epoch 78/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1089 - mean_squared_logarithmic_error: 2.9187 - val_loss: 3.7906 - val_mean_squared_logarithmic_error: 3.6020\n",
            "Epoch 79/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0022 - mean_squared_logarithmic_error: 2.8109 - val_loss: 3.8044 - val_mean_squared_logarithmic_error: 3.6156\n",
            "Epoch 80/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0855 - mean_squared_logarithmic_error: 2.8952 - val_loss: 3.7850 - val_mean_squared_logarithmic_error: 3.5923\n",
            "Epoch 81/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9314 - mean_squared_logarithmic_error: 2.7402 - val_loss: 3.8124 - val_mean_squared_logarithmic_error: 3.6223\n",
            "Epoch 82/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1059 - mean_squared_logarithmic_error: 2.9176 - val_loss: 3.8497 - val_mean_squared_logarithmic_error: 3.6661\n",
            "Epoch 83/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9149 - mean_squared_logarithmic_error: 2.7262 - val_loss: 3.7677 - val_mean_squared_logarithmic_error: 3.5812\n",
            "Epoch 84/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0246 - mean_squared_logarithmic_error: 2.8368 - val_loss: 3.7589 - val_mean_squared_logarithmic_error: 3.5679\n",
            "Epoch 85/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0189 - mean_squared_logarithmic_error: 2.8267 - val_loss: 3.7794 - val_mean_squared_logarithmic_error: 3.5955\n",
            "Epoch 86/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1234 - mean_squared_logarithmic_error: 2.9354 - val_loss: 3.7694 - val_mean_squared_logarithmic_error: 3.5752\n",
            "Epoch 87/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1273 - mean_squared_logarithmic_error: 2.9352 - val_loss: 3.7616 - val_mean_squared_logarithmic_error: 3.5751\n",
            "Epoch 88/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2551 - mean_squared_logarithmic_error: 3.0652 - val_loss: 3.7992 - val_mean_squared_logarithmic_error: 3.6065\n",
            "Epoch 89/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9602 - mean_squared_logarithmic_error: 2.7664 - val_loss: 3.7658 - val_mean_squared_logarithmic_error: 3.5831\n",
            "Epoch 90/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9276 - mean_squared_logarithmic_error: 2.7395 - val_loss: 3.7691 - val_mean_squared_logarithmic_error: 3.5795\n",
            "Epoch 91/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9655 - mean_squared_logarithmic_error: 2.7761 - val_loss: 3.7615 - val_mean_squared_logarithmic_error: 3.5732\n",
            "Epoch 92/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9355 - mean_squared_logarithmic_error: 2.7461 - val_loss: 3.7556 - val_mean_squared_logarithmic_error: 3.5612\n",
            "Epoch 93/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9570 - mean_squared_logarithmic_error: 2.7652 - val_loss: 3.7765 - val_mean_squared_logarithmic_error: 3.5852\n",
            "Epoch 94/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9691 - mean_squared_logarithmic_error: 2.7770 - val_loss: 3.7822 - val_mean_squared_logarithmic_error: 3.5934\n",
            "Epoch 95/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9123 - mean_squared_logarithmic_error: 2.7221 - val_loss: 3.7419 - val_mean_squared_logarithmic_error: 3.5521\n",
            "Epoch 96/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9771 - mean_squared_logarithmic_error: 2.7844 - val_loss: 3.7359 - val_mean_squared_logarithmic_error: 3.5439\n",
            "Epoch 97/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0933 - mean_squared_logarithmic_error: 2.9016 - val_loss: 3.7767 - val_mean_squared_logarithmic_error: 3.5861\n",
            "Epoch 98/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1005 - mean_squared_logarithmic_error: 2.9096 - val_loss: 3.7926 - val_mean_squared_logarithmic_error: 3.6017\n",
            "Epoch 99/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9650 - mean_squared_logarithmic_error: 2.7725 - val_loss: 3.7601 - val_mean_squared_logarithmic_error: 3.5672\n",
            "Epoch 100/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0151 - mean_squared_logarithmic_error: 2.8216 - val_loss: 3.7836 - val_mean_squared_logarithmic_error: 3.5901\n",
            "Epoch 101/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2813 - mean_squared_logarithmic_error: 3.0900 - val_loss: 3.7889 - val_mean_squared_logarithmic_error: 3.5977\n",
            "Epoch 102/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9446 - mean_squared_logarithmic_error: 2.7517 - val_loss: 3.7905 - val_mean_squared_logarithmic_error: 3.6002\n",
            "Epoch 103/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1025 - mean_squared_logarithmic_error: 2.9085 - val_loss: 3.7351 - val_mean_squared_logarithmic_error: 3.5417\n",
            "Epoch 104/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0423 - mean_squared_logarithmic_error: 2.8491 - val_loss: 3.7436 - val_mean_squared_logarithmic_error: 3.5525\n",
            "Epoch 105/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0283 - mean_squared_logarithmic_error: 2.8368 - val_loss: 3.7775 - val_mean_squared_logarithmic_error: 3.5800\n",
            "Epoch 106/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9481 - mean_squared_logarithmic_error: 2.7540 - val_loss: 3.8087 - val_mean_squared_logarithmic_error: 3.6177\n",
            "Epoch 107/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0082 - mean_squared_logarithmic_error: 2.8170 - val_loss: 3.7800 - val_mean_squared_logarithmic_error: 3.5865\n",
            "Epoch 108/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9386 - mean_squared_logarithmic_error: 2.7443 - val_loss: 3.7890 - val_mean_squared_logarithmic_error: 3.6012\n",
            "Epoch 109/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0093 - mean_squared_logarithmic_error: 2.8183 - val_loss: 3.7728 - val_mean_squared_logarithmic_error: 3.5796\n",
            "Epoch 110/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0096 - mean_squared_logarithmic_error: 2.8159 - val_loss: 3.7328 - val_mean_squared_logarithmic_error: 3.5373\n",
            "Epoch 111/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1637 - mean_squared_logarithmic_error: 2.9715 - val_loss: 3.7673 - val_mean_squared_logarithmic_error: 3.5752\n",
            "Epoch 112/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0304 - mean_squared_logarithmic_error: 2.8363 - val_loss: 3.7563 - val_mean_squared_logarithmic_error: 3.5630\n",
            "Epoch 113/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1166 - mean_squared_logarithmic_error: 2.9244 - val_loss: 3.7408 - val_mean_squared_logarithmic_error: 3.5477\n",
            "Epoch 114/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0704 - mean_squared_logarithmic_error: 2.8796 - val_loss: 3.7194 - val_mean_squared_logarithmic_error: 3.5267\n",
            "Epoch 115/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9247 - mean_squared_logarithmic_error: 2.7325 - val_loss: 3.7291 - val_mean_squared_logarithmic_error: 3.5375\n",
            "Epoch 116/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1496 - mean_squared_logarithmic_error: 2.9572 - val_loss: 3.7497 - val_mean_squared_logarithmic_error: 3.5595\n",
            "Epoch 117/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.7947 - mean_squared_logarithmic_error: 2.6028 - val_loss: 3.7798 - val_mean_squared_logarithmic_error: 3.5916\n",
            "Epoch 118/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9262 - mean_squared_logarithmic_error: 2.7346 - val_loss: 3.8016 - val_mean_squared_logarithmic_error: 3.6099\n",
            "Epoch 119/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9963 - mean_squared_logarithmic_error: 2.8062 - val_loss: 3.7406 - val_mean_squared_logarithmic_error: 3.5450\n",
            "Epoch 120/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1407 - mean_squared_logarithmic_error: 2.9481 - val_loss: 3.7086 - val_mean_squared_logarithmic_error: 3.5174\n",
            "Epoch 121/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0784 - mean_squared_logarithmic_error: 2.8878 - val_loss: 3.7325 - val_mean_squared_logarithmic_error: 3.5360\n",
            "Epoch 122/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9770 - mean_squared_logarithmic_error: 2.7823 - val_loss: 3.7447 - val_mean_squared_logarithmic_error: 3.5539\n",
            "Epoch 123/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0384 - mean_squared_logarithmic_error: 2.8461 - val_loss: 3.7426 - val_mean_squared_logarithmic_error: 3.5505\n",
            "Epoch 124/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9071 - mean_squared_logarithmic_error: 2.7158 - val_loss: 3.7068 - val_mean_squared_logarithmic_error: 3.5097\n",
            "Epoch 125/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9056 - mean_squared_logarithmic_error: 2.7099 - val_loss: 3.7501 - val_mean_squared_logarithmic_error: 3.5656\n",
            "Epoch 126/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9915 - mean_squared_logarithmic_error: 2.8024 - val_loss: 3.6743 - val_mean_squared_logarithmic_error: 3.4796\n",
            "Epoch 127/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8522 - mean_squared_logarithmic_error: 2.6586 - val_loss: 3.7627 - val_mean_squared_logarithmic_error: 3.5731\n",
            "Epoch 128/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9437 - mean_squared_logarithmic_error: 2.7515 - val_loss: 3.7805 - val_mean_squared_logarithmic_error: 3.5938\n",
            "Epoch 129/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9838 - mean_squared_logarithmic_error: 2.7938 - val_loss: 3.7253 - val_mean_squared_logarithmic_error: 3.5339\n",
            "Epoch 130/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8846 - mean_squared_logarithmic_error: 2.6917 - val_loss: 3.7646 - val_mean_squared_logarithmic_error: 3.5678\n",
            "Epoch 131/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9926 - mean_squared_logarithmic_error: 2.7988 - val_loss: 3.7350 - val_mean_squared_logarithmic_error: 3.5382\n",
            "Epoch 132/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8334 - mean_squared_logarithmic_error: 2.6386 - val_loss: 3.7578 - val_mean_squared_logarithmic_error: 3.5657\n",
            "Epoch 133/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9225 - mean_squared_logarithmic_error: 2.7266 - val_loss: 3.7107 - val_mean_squared_logarithmic_error: 3.5181\n",
            "Epoch 134/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9857 - mean_squared_logarithmic_error: 2.7909 - val_loss: 3.7093 - val_mean_squared_logarithmic_error: 3.5163\n",
            "Epoch 135/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0156 - mean_squared_logarithmic_error: 2.8226 - val_loss: 3.7259 - val_mean_squared_logarithmic_error: 3.5333\n",
            "Epoch 136/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8420 - mean_squared_logarithmic_error: 2.6470 - val_loss: 3.7592 - val_mean_squared_logarithmic_error: 3.5686\n",
            "Epoch 137/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9850 - mean_squared_logarithmic_error: 2.7917 - val_loss: 3.7099 - val_mean_squared_logarithmic_error: 3.5148\n",
            "Epoch 138/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8104 - mean_squared_logarithmic_error: 2.6152 - val_loss: 3.7413 - val_mean_squared_logarithmic_error: 3.5473\n",
            "Epoch 139/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8447 - mean_squared_logarithmic_error: 2.6477 - val_loss: 3.7247 - val_mean_squared_logarithmic_error: 3.5305\n",
            "Epoch 140/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9166 - mean_squared_logarithmic_error: 2.7226 - val_loss: 3.8149 - val_mean_squared_logarithmic_error: 3.6142\n",
            "Epoch 141/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0704 - mean_squared_logarithmic_error: 2.8744 - val_loss: 3.7052 - val_mean_squared_logarithmic_error: 3.5099\n",
            "Epoch 142/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8418 - mean_squared_logarithmic_error: 2.6472 - val_loss: 3.7269 - val_mean_squared_logarithmic_error: 3.5319\n",
            "Epoch 143/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8614 - mean_squared_logarithmic_error: 2.6672 - val_loss: 3.6922 - val_mean_squared_logarithmic_error: 3.4977\n",
            "Epoch 144/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9654 - mean_squared_logarithmic_error: 2.7694 - val_loss: 3.7068 - val_mean_squared_logarithmic_error: 3.5129\n",
            "Epoch 145/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9576 - mean_squared_logarithmic_error: 2.7632 - val_loss: 3.6936 - val_mean_squared_logarithmic_error: 3.5009\n",
            "Epoch 146/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8526 - mean_squared_logarithmic_error: 2.6586 - val_loss: 3.7087 - val_mean_squared_logarithmic_error: 3.5096\n",
            "Epoch 147/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9276 - mean_squared_logarithmic_error: 2.7297 - val_loss: 3.7037 - val_mean_squared_logarithmic_error: 3.5057\n",
            "Epoch 148/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9284 - mean_squared_logarithmic_error: 2.7323 - val_loss: 3.7448 - val_mean_squared_logarithmic_error: 3.5543\n",
            "Epoch 149/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8340 - mean_squared_logarithmic_error: 2.6414 - val_loss: 3.6709 - val_mean_squared_logarithmic_error: 3.4720\n",
            "Epoch 150/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0814 - mean_squared_logarithmic_error: 2.8837 - val_loss: 3.7008 - val_mean_squared_logarithmic_error: 3.5087\n",
            "Epoch 151/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9724 - mean_squared_logarithmic_error: 2.7781 - val_loss: 3.7260 - val_mean_squared_logarithmic_error: 3.5255\n",
            "Epoch 152/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9688 - mean_squared_logarithmic_error: 2.7720 - val_loss: 3.6993 - val_mean_squared_logarithmic_error: 3.5019\n",
            "Epoch 153/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8850 - mean_squared_logarithmic_error: 2.6890 - val_loss: 3.7125 - val_mean_squared_logarithmic_error: 3.5143\n",
            "Epoch 154/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8954 - mean_squared_logarithmic_error: 2.6986 - val_loss: 3.6923 - val_mean_squared_logarithmic_error: 3.4956\n",
            "Epoch 155/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8767 - mean_squared_logarithmic_error: 2.6793 - val_loss: 3.6838 - val_mean_squared_logarithmic_error: 3.4866\n",
            "Epoch 156/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0238 - mean_squared_logarithmic_error: 2.8259 - val_loss: 3.7346 - val_mean_squared_logarithmic_error: 3.5344\n",
            "Epoch 157/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9672 - mean_squared_logarithmic_error: 2.7697 - val_loss: 3.6939 - val_mean_squared_logarithmic_error: 3.4938\n",
            "Epoch 158/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.7315 - mean_squared_logarithmic_error: 2.5308 - val_loss: 3.6831 - val_mean_squared_logarithmic_error: 3.4890\n",
            "Epoch 159/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8316 - mean_squared_logarithmic_error: 2.6338 - val_loss: 3.7261 - val_mean_squared_logarithmic_error: 3.5306\n",
            "Epoch 160/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9949 - mean_squared_logarithmic_error: 2.8001 - val_loss: 3.6974 - val_mean_squared_logarithmic_error: 3.4962\n",
            "Epoch 161/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0084 - mean_squared_logarithmic_error: 2.8102 - val_loss: 3.7118 - val_mean_squared_logarithmic_error: 3.5160\n",
            "Epoch 162/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8616 - mean_squared_logarithmic_error: 2.6642 - val_loss: 3.7141 - val_mean_squared_logarithmic_error: 3.5150\n",
            "Epoch 163/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9107 - mean_squared_logarithmic_error: 2.7141 - val_loss: 3.6504 - val_mean_squared_logarithmic_error: 3.4504\n",
            "Epoch 164/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8485 - mean_squared_logarithmic_error: 2.6470 - val_loss: 3.6773 - val_mean_squared_logarithmic_error: 3.4816\n",
            "Epoch 165/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9076 - mean_squared_logarithmic_error: 2.7121 - val_loss: 3.6909 - val_mean_squared_logarithmic_error: 3.4926\n",
            "Epoch 166/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9712 - mean_squared_logarithmic_error: 2.7734 - val_loss: 3.6512 - val_mean_squared_logarithmic_error: 3.4528\n",
            "Epoch 167/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0407 - mean_squared_logarithmic_error: 2.8428 - val_loss: 3.6849 - val_mean_squared_logarithmic_error: 3.4874\n",
            "Epoch 168/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8388 - mean_squared_logarithmic_error: 2.6412 - val_loss: 3.6659 - val_mean_squared_logarithmic_error: 3.4686\n",
            "Epoch 169/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8919 - mean_squared_logarithmic_error: 2.6948 - val_loss: 3.6507 - val_mean_squared_logarithmic_error: 3.4538\n",
            "Epoch 170/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9951 - mean_squared_logarithmic_error: 2.7972 - val_loss: 3.6811 - val_mean_squared_logarithmic_error: 3.4845\n",
            "Epoch 171/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9767 - mean_squared_logarithmic_error: 2.7802 - val_loss: 3.7127 - val_mean_squared_logarithmic_error: 3.5180\n",
            "Epoch 172/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8816 - mean_squared_logarithmic_error: 2.6848 - val_loss: 3.7126 - val_mean_squared_logarithmic_error: 3.5155\n",
            "Epoch 173/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8365 - mean_squared_logarithmic_error: 2.6408 - val_loss: 3.6983 - val_mean_squared_logarithmic_error: 3.4986\n",
            "Epoch 174/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8886 - mean_squared_logarithmic_error: 2.6899 - val_loss: 3.7028 - val_mean_squared_logarithmic_error: 3.5076\n",
            "Epoch 175/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9120 - mean_squared_logarithmic_error: 2.7160 - val_loss: 3.6778 - val_mean_squared_logarithmic_error: 3.4798\n",
            "Epoch 176/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0805 - mean_squared_logarithmic_error: 2.8839 - val_loss: 3.6781 - val_mean_squared_logarithmic_error: 3.4823\n",
            "Epoch 177/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9599 - mean_squared_logarithmic_error: 2.7628 - val_loss: 3.6642 - val_mean_squared_logarithmic_error: 3.4711\n",
            "Epoch 178/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0161 - mean_squared_logarithmic_error: 2.8202 - val_loss: 3.7345 - val_mean_squared_logarithmic_error: 3.5339\n",
            "Epoch 179/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9559 - mean_squared_logarithmic_error: 2.7563 - val_loss: 3.6337 - val_mean_squared_logarithmic_error: 3.4357\n",
            "Epoch 180/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9053 - mean_squared_logarithmic_error: 2.7077 - val_loss: 3.6601 - val_mean_squared_logarithmic_error: 3.4625\n",
            "Epoch 181/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9583 - mean_squared_logarithmic_error: 2.7593 - val_loss: 3.6739 - val_mean_squared_logarithmic_error: 3.4790\n",
            "Epoch 182/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0528 - mean_squared_logarithmic_error: 2.8572 - val_loss: 3.6700 - val_mean_squared_logarithmic_error: 3.4688\n",
            "Epoch 183/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9673 - mean_squared_logarithmic_error: 2.7683 - val_loss: 3.6825 - val_mean_squared_logarithmic_error: 3.4850\n",
            "Epoch 184/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0465 - mean_squared_logarithmic_error: 2.8495 - val_loss: 3.6695 - val_mean_squared_logarithmic_error: 3.4711\n",
            "Epoch 185/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9455 - mean_squared_logarithmic_error: 2.7485 - val_loss: 3.7459 - val_mean_squared_logarithmic_error: 3.5498\n",
            "Epoch 186/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8551 - mean_squared_logarithmic_error: 2.6560 - val_loss: 3.6443 - val_mean_squared_logarithmic_error: 3.4515\n",
            "Epoch 187/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8921 - mean_squared_logarithmic_error: 2.6974 - val_loss: 3.6407 - val_mean_squared_logarithmic_error: 3.4389\n",
            "Epoch 188/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8222 - mean_squared_logarithmic_error: 2.6221 - val_loss: 3.6640 - val_mean_squared_logarithmic_error: 3.4660\n",
            "Epoch 189/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9580 - mean_squared_logarithmic_error: 2.7594 - val_loss: 3.6468 - val_mean_squared_logarithmic_error: 3.4474\n",
            "Epoch 190/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8631 - mean_squared_logarithmic_error: 2.6634 - val_loss: 3.6855 - val_mean_squared_logarithmic_error: 3.4827\n",
            "Epoch 191/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0244 - mean_squared_logarithmic_error: 2.8246 - val_loss: 3.7103 - val_mean_squared_logarithmic_error: 3.5097\n",
            "Epoch 192/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8018 - mean_squared_logarithmic_error: 2.6021 - val_loss: 3.6669 - val_mean_squared_logarithmic_error: 3.4719\n",
            "Epoch 193/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8235 - mean_squared_logarithmic_error: 2.6281 - val_loss: 3.7227 - val_mean_squared_logarithmic_error: 3.5191\n",
            "Epoch 194/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8311 - mean_squared_logarithmic_error: 2.6308 - val_loss: 3.7052 - val_mean_squared_logarithmic_error: 3.5042\n",
            "Epoch 195/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8484 - mean_squared_logarithmic_error: 2.6482 - val_loss: 3.6810 - val_mean_squared_logarithmic_error: 3.4797\n",
            "Epoch 196/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8468 - mean_squared_logarithmic_error: 2.6468 - val_loss: 3.6958 - val_mean_squared_logarithmic_error: 3.4941\n",
            "Epoch 197/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9956 - mean_squared_logarithmic_error: 2.7954 - val_loss: 3.6649 - val_mean_squared_logarithmic_error: 3.4643\n",
            "Epoch 198/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9239 - mean_squared_logarithmic_error: 2.7245 - val_loss: 3.6890 - val_mean_squared_logarithmic_error: 3.4898\n",
            "Epoch 199/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9318 - mean_squared_logarithmic_error: 2.7331 - val_loss: 3.6100 - val_mean_squared_logarithmic_error: 3.4078\n",
            "Epoch 200/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8703 - mean_squared_logarithmic_error: 2.6699 - val_loss: 3.6762 - val_mean_squared_logarithmic_error: 3.4776\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9foEDUbRUOeu"
      },
      "source": [
        "model_22_width_20 = run_training(data_set=df_train_stand, x_columns=x_col_top_15, width_multiplier=20, epochs=200)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "KI9hi0LiVHOX",
        "outputId": "e3833b1b-7524-4e51-b914-232dbbe7bb3b"
      },
      "source": [
        "model_22_width_unscaled = run_training(data_set=df_train, x_columns=x_col_top_15, width_multiplier=10, epochs=100)"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_3\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_9 (Dense)              (None, 150)               2400      \n",
            "_________________________________________________________________\n",
            "dropout_6 (Dropout)          (None, 150)               0         \n",
            "_________________________________________________________________\n",
            "dense_10 (Dense)             (None, 150)               22650     \n",
            "_________________________________________________________________\n",
            "dropout_7 (Dropout)          (None, 150)               0         \n",
            "_________________________________________________________________\n",
            "dense_11 (Dense)             (None, 1)                 151       \n",
            "=================================================================\n",
            "Total params: 25,201\n",
            "Trainable params: 25,201\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "Epoch 1/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 20.0188 - mean_squared_logarithmic_error: 19.7229 - val_loss: 6.6075 - val_mean_squared_logarithmic_error: 6.0290\n",
            "Epoch 2/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 5.6465 - mean_squared_logarithmic_error: 5.0345 - val_loss: 5.3671 - val_mean_squared_logarithmic_error: 4.6862\n",
            "Epoch 3/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 4.6653 - mean_squared_logarithmic_error: 3.9779 - val_loss: 4.9071 - val_mean_squared_logarithmic_error: 4.2366\n",
            "Epoch 4/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 4.3257 - mean_squared_logarithmic_error: 3.6655 - val_loss: 4.6541 - val_mean_squared_logarithmic_error: 4.0388\n",
            "Epoch 5/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 4.0585 - mean_squared_logarithmic_error: 3.4538 - val_loss: 4.4940 - val_mean_squared_logarithmic_error: 3.9254\n",
            "Epoch 6/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.8995 - mean_squared_logarithmic_error: 3.3324 - val_loss: 4.3718 - val_mean_squared_logarithmic_error: 3.8642\n",
            "Epoch 7/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.8202 - mean_squared_logarithmic_error: 3.3169 - val_loss: 4.2878 - val_mean_squared_logarithmic_error: 3.7819\n",
            "Epoch 8/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.6772 - mean_squared_logarithmic_error: 3.1820 - val_loss: 4.2089 - val_mean_squared_logarithmic_error: 3.7468\n",
            "Epoch 9/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5203 - mean_squared_logarithmic_error: 3.0640 - val_loss: 4.1449 - val_mean_squared_logarithmic_error: 3.7112\n",
            "Epoch 10/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.6014 - mean_squared_logarithmic_error: 3.1725 - val_loss: 4.1210 - val_mean_squared_logarithmic_error: 3.7168\n",
            "Epoch 11/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4661 - mean_squared_logarithmic_error: 3.0627 - val_loss: 4.0843 - val_mean_squared_logarithmic_error: 3.6953\n",
            "Epoch 12/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.5003 - mean_squared_logarithmic_error: 3.1172 - val_loss: 4.0355 - val_mean_squared_logarithmic_error: 3.6644\n",
            "Epoch 13/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4054 - mean_squared_logarithmic_error: 3.0420 - val_loss: 4.0180 - val_mean_squared_logarithmic_error: 3.6631\n",
            "Epoch 14/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.4542 - mean_squared_logarithmic_error: 3.1030 - val_loss: 3.9811 - val_mean_squared_logarithmic_error: 3.6329\n",
            "Epoch 15/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3784 - mean_squared_logarithmic_error: 3.0382 - val_loss: 3.9652 - val_mean_squared_logarithmic_error: 3.6407\n",
            "Epoch 16/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3836 - mean_squared_logarithmic_error: 3.0610 - val_loss: 3.9563 - val_mean_squared_logarithmic_error: 3.6458\n",
            "Epoch 17/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3593 - mean_squared_logarithmic_error: 3.0475 - val_loss: 3.9490 - val_mean_squared_logarithmic_error: 3.6438\n",
            "Epoch 18/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3783 - mean_squared_logarithmic_error: 3.0742 - val_loss: 3.9744 - val_mean_squared_logarithmic_error: 3.6816\n",
            "Epoch 19/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3366 - mean_squared_logarithmic_error: 3.0459 - val_loss: 3.9255 - val_mean_squared_logarithmic_error: 3.6329\n",
            "Epoch 20/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4514 - mean_squared_logarithmic_error: 3.1654 - val_loss: 3.9413 - val_mean_squared_logarithmic_error: 3.6553\n",
            "Epoch 21/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3113 - mean_squared_logarithmic_error: 3.0293 - val_loss: 3.9347 - val_mean_squared_logarithmic_error: 3.6648\n",
            "Epoch 22/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2098 - mean_squared_logarithmic_error: 2.9378 - val_loss: 3.8970 - val_mean_squared_logarithmic_error: 3.6324\n",
            "Epoch 23/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1766 - mean_squared_logarithmic_error: 2.9131 - val_loss: 3.8989 - val_mean_squared_logarithmic_error: 3.6370\n",
            "Epoch 24/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3257 - mean_squared_logarithmic_error: 3.0690 - val_loss: 3.8976 - val_mean_squared_logarithmic_error: 3.6374\n",
            "Epoch 25/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2547 - mean_squared_logarithmic_error: 2.9987 - val_loss: 3.9015 - val_mean_squared_logarithmic_error: 3.6419\n",
            "Epoch 26/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2303 - mean_squared_logarithmic_error: 2.9752 - val_loss: 3.8994 - val_mean_squared_logarithmic_error: 3.6458\n",
            "Epoch 27/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2700 - mean_squared_logarithmic_error: 3.0217 - val_loss: 3.8877 - val_mean_squared_logarithmic_error: 3.6457\n",
            "Epoch 28/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2490 - mean_squared_logarithmic_error: 3.0042 - val_loss: 3.8446 - val_mean_squared_logarithmic_error: 3.6008\n",
            "Epoch 29/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3503 - mean_squared_logarithmic_error: 3.1107 - val_loss: 3.8486 - val_mean_squared_logarithmic_error: 3.6043\n",
            "Epoch 30/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2587 - mean_squared_logarithmic_error: 3.0196 - val_loss: 3.8417 - val_mean_squared_logarithmic_error: 3.6037\n",
            "Epoch 31/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2230 - mean_squared_logarithmic_error: 2.9865 - val_loss: 3.8456 - val_mean_squared_logarithmic_error: 3.6143\n",
            "Epoch 32/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2867 - mean_squared_logarithmic_error: 3.0544 - val_loss: 3.8682 - val_mean_squared_logarithmic_error: 3.6289\n",
            "Epoch 33/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1862 - mean_squared_logarithmic_error: 2.9515 - val_loss: 3.8619 - val_mean_squared_logarithmic_error: 3.6339\n",
            "Epoch 34/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1563 - mean_squared_logarithmic_error: 2.9245 - val_loss: 3.8410 - val_mean_squared_logarithmic_error: 3.6145\n",
            "Epoch 35/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1423 - mean_squared_logarithmic_error: 2.9141 - val_loss: 3.8316 - val_mean_squared_logarithmic_error: 3.6092\n",
            "Epoch 36/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1758 - mean_squared_logarithmic_error: 2.9516 - val_loss: 3.8547 - val_mean_squared_logarithmic_error: 3.6435\n",
            "Epoch 37/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1418 - mean_squared_logarithmic_error: 2.9207 - val_loss: 3.8533 - val_mean_squared_logarithmic_error: 3.6279\n",
            "Epoch 38/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2938 - mean_squared_logarithmic_error: 3.0713 - val_loss: 3.8229 - val_mean_squared_logarithmic_error: 3.6030\n",
            "Epoch 39/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1101 - mean_squared_logarithmic_error: 2.8885 - val_loss: 3.8346 - val_mean_squared_logarithmic_error: 3.6200\n",
            "Epoch 40/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1787 - mean_squared_logarithmic_error: 2.9615 - val_loss: 3.8462 - val_mean_squared_logarithmic_error: 3.6341\n",
            "Epoch 41/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2339 - mean_squared_logarithmic_error: 3.0170 - val_loss: 3.8288 - val_mean_squared_logarithmic_error: 3.6136\n",
            "Epoch 42/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0156 - mean_squared_logarithmic_error: 2.7981 - val_loss: 3.8607 - val_mean_squared_logarithmic_error: 3.6568\n",
            "Epoch 43/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0658 - mean_squared_logarithmic_error: 2.8543 - val_loss: 3.7991 - val_mean_squared_logarithmic_error: 3.5826\n",
            "Epoch 44/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2000 - mean_squared_logarithmic_error: 2.9853 - val_loss: 3.8175 - val_mean_squared_logarithmic_error: 3.6096\n",
            "Epoch 45/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1556 - mean_squared_logarithmic_error: 2.9471 - val_loss: 3.7990 - val_mean_squared_logarithmic_error: 3.5849\n",
            "Epoch 46/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0505 - mean_squared_logarithmic_error: 2.8411 - val_loss: 3.8000 - val_mean_squared_logarithmic_error: 3.5934\n",
            "Epoch 47/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2105 - mean_squared_logarithmic_error: 3.0014 - val_loss: 3.8466 - val_mean_squared_logarithmic_error: 3.6420\n",
            "Epoch 48/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1534 - mean_squared_logarithmic_error: 2.9474 - val_loss: 3.8167 - val_mean_squared_logarithmic_error: 3.6055\n",
            "Epoch 49/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1448 - mean_squared_logarithmic_error: 2.9369 - val_loss: 3.8283 - val_mean_squared_logarithmic_error: 3.6241\n",
            "Epoch 50/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0767 - mean_squared_logarithmic_error: 2.8708 - val_loss: 3.8158 - val_mean_squared_logarithmic_error: 3.6102\n",
            "Epoch 51/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1370 - mean_squared_logarithmic_error: 2.9334 - val_loss: 3.8232 - val_mean_squared_logarithmic_error: 3.6141\n",
            "Epoch 52/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2212 - mean_squared_logarithmic_error: 3.0156 - val_loss: 3.7743 - val_mean_squared_logarithmic_error: 3.5672\n",
            "Epoch 53/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0522 - mean_squared_logarithmic_error: 2.8474 - val_loss: 3.8051 - val_mean_squared_logarithmic_error: 3.5994\n",
            "Epoch 54/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1196 - mean_squared_logarithmic_error: 2.9170 - val_loss: 3.7922 - val_mean_squared_logarithmic_error: 3.5834\n",
            "Epoch 55/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2574 - mean_squared_logarithmic_error: 3.0520 - val_loss: 3.7755 - val_mean_squared_logarithmic_error: 3.5710\n",
            "Epoch 56/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1882 - mean_squared_logarithmic_error: 2.9862 - val_loss: 3.8377 - val_mean_squared_logarithmic_error: 3.6324\n",
            "Epoch 57/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1879 - mean_squared_logarithmic_error: 2.9869 - val_loss: 3.7977 - val_mean_squared_logarithmic_error: 3.5945\n",
            "Epoch 58/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2647 - mean_squared_logarithmic_error: 3.0609 - val_loss: 3.8042 - val_mean_squared_logarithmic_error: 3.6025\n",
            "Epoch 59/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2808 - mean_squared_logarithmic_error: 3.0796 - val_loss: 3.8169 - val_mean_squared_logarithmic_error: 3.6189\n",
            "Epoch 60/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1087 - mean_squared_logarithmic_error: 2.9099 - val_loss: 3.7937 - val_mean_squared_logarithmic_error: 3.5957\n",
            "Epoch 61/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1687 - mean_squared_logarithmic_error: 2.9679 - val_loss: 3.8096 - val_mean_squared_logarithmic_error: 3.6089\n",
            "Epoch 62/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1470 - mean_squared_logarithmic_error: 2.9452 - val_loss: 3.7767 - val_mean_squared_logarithmic_error: 3.5790\n",
            "Epoch 63/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9988 - mean_squared_logarithmic_error: 2.7970 - val_loss: 3.7636 - val_mean_squared_logarithmic_error: 3.5672\n",
            "Epoch 64/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1219 - mean_squared_logarithmic_error: 2.9230 - val_loss: 3.7582 - val_mean_squared_logarithmic_error: 3.5580\n",
            "Epoch 65/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2512 - mean_squared_logarithmic_error: 3.0524 - val_loss: 3.7931 - val_mean_squared_logarithmic_error: 3.5886\n",
            "Epoch 66/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1087 - mean_squared_logarithmic_error: 2.9089 - val_loss: 3.7670 - val_mean_squared_logarithmic_error: 3.5621\n",
            "Epoch 67/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9755 - mean_squared_logarithmic_error: 2.7738 - val_loss: 3.7461 - val_mean_squared_logarithmic_error: 3.5441\n",
            "Epoch 68/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1619 - mean_squared_logarithmic_error: 2.9613 - val_loss: 3.7667 - val_mean_squared_logarithmic_error: 3.5635\n",
            "Epoch 69/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0772 - mean_squared_logarithmic_error: 2.8754 - val_loss: 3.7714 - val_mean_squared_logarithmic_error: 3.5775\n",
            "Epoch 70/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9578 - mean_squared_logarithmic_error: 2.7604 - val_loss: 3.7677 - val_mean_squared_logarithmic_error: 3.5717\n",
            "Epoch 71/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1416 - mean_squared_logarithmic_error: 2.9416 - val_loss: 3.7651 - val_mean_squared_logarithmic_error: 3.5661\n",
            "Epoch 72/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0914 - mean_squared_logarithmic_error: 2.8951 - val_loss: 3.7683 - val_mean_squared_logarithmic_error: 3.5670\n",
            "Epoch 73/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0319 - mean_squared_logarithmic_error: 2.8284 - val_loss: 3.8050 - val_mean_squared_logarithmic_error: 3.6122\n",
            "Epoch 74/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0214 - mean_squared_logarithmic_error: 2.8270 - val_loss: 3.7819 - val_mean_squared_logarithmic_error: 3.5817\n",
            "Epoch 75/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0559 - mean_squared_logarithmic_error: 2.8566 - val_loss: 3.8165 - val_mean_squared_logarithmic_error: 3.6153\n",
            "Epoch 76/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0852 - mean_squared_logarithmic_error: 2.8871 - val_loss: 3.7712 - val_mean_squared_logarithmic_error: 3.5724\n",
            "Epoch 77/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0690 - mean_squared_logarithmic_error: 2.8713 - val_loss: 3.7970 - val_mean_squared_logarithmic_error: 3.6007\n",
            "Epoch 78/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0363 - mean_squared_logarithmic_error: 2.8380 - val_loss: 3.7299 - val_mean_squared_logarithmic_error: 3.5339\n",
            "Epoch 79/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0588 - mean_squared_logarithmic_error: 2.8602 - val_loss: 3.7561 - val_mean_squared_logarithmic_error: 3.5590\n",
            "Epoch 80/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0551 - mean_squared_logarithmic_error: 2.8563 - val_loss: 3.7535 - val_mean_squared_logarithmic_error: 3.5529\n",
            "Epoch 81/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9134 - mean_squared_logarithmic_error: 2.7131 - val_loss: 3.7930 - val_mean_squared_logarithmic_error: 3.5942\n",
            "Epoch 82/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0331 - mean_squared_logarithmic_error: 2.8346 - val_loss: 3.7826 - val_mean_squared_logarithmic_error: 3.5878\n",
            "Epoch 83/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9405 - mean_squared_logarithmic_error: 2.7415 - val_loss: 3.7523 - val_mean_squared_logarithmic_error: 3.5552\n",
            "Epoch 84/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9720 - mean_squared_logarithmic_error: 2.7723 - val_loss: 3.7803 - val_mean_squared_logarithmic_error: 3.5779\n",
            "Epoch 85/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9973 - mean_squared_logarithmic_error: 2.7946 - val_loss: 3.7793 - val_mean_squared_logarithmic_error: 3.5849\n",
            "Epoch 86/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1029 - mean_squared_logarithmic_error: 2.9045 - val_loss: 3.7525 - val_mean_squared_logarithmic_error: 3.5472\n",
            "Epoch 87/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0580 - mean_squared_logarithmic_error: 2.8548 - val_loss: 3.7583 - val_mean_squared_logarithmic_error: 3.5603\n",
            "Epoch 88/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.2611 - mean_squared_logarithmic_error: 3.0601 - val_loss: 3.7703 - val_mean_squared_logarithmic_error: 3.5685\n",
            "Epoch 89/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9730 - mean_squared_logarithmic_error: 2.7699 - val_loss: 3.7414 - val_mean_squared_logarithmic_error: 3.5464\n",
            "Epoch 90/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9590 - mean_squared_logarithmic_error: 2.7596 - val_loss: 3.7551 - val_mean_squared_logarithmic_error: 3.5543\n",
            "Epoch 91/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9021 - mean_squared_logarithmic_error: 2.7005 - val_loss: 3.7297 - val_mean_squared_logarithmic_error: 3.5292\n",
            "Epoch 92/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9254 - mean_squared_logarithmic_error: 2.7243 - val_loss: 3.7588 - val_mean_squared_logarithmic_error: 3.5526\n",
            "Epoch 93/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9414 - mean_squared_logarithmic_error: 2.7368 - val_loss: 3.7120 - val_mean_squared_logarithmic_error: 3.5087\n",
            "Epoch 94/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9528 - mean_squared_logarithmic_error: 2.7473 - val_loss: 3.7551 - val_mean_squared_logarithmic_error: 3.5534\n",
            "Epoch 95/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8941 - mean_squared_logarithmic_error: 2.6915 - val_loss: 3.8029 - val_mean_squared_logarithmic_error: 3.6019\n",
            "Epoch 96/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9667 - mean_squared_logarithmic_error: 2.7636 - val_loss: 3.7852 - val_mean_squared_logarithmic_error: 3.5809\n",
            "Epoch 97/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1228 - mean_squared_logarithmic_error: 2.9196 - val_loss: 3.7948 - val_mean_squared_logarithmic_error: 3.5938\n",
            "Epoch 98/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0576 - mean_squared_logarithmic_error: 2.8559 - val_loss: 3.7705 - val_mean_squared_logarithmic_error: 3.5697\n",
            "Epoch 99/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9843 - mean_squared_logarithmic_error: 2.7828 - val_loss: 3.7550 - val_mean_squared_logarithmic_error: 3.5530\n",
            "Epoch 100/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0457 - mean_squared_logarithmic_error: 2.8437 - val_loss: 3.7384 - val_mean_squared_logarithmic_error: 3.5354\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5X3RZKHLfWeo"
      },
      "source": [
        "# Testing"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "z1WntXf78B-7"
      },
      "source": [
        "# Submission file\n",
        "def generate_submission(model_input, columns, file_name):\n",
        "  y_pred = model_input.predict(df_test_stand[columns])\n",
        "  y_pred = np.round(y_pred,0)\n",
        "  dummy = pd.DataFrame()\n",
        "  dummy[\"Id\"] = df_test.index\n",
        "  dummy[\"Predicted\"]=y_pred\n",
        "  dummy.to_csv(\"{}.csv\".format(file_name), sep=',' ,index=False)\n",
        "  len(y_pred)"
      ],
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tl9CkpafMW3F"
      },
      "source": [
        "15 features, large model, width_multiply 3 "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SVnJtBQOFymj"
      },
      "source": [
        "generate_submission(model_22_width_15, x_col_top_15, '200_epochs')"
      ],
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zjmsvCZNWHJv"
      },
      "source": [
        "generate_submission(model_22_width_unscaled, x_col_top_15, 'unscaled_data')"
      ],
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uycoXLvYNt_B"
      },
      "source": [
        "15 features, large model, width_multiply 3 "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EiAARctYFzJW"
      },
      "source": [
        "# Cross Validation Approach"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jSUkZ4uKJFhJ"
      },
      "source": [
        "y_selected = df_train[y_col]\n",
        "from sklearn.model_selection import StratifiedKFold\n",
        "import numpy\n",
        "# fix random seed for reproducibility\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5qjxAEdzJvkG",
        "outputId": "8c703c93-8398-43cc-a3e8-98b511c6cd93"
      },
      "source": [
        "from sklearn.model_selection import RepeatedKFold, cross_val_score\n",
        "from tensorflow.keras.models import * \n",
        "from tensorflow.keras.layers import * \n",
        "from tensorflow.keras.wrappers.scikit_learn import KerasRegressor\n",
        "\n",
        "input_shape = X_selected.shape\n",
        "\n",
        "def buildmodel():\n",
        "    #num_features = \n",
        "    model= Sequential([\n",
        "        Dense(num_features*1, activation='relu', input_dim=input_shape, kernel_regularizer=regularizers.l2(0.001)),\n",
        "        Dropout(0.3),\n",
        "        Dense(num_features*3, activation='relu', kernel_regularizer=regularizers.l2(0.001)),\n",
        "        #Dropout(0.3), -> might not want this before the last layer {keep as much info before?}\n",
        "        Dense(num_features*1, activation='relu', kernel_regularizer=regularizers.l2(0.001))\n",
        "\n",
        "    ])\n",
        "    model.compile(optimizer='adam', loss='mean_squared_logarithmic_error', metrics='mean_squared_logarithmic_error')\n",
        "    return(model)\n",
        "\n",
        "estimator= KerasRegressor(build_fn=buildmodel, epochs=100, batch_size=10, verbose=1)\n",
        "kfold= RepeatedKFold(n_splits=10, n_repeats=1)\n",
        "# all features \n",
        "\n",
        "#results= cross_val_score(estimator, X_selected, df_train[y_col], cv=kfold, n_jobs=1) \n",
        "#results.mean()  # Mean MSE"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_validation.py:536: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
            "TypeError: int() argument must be a string, a bytes-like object or a number, not 'DataFrame'\n",
            "\n",
            "  FitFailedWarning)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yVOgF5HKQ79A",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "d3471ab4-c07c-407b-9614-1a17af9792fe"
      },
      "source": [
        "model_24_width_10 = run_training(data_set=df_train_stand, x_columns=x_col_top_15, width_multiplier=10) #validation error # 3,67"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_13\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_35 (Dense)             (None, 24)                600       \n",
            "_________________________________________________________________\n",
            "dropout_13 (Dropout)         (None, 24)                0         \n",
            "_________________________________________________________________\n",
            "dense_36 (Dense)             (None, 240)               6000      \n",
            "_________________________________________________________________\n",
            "dense_37 (Dense)             (None, 1)                 241       \n",
            "=================================================================\n",
            "Total params: 6,841\n",
            "Trainable params: 6,841\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "Epoch 1/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 13.8832 - mean_squared_logarithmic_error: 13.6945 - val_loss: 7.0673 - val_mean_squared_logarithmic_error: 6.7485\n",
            "Epoch 2/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 5.6744 - mean_squared_logarithmic_error: 5.2617 - val_loss: 5.3334 - val_mean_squared_logarithmic_error: 4.8514\n",
            "Epoch 3/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.7113 - mean_squared_logarithmic_error: 4.2060 - val_loss: 4.8188 - val_mean_squared_logarithmic_error: 4.3121\n",
            "Epoch 4/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 4.3191 - mean_squared_logarithmic_error: 3.8209 - val_loss: 4.5531 - val_mean_squared_logarithmic_error: 4.0766\n",
            "Epoch 5/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 4.0681 - mean_squared_logarithmic_error: 3.6136 - val_loss: 4.3846 - val_mean_squared_logarithmic_error: 3.9543\n",
            "Epoch 6/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.9030 - mean_squared_logarithmic_error: 3.4952 - val_loss: 4.2671 - val_mean_squared_logarithmic_error: 3.8964\n",
            "Epoch 7/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.7812 - mean_squared_logarithmic_error: 3.4254 - val_loss: 4.1783 - val_mean_squared_logarithmic_error: 3.8267\n",
            "Epoch 8/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.7020 - mean_squared_logarithmic_error: 3.3741 - val_loss: 4.1117 - val_mean_squared_logarithmic_error: 3.8027\n",
            "Epoch 9/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.6072 - mean_squared_logarithmic_error: 3.3097 - val_loss: 4.0530 - val_mean_squared_logarithmic_error: 3.7638\n",
            "Epoch 10/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5507 - mean_squared_logarithmic_error: 3.2734 - val_loss: 4.0163 - val_mean_squared_logarithmic_error: 3.7505\n",
            "Epoch 11/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.5215 - mean_squared_logarithmic_error: 3.2636 - val_loss: 3.9903 - val_mean_squared_logarithmic_error: 3.7406\n",
            "Epoch 12/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4635 - mean_squared_logarithmic_error: 3.2197 - val_loss: 3.9440 - val_mean_squared_logarithmic_error: 3.7017\n",
            "Epoch 13/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4365 - mean_squared_logarithmic_error: 3.2060 - val_loss: 3.9242 - val_mean_squared_logarithmic_error: 3.6996\n",
            "Epoch 14/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4104 - mean_squared_logarithmic_error: 3.1906 - val_loss: 3.9105 - val_mean_squared_logarithmic_error: 3.6927\n",
            "Epoch 15/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.3776 - mean_squared_logarithmic_error: 3.1658 - val_loss: 3.8915 - val_mean_squared_logarithmic_error: 3.6906\n",
            "Epoch 16/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3492 - mean_squared_logarithmic_error: 3.1480 - val_loss: 3.8792 - val_mean_squared_logarithmic_error: 3.6871\n",
            "Epoch 17/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3195 - mean_squared_logarithmic_error: 3.1237 - val_loss: 3.8790 - val_mean_squared_logarithmic_error: 3.6845\n",
            "Epoch 18/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3246 - mean_squared_logarithmic_error: 3.1346 - val_loss: 3.8681 - val_mean_squared_logarithmic_error: 3.6849\n",
            "Epoch 19/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3186 - mean_squared_logarithmic_error: 3.1371 - val_loss: 3.8582 - val_mean_squared_logarithmic_error: 3.6728\n",
            "Epoch 20/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2996 - mean_squared_logarithmic_error: 3.1207 - val_loss: 3.8535 - val_mean_squared_logarithmic_error: 3.6736\n",
            "Epoch 21/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2886 - mean_squared_logarithmic_error: 3.1118 - val_loss: 3.8492 - val_mean_squared_logarithmic_error: 3.6792\n",
            "Epoch 22/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2914 - mean_squared_logarithmic_error: 3.1198 - val_loss: 3.8180 - val_mean_squared_logarithmic_error: 3.6531\n",
            "Epoch 23/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2880 - mean_squared_logarithmic_error: 3.1200 - val_loss: 3.8201 - val_mean_squared_logarithmic_error: 3.6536\n",
            "Epoch 24/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2857 - mean_squared_logarithmic_error: 3.1227 - val_loss: 3.8266 - val_mean_squared_logarithmic_error: 3.6593\n",
            "Epoch 25/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2622 - mean_squared_logarithmic_error: 3.0999 - val_loss: 3.8173 - val_mean_squared_logarithmic_error: 3.6523\n",
            "Epoch 26/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.2702 - mean_squared_logarithmic_error: 3.1105 - val_loss: 3.8158 - val_mean_squared_logarithmic_error: 3.6555\n",
            "Epoch 27/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1973 - mean_squared_logarithmic_error: 3.0377 - val_loss: 3.8279 - val_mean_squared_logarithmic_error: 3.6695\n",
            "Epoch 28/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2428 - mean_squared_logarithmic_error: 3.0868 - val_loss: 3.8513 - val_mean_squared_logarithmic_error: 3.6964\n",
            "Epoch 29/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.2441 - mean_squared_logarithmic_error: 3.0911 - val_loss: 3.8202 - val_mean_squared_logarithmic_error: 3.6662\n",
            "Epoch 30/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2564 - mean_squared_logarithmic_error: 3.1043 - val_loss: 3.7994 - val_mean_squared_logarithmic_error: 3.6458\n",
            "Epoch 31/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.2087 - mean_squared_logarithmic_error: 3.0574 - val_loss: 3.8209 - val_mean_squared_logarithmic_error: 3.6705\n",
            "Epoch 32/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.2221 - mean_squared_logarithmic_error: 3.0743 - val_loss: 3.8069 - val_mean_squared_logarithmic_error: 3.6566\n",
            "Epoch 33/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.2399 - mean_squared_logarithmic_error: 3.0912 - val_loss: 3.8024 - val_mean_squared_logarithmic_error: 3.6579\n",
            "Epoch 34/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1900 - mean_squared_logarithmic_error: 3.0430 - val_loss: 3.7946 - val_mean_squared_logarithmic_error: 3.6472\n",
            "Epoch 35/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.2025 - mean_squared_logarithmic_error: 3.0571 - val_loss: 3.8026 - val_mean_squared_logarithmic_error: 3.6597\n",
            "Epoch 36/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.2039 - mean_squared_logarithmic_error: 3.0589 - val_loss: 3.8384 - val_mean_squared_logarithmic_error: 3.7010\n",
            "Epoch 37/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1799 - mean_squared_logarithmic_error: 3.0377 - val_loss: 3.8070 - val_mean_squared_logarithmic_error: 3.6627\n",
            "Epoch 38/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.2228 - mean_squared_logarithmic_error: 3.0803 - val_loss: 3.7868 - val_mean_squared_logarithmic_error: 3.6452\n",
            "Epoch 39/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1713 - mean_squared_logarithmic_error: 3.0297 - val_loss: 3.7967 - val_mean_squared_logarithmic_error: 3.6592\n",
            "Epoch 40/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.2036 - mean_squared_logarithmic_error: 3.0634 - val_loss: 3.7942 - val_mean_squared_logarithmic_error: 3.6579\n",
            "Epoch 41/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1721 - mean_squared_logarithmic_error: 3.0330 - val_loss: 3.8039 - val_mean_squared_logarithmic_error: 3.6627\n",
            "Epoch 42/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1943 - mean_squared_logarithmic_error: 3.0545 - val_loss: 3.8031 - val_mean_squared_logarithmic_error: 3.6706\n",
            "Epoch 43/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1805 - mean_squared_logarithmic_error: 3.0421 - val_loss: 3.8245 - val_mean_squared_logarithmic_error: 3.6837\n",
            "Epoch 44/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1828 - mean_squared_logarithmic_error: 3.0441 - val_loss: 3.7966 - val_mean_squared_logarithmic_error: 3.6615\n",
            "Epoch 45/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1523 - mean_squared_logarithmic_error: 3.0158 - val_loss: 3.7956 - val_mean_squared_logarithmic_error: 3.6579\n",
            "Epoch 46/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1781 - mean_squared_logarithmic_error: 3.0423 - val_loss: 3.7986 - val_mean_squared_logarithmic_error: 3.6653\n",
            "Epoch 47/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1417 - mean_squared_logarithmic_error: 3.0064 - val_loss: 3.8324 - val_mean_squared_logarithmic_error: 3.7002\n",
            "Epoch 48/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1377 - mean_squared_logarithmic_error: 3.0027 - val_loss: 3.8144 - val_mean_squared_logarithmic_error: 3.6769\n",
            "Epoch 49/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1771 - mean_squared_logarithmic_error: 3.0431 - val_loss: 3.7854 - val_mean_squared_logarithmic_error: 3.6532\n",
            "Epoch 50/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1647 - mean_squared_logarithmic_error: 3.0308 - val_loss: 3.8087 - val_mean_squared_logarithmic_error: 3.6747\n",
            "Epoch 51/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1514 - mean_squared_logarithmic_error: 3.0173 - val_loss: 3.8385 - val_mean_squared_logarithmic_error: 3.7033\n",
            "Epoch 52/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1423 - mean_squared_logarithmic_error: 3.0093 - val_loss: 3.8137 - val_mean_squared_logarithmic_error: 3.6798\n",
            "Epoch 53/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1495 - mean_squared_logarithmic_error: 3.0168 - val_loss: 3.8313 - val_mean_squared_logarithmic_error: 3.6960\n",
            "Epoch 54/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1482 - mean_squared_logarithmic_error: 3.0156 - val_loss: 3.7992 - val_mean_squared_logarithmic_error: 3.6655\n",
            "Epoch 55/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1241 - mean_squared_logarithmic_error: 2.9916 - val_loss: 3.7898 - val_mean_squared_logarithmic_error: 3.6564\n",
            "Epoch 56/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1350 - mean_squared_logarithmic_error: 3.0025 - val_loss: 3.8239 - val_mean_squared_logarithmic_error: 3.6908\n",
            "Epoch 57/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1600 - mean_squared_logarithmic_error: 3.0281 - val_loss: 3.7891 - val_mean_squared_logarithmic_error: 3.6549\n",
            "Epoch 58/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1160 - mean_squared_logarithmic_error: 2.9832 - val_loss: 3.7944 - val_mean_squared_logarithmic_error: 3.6623\n",
            "Epoch 59/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1300 - mean_squared_logarithmic_error: 2.9988 - val_loss: 3.7961 - val_mean_squared_logarithmic_error: 3.6671\n",
            "Epoch 60/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1644 - mean_squared_logarithmic_error: 3.0348 - val_loss: 3.7842 - val_mean_squared_logarithmic_error: 3.6553\n",
            "Epoch 61/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0986 - mean_squared_logarithmic_error: 2.9692 - val_loss: 3.8330 - val_mean_squared_logarithmic_error: 3.7053\n",
            "Epoch 62/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1105 - mean_squared_logarithmic_error: 2.9808 - val_loss: 3.7926 - val_mean_squared_logarithmic_error: 3.6646\n",
            "Epoch 63/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1317 - mean_squared_logarithmic_error: 3.0025 - val_loss: 3.7736 - val_mean_squared_logarithmic_error: 3.6489\n",
            "Epoch 64/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1177 - mean_squared_logarithmic_error: 2.9899 - val_loss: 3.7956 - val_mean_squared_logarithmic_error: 3.6671\n",
            "Epoch 65/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1364 - mean_squared_logarithmic_error: 3.0079 - val_loss: 3.8055 - val_mean_squared_logarithmic_error: 3.6743\n",
            "Epoch 66/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1303 - mean_squared_logarithmic_error: 3.0013 - val_loss: 3.7993 - val_mean_squared_logarithmic_error: 3.6693\n",
            "Epoch 67/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1377 - mean_squared_logarithmic_error: 3.0097 - val_loss: 3.7955 - val_mean_squared_logarithmic_error: 3.6678\n",
            "Epoch 68/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1023 - mean_squared_logarithmic_error: 2.9739 - val_loss: 3.7909 - val_mean_squared_logarithmic_error: 3.6622\n",
            "Epoch 69/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1062 - mean_squared_logarithmic_error: 2.9774 - val_loss: 3.8133 - val_mean_squared_logarithmic_error: 3.6888\n",
            "Epoch 70/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1408 - mean_squared_logarithmic_error: 3.0128 - val_loss: 3.7848 - val_mean_squared_logarithmic_error: 3.6573\n",
            "Epoch 71/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1104 - mean_squared_logarithmic_error: 2.9819 - val_loss: 3.7979 - val_mean_squared_logarithmic_error: 3.6711\n",
            "Epoch 72/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1214 - mean_squared_logarithmic_error: 2.9952 - val_loss: 3.7698 - val_mean_squared_logarithmic_error: 3.6399\n",
            "Epoch 73/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1199 - mean_squared_logarithmic_error: 2.9911 - val_loss: 3.7864 - val_mean_squared_logarithmic_error: 3.6638\n",
            "Epoch 74/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1182 - mean_squared_logarithmic_error: 2.9923 - val_loss: 3.8558 - val_mean_squared_logarithmic_error: 3.7279\n",
            "Epoch 75/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1056 - mean_squared_logarithmic_error: 2.9788 - val_loss: 3.8176 - val_mean_squared_logarithmic_error: 3.6913\n",
            "Epoch 76/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0984 - mean_squared_logarithmic_error: 2.9721 - val_loss: 3.7943 - val_mean_squared_logarithmic_error: 3.6677\n",
            "Epoch 77/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1177 - mean_squared_logarithmic_error: 2.9921 - val_loss: 3.8056 - val_mean_squared_logarithmic_error: 3.6812\n",
            "Epoch 78/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1498 - mean_squared_logarithmic_error: 3.0233 - val_loss: 3.7866 - val_mean_squared_logarithmic_error: 3.6636\n",
            "Epoch 79/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0659 - mean_squared_logarithmic_error: 2.9401 - val_loss: 3.7749 - val_mean_squared_logarithmic_error: 3.6507\n",
            "Epoch 80/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0783 - mean_squared_logarithmic_error: 2.9532 - val_loss: 3.7881 - val_mean_squared_logarithmic_error: 3.6643\n",
            "Epoch 81/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1092 - mean_squared_logarithmic_error: 2.9853 - val_loss: 3.8101 - val_mean_squared_logarithmic_error: 3.6849\n",
            "Epoch 82/100\n",
            "747/747 [==============================] - 1s 1ms/step - loss: 3.1413 - mean_squared_logarithmic_error: 3.0165 - val_loss: 3.8244 - val_mean_squared_logarithmic_error: 3.7041\n",
            "Epoch 83/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0977 - mean_squared_logarithmic_error: 2.9745 - val_loss: 3.8006 - val_mean_squared_logarithmic_error: 3.6770\n",
            "Epoch 84/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0851 - mean_squared_logarithmic_error: 2.9611 - val_loss: 3.7885 - val_mean_squared_logarithmic_error: 3.6625\n",
            "Epoch 85/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1143 - mean_squared_logarithmic_error: 2.9893 - val_loss: 3.7698 - val_mean_squared_logarithmic_error: 3.6477\n",
            "Epoch 86/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1191 - mean_squared_logarithmic_error: 2.9952 - val_loss: 3.7987 - val_mean_squared_logarithmic_error: 3.6714\n",
            "Epoch 87/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1055 - mean_squared_logarithmic_error: 2.9807 - val_loss: 3.7853 - val_mean_squared_logarithmic_error: 3.6643\n",
            "Epoch 88/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0505 - mean_squared_logarithmic_error: 2.9271 - val_loss: 3.8178 - val_mean_squared_logarithmic_error: 3.6917\n",
            "Epoch 89/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1026 - mean_squared_logarithmic_error: 2.9783 - val_loss: 3.7711 - val_mean_squared_logarithmic_error: 3.6519\n",
            "Epoch 90/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0771 - mean_squared_logarithmic_error: 2.9553 - val_loss: 3.7876 - val_mean_squared_logarithmic_error: 3.6660\n",
            "Epoch 91/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1347 - mean_squared_logarithmic_error: 3.0115 - val_loss: 3.7936 - val_mean_squared_logarithmic_error: 3.6721\n",
            "Epoch 92/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1285 - mean_squared_logarithmic_error: 3.0068 - val_loss: 3.7829 - val_mean_squared_logarithmic_error: 3.6577\n",
            "Epoch 93/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1038 - mean_squared_logarithmic_error: 2.9810 - val_loss: 3.7860 - val_mean_squared_logarithmic_error: 3.6628\n",
            "Epoch 94/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1038 - mean_squared_logarithmic_error: 2.9817 - val_loss: 3.8282 - val_mean_squared_logarithmic_error: 3.7061\n",
            "Epoch 95/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0806 - mean_squared_logarithmic_error: 2.9589 - val_loss: 3.8141 - val_mean_squared_logarithmic_error: 3.6919\n",
            "Epoch 96/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0886 - mean_squared_logarithmic_error: 2.9665 - val_loss: 3.7985 - val_mean_squared_logarithmic_error: 3.6779\n",
            "Epoch 97/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1019 - mean_squared_logarithmic_error: 2.9809 - val_loss: 3.8270 - val_mean_squared_logarithmic_error: 3.7071\n",
            "Epoch 98/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1084 - mean_squared_logarithmic_error: 2.9881 - val_loss: 3.8202 - val_mean_squared_logarithmic_error: 3.7015\n",
            "Epoch 99/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1075 - mean_squared_logarithmic_error: 2.9872 - val_loss: 3.7971 - val_mean_squared_logarithmic_error: 3.6785\n",
            "Epoch 100/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0788 - mean_squared_logarithmic_error: 2.9591 - val_loss: 3.8226 - val_mean_squared_logarithmic_error: 3.7015\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "0cJPaspRD_L1",
        "outputId": "0810a426-a6c1-4347-85d2-7b4c8672d968"
      },
      "source": [
        "model_15_width_10 = run_training(data_set=df_train_stand, x_columns=x_col_top_15, width_multiplier=10) #validation error 3.5130"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_22\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_59 (Dense)             (None, 45)                720       \n",
            "_________________________________________________________________\n",
            "dropout_27 (Dropout)         (None, 45)                0         \n",
            "_________________________________________________________________\n",
            "dense_60 (Dense)             (None, 150)               6900      \n",
            "_________________________________________________________________\n",
            "dropout_28 (Dropout)         (None, 150)               0         \n",
            "_________________________________________________________________\n",
            "dense_61 (Dense)             (None, 1)                 151       \n",
            "=================================================================\n",
            "Total params: 7,771\n",
            "Trainable params: 7,771\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "Epoch 1/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 14.0360 - mean_squared_logarithmic_error: 13.8188 - val_loss: 7.2618 - val_mean_squared_logarithmic_error: 6.9188\n",
            "Epoch 2/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 5.8446 - mean_squared_logarithmic_error: 5.4189 - val_loss: 5.5231 - val_mean_squared_logarithmic_error: 5.0303\n",
            "Epoch 3/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.8314 - mean_squared_logarithmic_error: 4.3041 - val_loss: 4.9658 - val_mean_squared_logarithmic_error: 4.4206\n",
            "Epoch 4/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.4248 - mean_squared_logarithmic_error: 3.8726 - val_loss: 4.6811 - val_mean_squared_logarithmic_error: 4.1320\n",
            "Epoch 5/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.1649 - mean_squared_logarithmic_error: 3.6271 - val_loss: 4.4965 - val_mean_squared_logarithmic_error: 3.9732\n",
            "Epoch 6/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.0111 - mean_squared_logarithmic_error: 3.5061 - val_loss: 4.3663 - val_mean_squared_logarithmic_error: 3.8942\n",
            "Epoch 7/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.8742 - mean_squared_logarithmic_error: 3.4181 - val_loss: 4.2564 - val_mean_squared_logarithmic_error: 3.8017\n",
            "Epoch 8/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.7503 - mean_squared_logarithmic_error: 3.3210 - val_loss: 4.1716 - val_mean_squared_logarithmic_error: 3.7617\n",
            "Epoch 9/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.6907 - mean_squared_logarithmic_error: 3.2922 - val_loss: 4.1099 - val_mean_squared_logarithmic_error: 3.7246\n",
            "Epoch 10/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.6208 - mean_squared_logarithmic_error: 3.2504 - val_loss: 4.0569 - val_mean_squared_logarithmic_error: 3.7025\n",
            "Epoch 11/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5446 - mean_squared_logarithmic_error: 3.1969 - val_loss: 4.0043 - val_mean_squared_logarithmic_error: 3.6642\n",
            "Epoch 12/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5089 - mean_squared_logarithmic_error: 3.1771 - val_loss: 3.9733 - val_mean_squared_logarithmic_error: 3.6479\n",
            "Epoch 13/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4757 - mean_squared_logarithmic_error: 3.1610 - val_loss: 3.9519 - val_mean_squared_logarithmic_error: 3.6425\n",
            "Epoch 14/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4698 - mean_squared_logarithmic_error: 3.1693 - val_loss: 3.9213 - val_mean_squared_logarithmic_error: 3.6268\n",
            "Epoch 15/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4252 - mean_squared_logarithmic_error: 3.1356 - val_loss: 3.8963 - val_mean_squared_logarithmic_error: 3.6174\n",
            "Epoch 16/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4124 - mean_squared_logarithmic_error: 3.1361 - val_loss: 3.8917 - val_mean_squared_logarithmic_error: 3.6243\n",
            "Epoch 17/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3853 - mean_squared_logarithmic_error: 3.1180 - val_loss: 3.8770 - val_mean_squared_logarithmic_error: 3.6162\n",
            "Epoch 18/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3662 - mean_squared_logarithmic_error: 3.1094 - val_loss: 3.8662 - val_mean_squared_logarithmic_error: 3.6159\n",
            "Epoch 19/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3328 - mean_squared_logarithmic_error: 3.0854 - val_loss: 3.8500 - val_mean_squared_logarithmic_error: 3.5998\n",
            "Epoch 20/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3229 - mean_squared_logarithmic_error: 3.0804 - val_loss: 3.8311 - val_mean_squared_logarithmic_error: 3.5893\n",
            "Epoch 21/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3092 - mean_squared_logarithmic_error: 3.0731 - val_loss: 3.8283 - val_mean_squared_logarithmic_error: 3.5995\n",
            "Epoch 22/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3056 - mean_squared_logarithmic_error: 3.0761 - val_loss: 3.8115 - val_mean_squared_logarithmic_error: 3.5880\n",
            "Epoch 23/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3125 - mean_squared_logarithmic_error: 3.0882 - val_loss: 3.8087 - val_mean_squared_logarithmic_error: 3.5863\n",
            "Epoch 24/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2792 - mean_squared_logarithmic_error: 3.0598 - val_loss: 3.8150 - val_mean_squared_logarithmic_error: 3.5914\n",
            "Epoch 25/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2846 - mean_squared_logarithmic_error: 3.0696 - val_loss: 3.7990 - val_mean_squared_logarithmic_error: 3.5811\n",
            "Epoch 26/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2713 - mean_squared_logarithmic_error: 3.0587 - val_loss: 3.8187 - val_mean_squared_logarithmic_error: 3.6077\n",
            "Epoch 27/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2819 - mean_squared_logarithmic_error: 3.0739 - val_loss: 3.7903 - val_mean_squared_logarithmic_error: 3.5844\n",
            "Epoch 28/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2349 - mean_squared_logarithmic_error: 3.0296 - val_loss: 3.7854 - val_mean_squared_logarithmic_error: 3.5815\n",
            "Epoch 29/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2325 - mean_squared_logarithmic_error: 3.0306 - val_loss: 3.7802 - val_mean_squared_logarithmic_error: 3.5768\n",
            "Epoch 30/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2210 - mean_squared_logarithmic_error: 3.0212 - val_loss: 3.7879 - val_mean_squared_logarithmic_error: 3.5880\n",
            "Epoch 31/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2508 - mean_squared_logarithmic_error: 3.0524 - val_loss: 3.7844 - val_mean_squared_logarithmic_error: 3.5882\n",
            "Epoch 32/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2147 - mean_squared_logarithmic_error: 3.0212 - val_loss: 3.7646 - val_mean_squared_logarithmic_error: 3.5691\n",
            "Epoch 33/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2207 - mean_squared_logarithmic_error: 3.0282 - val_loss: 3.7868 - val_mean_squared_logarithmic_error: 3.5953\n",
            "Epoch 34/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2111 - mean_squared_logarithmic_error: 3.0199 - val_loss: 3.7795 - val_mean_squared_logarithmic_error: 3.5919\n",
            "Epoch 35/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2261 - mean_squared_logarithmic_error: 3.0382 - val_loss: 3.7635 - val_mean_squared_logarithmic_error: 3.5793\n",
            "Epoch 36/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2165 - mean_squared_logarithmic_error: 3.0303 - val_loss: 3.7852 - val_mean_squared_logarithmic_error: 3.6081\n",
            "Epoch 37/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2142 - mean_squared_logarithmic_error: 3.0321 - val_loss: 3.7623 - val_mean_squared_logarithmic_error: 3.5792\n",
            "Epoch 38/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2030 - mean_squared_logarithmic_error: 3.0207 - val_loss: 3.7506 - val_mean_squared_logarithmic_error: 3.5700\n",
            "Epoch 39/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2025 - mean_squared_logarithmic_error: 3.0216 - val_loss: 3.7545 - val_mean_squared_logarithmic_error: 3.5790\n",
            "Epoch 40/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2030 - mean_squared_logarithmic_error: 3.0242 - val_loss: 3.7463 - val_mean_squared_logarithmic_error: 3.5708\n",
            "Epoch 41/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2149 - mean_squared_logarithmic_error: 3.0369 - val_loss: 3.7541 - val_mean_squared_logarithmic_error: 3.5768\n",
            "Epoch 42/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2111 - mean_squared_logarithmic_error: 3.0335 - val_loss: 3.7542 - val_mean_squared_logarithmic_error: 3.5865\n",
            "Epoch 43/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1985 - mean_squared_logarithmic_error: 3.0251 - val_loss: 3.7479 - val_mean_squared_logarithmic_error: 3.5715\n",
            "Epoch 44/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1834 - mean_squared_logarithmic_error: 3.0099 - val_loss: 3.7621 - val_mean_squared_logarithmic_error: 3.5919\n",
            "Epoch 45/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1759 - mean_squared_logarithmic_error: 3.0052 - val_loss: 3.7583 - val_mean_squared_logarithmic_error: 3.5843\n",
            "Epoch 46/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1812 - mean_squared_logarithmic_error: 3.0101 - val_loss: 3.7542 - val_mean_squared_logarithmic_error: 3.5851\n",
            "Epoch 47/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1677 - mean_squared_logarithmic_error: 2.9965 - val_loss: 3.7412 - val_mean_squared_logarithmic_error: 3.5725\n",
            "Epoch 48/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1761 - mean_squared_logarithmic_error: 3.0068 - val_loss: 3.7415 - val_mean_squared_logarithmic_error: 3.5691\n",
            "Epoch 49/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1702 - mean_squared_logarithmic_error: 3.0017 - val_loss: 3.7483 - val_mean_squared_logarithmic_error: 3.5826\n",
            "Epoch 50/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1861 - mean_squared_logarithmic_error: 3.0194 - val_loss: 3.7391 - val_mean_squared_logarithmic_error: 3.5722\n",
            "Epoch 51/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1713 - mean_squared_logarithmic_error: 3.0055 - val_loss: 3.7489 - val_mean_squared_logarithmic_error: 3.5810\n",
            "Epoch 52/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1793 - mean_squared_logarithmic_error: 3.0148 - val_loss: 3.7413 - val_mean_squared_logarithmic_error: 3.5737\n",
            "Epoch 53/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1680 - mean_squared_logarithmic_error: 3.0033 - val_loss: 3.7447 - val_mean_squared_logarithmic_error: 3.5785\n",
            "Epoch 54/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1839 - mean_squared_logarithmic_error: 3.0209 - val_loss: 3.7286 - val_mean_squared_logarithmic_error: 3.5654\n",
            "Epoch 55/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1546 - mean_squared_logarithmic_error: 2.9919 - val_loss: 3.7393 - val_mean_squared_logarithmic_error: 3.5757\n",
            "Epoch 56/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1388 - mean_squared_logarithmic_error: 2.9780 - val_loss: 3.7272 - val_mean_squared_logarithmic_error: 3.5644\n",
            "Epoch 57/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1507 - mean_squared_logarithmic_error: 2.9905 - val_loss: 3.7265 - val_mean_squared_logarithmic_error: 3.5645\n",
            "Epoch 58/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1569 - mean_squared_logarithmic_error: 2.9956 - val_loss: 3.7315 - val_mean_squared_logarithmic_error: 3.5710\n",
            "Epoch 59/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1690 - mean_squared_logarithmic_error: 3.0098 - val_loss: 3.7425 - val_mean_squared_logarithmic_error: 3.5839\n",
            "Epoch 60/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1566 - mean_squared_logarithmic_error: 2.9983 - val_loss: 3.7307 - val_mean_squared_logarithmic_error: 3.5731\n",
            "Epoch 61/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1367 - mean_squared_logarithmic_error: 2.9783 - val_loss: 3.7584 - val_mean_squared_logarithmic_error: 3.6019\n",
            "Epoch 62/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1620 - mean_squared_logarithmic_error: 3.0046 - val_loss: 3.7349 - val_mean_squared_logarithmic_error: 3.5794\n",
            "Epoch 63/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1415 - mean_squared_logarithmic_error: 2.9839 - val_loss: 3.7017 - val_mean_squared_logarithmic_error: 3.5479\n",
            "Epoch 64/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1472 - mean_squared_logarithmic_error: 2.9921 - val_loss: 3.7041 - val_mean_squared_logarithmic_error: 3.5486\n",
            "Epoch 65/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1455 - mean_squared_logarithmic_error: 2.9903 - val_loss: 3.7366 - val_mean_squared_logarithmic_error: 3.5782\n",
            "Epoch 66/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1482 - mean_squared_logarithmic_error: 2.9932 - val_loss: 3.7128 - val_mean_squared_logarithmic_error: 3.5574\n",
            "Epoch 67/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1423 - mean_squared_logarithmic_error: 2.9877 - val_loss: 3.7366 - val_mean_squared_logarithmic_error: 3.5818\n",
            "Epoch 68/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1329 - mean_squared_logarithmic_error: 2.9788 - val_loss: 3.7263 - val_mean_squared_logarithmic_error: 3.5721\n",
            "Epoch 69/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1287 - mean_squared_logarithmic_error: 2.9751 - val_loss: 3.7225 - val_mean_squared_logarithmic_error: 3.5732\n",
            "Epoch 70/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1381 - mean_squared_logarithmic_error: 2.9864 - val_loss: 3.7137 - val_mean_squared_logarithmic_error: 3.5617\n",
            "Epoch 71/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1336 - mean_squared_logarithmic_error: 2.9800 - val_loss: 3.7126 - val_mean_squared_logarithmic_error: 3.5596\n",
            "Epoch 72/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1230 - mean_squared_logarithmic_error: 2.9709 - val_loss: 3.6979 - val_mean_squared_logarithmic_error: 3.5434\n",
            "Epoch 73/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1275 - mean_squared_logarithmic_error: 2.9746 - val_loss: 3.7266 - val_mean_squared_logarithmic_error: 3.5802\n",
            "Epoch 74/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1275 - mean_squared_logarithmic_error: 2.9780 - val_loss: 3.7444 - val_mean_squared_logarithmic_error: 3.5918\n",
            "Epoch 75/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1177 - mean_squared_logarithmic_error: 2.9662 - val_loss: 3.7369 - val_mean_squared_logarithmic_error: 3.5849\n",
            "Epoch 76/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1315 - mean_squared_logarithmic_error: 2.9806 - val_loss: 3.7107 - val_mean_squared_logarithmic_error: 3.5600\n",
            "Epoch 77/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1222 - mean_squared_logarithmic_error: 2.9727 - val_loss: 3.7061 - val_mean_squared_logarithmic_error: 3.5581\n",
            "Epoch 78/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1477 - mean_squared_logarithmic_error: 2.9973 - val_loss: 3.7200 - val_mean_squared_logarithmic_error: 3.5724\n",
            "Epoch 79/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1467 - mean_squared_logarithmic_error: 2.9977 - val_loss: 3.7060 - val_mean_squared_logarithmic_error: 3.5577\n",
            "Epoch 80/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1326 - mean_squared_logarithmic_error: 2.9847 - val_loss: 3.6983 - val_mean_squared_logarithmic_error: 3.5490\n",
            "Epoch 81/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1187 - mean_squared_logarithmic_error: 2.9704 - val_loss: 3.7083 - val_mean_squared_logarithmic_error: 3.5599\n",
            "Epoch 82/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1449 - mean_squared_logarithmic_error: 2.9971 - val_loss: 3.7167 - val_mean_squared_logarithmic_error: 3.5731\n",
            "Epoch 83/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1329 - mean_squared_logarithmic_error: 2.9860 - val_loss: 3.6901 - val_mean_squared_logarithmic_error: 3.5440\n",
            "Epoch 84/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0967 - mean_squared_logarithmic_error: 2.9500 - val_loss: 3.6854 - val_mean_squared_logarithmic_error: 3.5378\n",
            "Epoch 85/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0971 - mean_squared_logarithmic_error: 2.9498 - val_loss: 3.6848 - val_mean_squared_logarithmic_error: 3.5419\n",
            "Epoch 86/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1386 - mean_squared_logarithmic_error: 2.9935 - val_loss: 3.7001 - val_mean_squared_logarithmic_error: 3.5517\n",
            "Epoch 87/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1063 - mean_squared_logarithmic_error: 2.9599 - val_loss: 3.6831 - val_mean_squared_logarithmic_error: 3.5403\n",
            "Epoch 88/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1033 - mean_squared_logarithmic_error: 2.9581 - val_loss: 3.7024 - val_mean_squared_logarithmic_error: 3.5567\n",
            "Epoch 89/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0944 - mean_squared_logarithmic_error: 2.9473 - val_loss: 3.6625 - val_mean_squared_logarithmic_error: 3.5223\n",
            "Epoch 90/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0789 - mean_squared_logarithmic_error: 2.9344 - val_loss: 3.6829 - val_mean_squared_logarithmic_error: 3.5386\n",
            "Epoch 91/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1140 - mean_squared_logarithmic_error: 2.9685 - val_loss: 3.6898 - val_mean_squared_logarithmic_error: 3.5471\n",
            "Epoch 92/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1139 - mean_squared_logarithmic_error: 2.9706 - val_loss: 3.6790 - val_mean_squared_logarithmic_error: 3.5322\n",
            "Epoch 93/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0821 - mean_squared_logarithmic_error: 2.9376 - val_loss: 3.6686 - val_mean_squared_logarithmic_error: 3.5241\n",
            "Epoch 94/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1147 - mean_squared_logarithmic_error: 2.9697 - val_loss: 3.6729 - val_mean_squared_logarithmic_error: 3.5292\n",
            "Epoch 95/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0891 - mean_squared_logarithmic_error: 2.9454 - val_loss: 3.6877 - val_mean_squared_logarithmic_error: 3.5453\n",
            "Epoch 96/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1124 - mean_squared_logarithmic_error: 2.9685 - val_loss: 3.6936 - val_mean_squared_logarithmic_error: 3.5500\n",
            "Epoch 97/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0959 - mean_squared_logarithmic_error: 2.9521 - val_loss: 3.6886 - val_mean_squared_logarithmic_error: 3.5473\n",
            "Epoch 98/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0823 - mean_squared_logarithmic_error: 2.9389 - val_loss: 3.6706 - val_mean_squared_logarithmic_error: 3.5300\n",
            "Epoch 99/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0848 - mean_squared_logarithmic_error: 2.9424 - val_loss: 3.6662 - val_mean_squared_logarithmic_error: 3.5245\n",
            "Epoch 100/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1084 - mean_squared_logarithmic_error: 2.9663 - val_loss: 3.6565 - val_mean_squared_logarithmic_error: 3.5130\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "vbwCKAWRNhOY",
        "outputId": "bfc40009-47f9-4ded-f7be-aab3f3cc89e6"
      },
      "source": [
        "model_15_width_10_both_layers = run_training(data_set=df_train_stand, x_columns=x_col_top_15, width_multiplier=10) #v"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_23\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_62 (Dense)             (None, 150)               2400      \n",
            "_________________________________________________________________\n",
            "dropout_29 (Dropout)         (None, 150)               0         \n",
            "_________________________________________________________________\n",
            "dense_63 (Dense)             (None, 150)               22650     \n",
            "_________________________________________________________________\n",
            "dropout_30 (Dropout)         (None, 150)               0         \n",
            "_________________________________________________________________\n",
            "dense_64 (Dense)             (None, 1)                 151       \n",
            "=================================================================\n",
            "Total params: 25,201\n",
            "Trainable params: 25,201\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "Epoch 1/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 11.9062 - mean_squared_logarithmic_error: 11.5083 - val_loss: 6.4864 - val_mean_squared_logarithmic_error: 5.9307\n",
            "Epoch 2/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 5.3279 - mean_squared_logarithmic_error: 4.7113 - val_loss: 5.2281 - val_mean_squared_logarithmic_error: 4.5709\n",
            "Epoch 3/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.5535 - mean_squared_logarithmic_error: 3.8895 - val_loss: 4.7852 - val_mean_squared_logarithmic_error: 4.1313\n",
            "Epoch 4/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.2186 - mean_squared_logarithmic_error: 3.5818 - val_loss: 4.5530 - val_mean_squared_logarithmic_error: 3.9467\n",
            "Epoch 5/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.9841 - mean_squared_logarithmic_error: 3.4015 - val_loss: 4.4075 - val_mean_squared_logarithmic_error: 3.8498\n",
            "Epoch 6/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.8473 - mean_squared_logarithmic_error: 3.3098 - val_loss: 4.2822 - val_mean_squared_logarithmic_error: 3.7850\n",
            "Epoch 7/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.7348 - mean_squared_logarithmic_error: 3.2458 - val_loss: 4.1919 - val_mean_squared_logarithmic_error: 3.6968\n",
            "Epoch 8/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.6410 - mean_squared_logarithmic_error: 3.1754 - val_loss: 4.1360 - val_mean_squared_logarithmic_error: 3.6829\n",
            "Epoch 9/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.5855 - mean_squared_logarithmic_error: 3.1472 - val_loss: 4.0745 - val_mean_squared_logarithmic_error: 3.6491\n",
            "Epoch 10/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.5147 - mean_squared_logarithmic_error: 3.1018 - val_loss: 4.0569 - val_mean_squared_logarithmic_error: 3.6574\n",
            "Epoch 11/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.4825 - mean_squared_logarithmic_error: 3.0901 - val_loss: 4.0233 - val_mean_squared_logarithmic_error: 3.6403\n",
            "Epoch 12/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4336 - mean_squared_logarithmic_error: 3.0589 - val_loss: 3.9873 - val_mean_squared_logarithmic_error: 3.6182\n",
            "Epoch 13/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4087 - mean_squared_logarithmic_error: 3.0521 - val_loss: 3.9578 - val_mean_squared_logarithmic_error: 3.6044\n",
            "Epoch 14/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3675 - mean_squared_logarithmic_error: 3.0255 - val_loss: 3.9452 - val_mean_squared_logarithmic_error: 3.6056\n",
            "Epoch 15/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3621 - mean_squared_logarithmic_error: 3.0328 - val_loss: 3.9388 - val_mean_squared_logarithmic_error: 3.6221\n",
            "Epoch 16/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.3409 - mean_squared_logarithmic_error: 3.0247 - val_loss: 3.9216 - val_mean_squared_logarithmic_error: 3.6171\n",
            "Epoch 17/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3013 - mean_squared_logarithmic_error: 2.9956 - val_loss: 3.9389 - val_mean_squared_logarithmic_error: 3.6371\n",
            "Epoch 18/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3229 - mean_squared_logarithmic_error: 3.0252 - val_loss: 3.9265 - val_mean_squared_logarithmic_error: 3.6398\n",
            "Epoch 19/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2759 - mean_squared_logarithmic_error: 2.9894 - val_loss: 3.8885 - val_mean_squared_logarithmic_error: 3.6001\n",
            "Epoch 20/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2541 - mean_squared_logarithmic_error: 2.9735 - val_loss: 3.8972 - val_mean_squared_logarithmic_error: 3.6165\n",
            "Epoch 21/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2690 - mean_squared_logarithmic_error: 2.9938 - val_loss: 3.9032 - val_mean_squared_logarithmic_error: 3.6369\n",
            "Epoch 22/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2466 - mean_squared_logarithmic_error: 2.9783 - val_loss: 3.8398 - val_mean_squared_logarithmic_error: 3.5811\n",
            "Epoch 23/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2550 - mean_squared_logarithmic_error: 2.9941 - val_loss: 3.8487 - val_mean_squared_logarithmic_error: 3.5893\n",
            "Epoch 24/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2314 - mean_squared_logarithmic_error: 2.9762 - val_loss: 3.8395 - val_mean_squared_logarithmic_error: 3.5814\n",
            "Epoch 25/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2248 - mean_squared_logarithmic_error: 2.9738 - val_loss: 3.8664 - val_mean_squared_logarithmic_error: 3.6111\n",
            "Epoch 26/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2178 - mean_squared_logarithmic_error: 2.9702 - val_loss: 3.8613 - val_mean_squared_logarithmic_error: 3.6136\n",
            "Epoch 27/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2049 - mean_squared_logarithmic_error: 2.9611 - val_loss: 3.8655 - val_mean_squared_logarithmic_error: 3.6249\n",
            "Epoch 28/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2117 - mean_squared_logarithmic_error: 2.9721 - val_loss: 3.8155 - val_mean_squared_logarithmic_error: 3.5753\n",
            "Epoch 29/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1847 - mean_squared_logarithmic_error: 2.9482 - val_loss: 3.8089 - val_mean_squared_logarithmic_error: 3.5699\n",
            "Epoch 30/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1890 - mean_squared_logarithmic_error: 2.9547 - val_loss: 3.8338 - val_mean_squared_logarithmic_error: 3.5991\n",
            "Epoch 31/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1764 - mean_squared_logarithmic_error: 2.9435 - val_loss: 3.8265 - val_mean_squared_logarithmic_error: 3.5941\n",
            "Epoch 32/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1848 - mean_squared_logarithmic_error: 2.9553 - val_loss: 3.8316 - val_mean_squared_logarithmic_error: 3.5955\n",
            "Epoch 33/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1775 - mean_squared_logarithmic_error: 2.9481 - val_loss: 3.8698 - val_mean_squared_logarithmic_error: 3.6437\n",
            "Epoch 34/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1503 - mean_squared_logarithmic_error: 2.9238 - val_loss: 3.8254 - val_mean_squared_logarithmic_error: 3.6022\n",
            "Epoch 35/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1583 - mean_squared_logarithmic_error: 2.9348 - val_loss: 3.8160 - val_mean_squared_logarithmic_error: 3.5947\n",
            "Epoch 36/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1509 - mean_squared_logarithmic_error: 2.9282 - val_loss: 3.8603 - val_mean_squared_logarithmic_error: 3.6504\n",
            "Epoch 37/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1373 - mean_squared_logarithmic_error: 2.9185 - val_loss: 3.8185 - val_mean_squared_logarithmic_error: 3.5950\n",
            "Epoch 38/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1531 - mean_squared_logarithmic_error: 2.9328 - val_loss: 3.7918 - val_mean_squared_logarithmic_error: 3.5741\n",
            "Epoch 39/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1269 - mean_squared_logarithmic_error: 2.9085 - val_loss: 3.8230 - val_mean_squared_logarithmic_error: 3.6120\n",
            "Epoch 40/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1152 - mean_squared_logarithmic_error: 2.9001 - val_loss: 3.8166 - val_mean_squared_logarithmic_error: 3.6047\n",
            "Epoch 41/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1410 - mean_squared_logarithmic_error: 2.9257 - val_loss: 3.7712 - val_mean_squared_logarithmic_error: 3.5566\n",
            "Epoch 42/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1308 - mean_squared_logarithmic_error: 2.9165 - val_loss: 3.7972 - val_mean_squared_logarithmic_error: 3.5927\n",
            "Epoch 43/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1120 - mean_squared_logarithmic_error: 2.8998 - val_loss: 3.7629 - val_mean_squared_logarithmic_error: 3.5470\n",
            "Epoch 44/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1292 - mean_squared_logarithmic_error: 2.9172 - val_loss: 3.7739 - val_mean_squared_logarithmic_error: 3.5666\n",
            "Epoch 45/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1018 - mean_squared_logarithmic_error: 2.8919 - val_loss: 3.7854 - val_mean_squared_logarithmic_error: 3.5710\n",
            "Epoch 46/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1180 - mean_squared_logarithmic_error: 2.9079 - val_loss: 3.8020 - val_mean_squared_logarithmic_error: 3.5947\n",
            "Epoch 47/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0906 - mean_squared_logarithmic_error: 2.8816 - val_loss: 3.8245 - val_mean_squared_logarithmic_error: 3.6201\n",
            "Epoch 48/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0982 - mean_squared_logarithmic_error: 2.8903 - val_loss: 3.8136 - val_mean_squared_logarithmic_error: 3.6035\n",
            "Epoch 49/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0833 - mean_squared_logarithmic_error: 2.8765 - val_loss: 3.7857 - val_mean_squared_logarithmic_error: 3.5815\n",
            "Epoch 50/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0869 - mean_squared_logarithmic_error: 2.8806 - val_loss: 3.8224 - val_mean_squared_logarithmic_error: 3.6161\n",
            "Epoch 51/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0741 - mean_squared_logarithmic_error: 2.8680 - val_loss: 3.8384 - val_mean_squared_logarithmic_error: 3.6304\n",
            "Epoch 52/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0869 - mean_squared_logarithmic_error: 2.8810 - val_loss: 3.7967 - val_mean_squared_logarithmic_error: 3.5869\n",
            "Epoch 53/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0833 - mean_squared_logarithmic_error: 2.8778 - val_loss: 3.7992 - val_mean_squared_logarithmic_error: 3.5910\n",
            "Epoch 54/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0686 - mean_squared_logarithmic_error: 2.8641 - val_loss: 3.7632 - val_mean_squared_logarithmic_error: 3.5558\n",
            "Epoch 55/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0890 - mean_squared_logarithmic_error: 2.8841 - val_loss: 3.7770 - val_mean_squared_logarithmic_error: 3.5715\n",
            "Epoch 56/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0596 - mean_squared_logarithmic_error: 2.8561 - val_loss: 3.7685 - val_mean_squared_logarithmic_error: 3.5626\n",
            "Epoch 57/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0581 - mean_squared_logarithmic_error: 2.8540 - val_loss: 3.7719 - val_mean_squared_logarithmic_error: 3.5631\n",
            "Epoch 58/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0755 - mean_squared_logarithmic_error: 2.8702 - val_loss: 3.7641 - val_mean_squared_logarithmic_error: 3.5590\n",
            "Epoch 59/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0715 - mean_squared_logarithmic_error: 2.8676 - val_loss: 3.7631 - val_mean_squared_logarithmic_error: 3.5605\n",
            "Epoch 60/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0522 - mean_squared_logarithmic_error: 2.8504 - val_loss: 3.7819 - val_mean_squared_logarithmic_error: 3.5813\n",
            "Epoch 61/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0582 - mean_squared_logarithmic_error: 2.8558 - val_loss: 3.7978 - val_mean_squared_logarithmic_error: 3.5973\n",
            "Epoch 62/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0590 - mean_squared_logarithmic_error: 2.8573 - val_loss: 3.7754 - val_mean_squared_logarithmic_error: 3.5768\n",
            "Epoch 63/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0131 - mean_squared_logarithmic_error: 2.8106 - val_loss: 3.7960 - val_mean_squared_logarithmic_error: 3.5973\n",
            "Epoch 64/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0564 - mean_squared_logarithmic_error: 2.8553 - val_loss: 3.7661 - val_mean_squared_logarithmic_error: 3.5654\n",
            "Epoch 65/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0375 - mean_squared_logarithmic_error: 2.8367 - val_loss: 3.8138 - val_mean_squared_logarithmic_error: 3.6101\n",
            "Epoch 66/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0317 - mean_squared_logarithmic_error: 2.8310 - val_loss: 3.7573 - val_mean_squared_logarithmic_error: 3.5532\n",
            "Epoch 67/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0385 - mean_squared_logarithmic_error: 2.8386 - val_loss: 3.8114 - val_mean_squared_logarithmic_error: 3.6107\n",
            "Epoch 68/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0168 - mean_squared_logarithmic_error: 2.8171 - val_loss: 3.7763 - val_mean_squared_logarithmic_error: 3.5755\n",
            "Epoch 69/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0347 - mean_squared_logarithmic_error: 2.8340 - val_loss: 3.7504 - val_mean_squared_logarithmic_error: 3.5572\n",
            "Epoch 70/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0365 - mean_squared_logarithmic_error: 2.8374 - val_loss: 3.7345 - val_mean_squared_logarithmic_error: 3.5347\n",
            "Epoch 71/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0394 - mean_squared_logarithmic_error: 2.8384 - val_loss: 3.7580 - val_mean_squared_logarithmic_error: 3.5587\n",
            "Epoch 72/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0112 - mean_squared_logarithmic_error: 2.8115 - val_loss: 3.7621 - val_mean_squared_logarithmic_error: 3.5612\n",
            "Epoch 73/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0178 - mean_squared_logarithmic_error: 2.8184 - val_loss: 3.7927 - val_mean_squared_logarithmic_error: 3.6007\n",
            "Epoch 74/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9900 - mean_squared_logarithmic_error: 2.7920 - val_loss: 3.7797 - val_mean_squared_logarithmic_error: 3.5785\n",
            "Epoch 75/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0350 - mean_squared_logarithmic_error: 2.8356 - val_loss: 3.7409 - val_mean_squared_logarithmic_error: 3.5404\n",
            "Epoch 76/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0145 - mean_squared_logarithmic_error: 2.8154 - val_loss: 3.7362 - val_mean_squared_logarithmic_error: 3.5377\n",
            "Epoch 77/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0026 - mean_squared_logarithmic_error: 2.8038 - val_loss: 3.7371 - val_mean_squared_logarithmic_error: 3.5383\n",
            "Epoch 78/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9918 - mean_squared_logarithmic_error: 2.7901 - val_loss: 3.7461 - val_mean_squared_logarithmic_error: 3.5476\n",
            "Epoch 79/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0011 - mean_squared_logarithmic_error: 2.8013 - val_loss: 3.7348 - val_mean_squared_logarithmic_error: 3.5369\n",
            "Epoch 80/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0154 - mean_squared_logarithmic_error: 2.8159 - val_loss: 3.7326 - val_mean_squared_logarithmic_error: 3.5311\n",
            "Epoch 81/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9945 - mean_squared_logarithmic_error: 2.7938 - val_loss: 3.7665 - val_mean_squared_logarithmic_error: 3.5667\n",
            "Epoch 82/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0043 - mean_squared_logarithmic_error: 2.8042 - val_loss: 3.7572 - val_mean_squared_logarithmic_error: 3.5628\n",
            "Epoch 83/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9849 - mean_squared_logarithmic_error: 2.7861 - val_loss: 3.7375 - val_mean_squared_logarithmic_error: 3.5399\n",
            "Epoch 84/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9713 - mean_squared_logarithmic_error: 2.7729 - val_loss: 3.7302 - val_mean_squared_logarithmic_error: 3.5283\n",
            "Epoch 85/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9820 - mean_squared_logarithmic_error: 2.7816 - val_loss: 3.7323 - val_mean_squared_logarithmic_error: 3.5363\n",
            "Epoch 86/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9977 - mean_squared_logarithmic_error: 2.7986 - val_loss: 3.7593 - val_mean_squared_logarithmic_error: 3.5560\n",
            "Epoch 87/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9946 - mean_squared_logarithmic_error: 2.7940 - val_loss: 3.7313 - val_mean_squared_logarithmic_error: 3.5334\n",
            "Epoch 88/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9602 - mean_squared_logarithmic_error: 2.7597 - val_loss: 3.7158 - val_mean_squared_logarithmic_error: 3.5129\n",
            "Epoch 89/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9570 - mean_squared_logarithmic_error: 2.7543 - val_loss: 3.7309 - val_mean_squared_logarithmic_error: 3.5364\n",
            "Epoch 90/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9840 - mean_squared_logarithmic_error: 2.7840 - val_loss: 3.7603 - val_mean_squared_logarithmic_error: 3.5615\n",
            "Epoch 91/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9731 - mean_squared_logarithmic_error: 2.7716 - val_loss: 3.7296 - val_mean_squared_logarithmic_error: 3.5330\n",
            "Epoch 92/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9433 - mean_squared_logarithmic_error: 2.7447 - val_loss: 3.7354 - val_mean_squared_logarithmic_error: 3.5320\n",
            "Epoch 93/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9596 - mean_squared_logarithmic_error: 2.7592 - val_loss: 3.7376 - val_mean_squared_logarithmic_error: 3.5370\n",
            "Epoch 94/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9840 - mean_squared_logarithmic_error: 2.7836 - val_loss: 3.7470 - val_mean_squared_logarithmic_error: 3.5479\n",
            "Epoch 95/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9655 - mean_squared_logarithmic_error: 2.7662 - val_loss: 3.7294 - val_mean_squared_logarithmic_error: 3.5304\n",
            "Epoch 96/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9779 - mean_squared_logarithmic_error: 2.7765 - val_loss: 3.7338 - val_mean_squared_logarithmic_error: 3.5336\n",
            "Epoch 97/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9358 - mean_squared_logarithmic_error: 2.7365 - val_loss: 3.7566 - val_mean_squared_logarithmic_error: 3.5588\n",
            "Epoch 98/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9655 - mean_squared_logarithmic_error: 2.7658 - val_loss: 3.7629 - val_mean_squared_logarithmic_error: 3.5663\n",
            "Epoch 99/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9869 - mean_squared_logarithmic_error: 2.7879 - val_loss: 3.7324 - val_mean_squared_logarithmic_error: 3.5336\n",
            "Epoch 100/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9746 - mean_squared_logarithmic_error: 2.7754 - val_loss: 3.7527 - val_mean_squared_logarithmic_error: 3.5531\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nyKIfyrpWEQ0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "f7b68b0b-cdde-4340-f6e4-c2faf830f7dc"
      },
      "source": [
        "# with dropoput + max_on levels\n",
        "model_15_width_10_dropout = run_training(data_set=df_train_stand, x_columns=x_col_top_15, width_multiplier=10) #validation error #3,59"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_16\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_41 (Dense)             (None, 15)                240       \n",
            "_________________________________________________________________\n",
            "dropout_15 (Dropout)         (None, 15)                0         \n",
            "_________________________________________________________________\n",
            "dense_42 (Dense)             (None, 150)               2400      \n",
            "_________________________________________________________________\n",
            "dropout_16 (Dropout)         (None, 150)               0         \n",
            "_________________________________________________________________\n",
            "dense_43 (Dense)             (None, 1)                 151       \n",
            "=================================================================\n",
            "Total params: 2,791\n",
            "Trainable params: 2,791\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "Epoch 1/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 16.8296 - mean_squared_logarithmic_error: 16.7180 - val_loss: 8.5007 - val_mean_squared_logarithmic_error: 8.3104\n",
            "Epoch 2/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 6.7404 - mean_squared_logarithmic_error: 6.4797 - val_loss: 6.0652 - val_mean_squared_logarithmic_error: 5.7415\n",
            "Epoch 3/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 5.2705 - mean_squared_logarithmic_error: 4.9030 - val_loss: 5.2471 - val_mean_squared_logarithmic_error: 4.8471\n",
            "Epoch 4/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.7391 - mean_squared_logarithmic_error: 4.3133 - val_loss: 4.8504 - val_mean_squared_logarithmic_error: 4.4055\n",
            "Epoch 5/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.4017 - mean_squared_logarithmic_error: 3.9492 - val_loss: 4.6390 - val_mean_squared_logarithmic_error: 4.1834\n",
            "Epoch 6/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.2168 - mean_squared_logarithmic_error: 3.7653 - val_loss: 4.5004 - val_mean_squared_logarithmic_error: 4.0683\n",
            "Epoch 7/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.0708 - mean_squared_logarithmic_error: 3.6532 - val_loss: 4.3959 - val_mean_squared_logarithmic_error: 3.9817\n",
            "Epoch 8/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.9679 - mean_squared_logarithmic_error: 3.5733 - val_loss: 4.3052 - val_mean_squared_logarithmic_error: 3.9321\n",
            "Epoch 9/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.8847 - mean_squared_logarithmic_error: 3.5252 - val_loss: 4.2272 - val_mean_squared_logarithmic_error: 3.8812\n",
            "Epoch 10/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.8264 - mean_squared_logarithmic_error: 3.4921 - val_loss: 4.1475 - val_mean_squared_logarithmic_error: 3.8296\n",
            "Epoch 11/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.7834 - mean_squared_logarithmic_error: 3.4747 - val_loss: 4.0890 - val_mean_squared_logarithmic_error: 3.7910\n",
            "Epoch 12/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.7143 - mean_squared_logarithmic_error: 3.4245 - val_loss: 4.0558 - val_mean_squared_logarithmic_error: 3.7700\n",
            "Epoch 13/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.6479 - mean_squared_logarithmic_error: 3.3727 - val_loss: 4.0109 - val_mean_squared_logarithmic_error: 3.7438\n",
            "Epoch 14/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.6281 - mean_squared_logarithmic_error: 3.3691 - val_loss: 4.0012 - val_mean_squared_logarithmic_error: 3.7503\n",
            "Epoch 15/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5939 - mean_squared_logarithmic_error: 3.3480 - val_loss: 3.9599 - val_mean_squared_logarithmic_error: 3.7195\n",
            "Epoch 16/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.6175 - mean_squared_logarithmic_error: 3.3815 - val_loss: 3.9433 - val_mean_squared_logarithmic_error: 3.7167\n",
            "Epoch 17/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5504 - mean_squared_logarithmic_error: 3.3254 - val_loss: 3.9229 - val_mean_squared_logarithmic_error: 3.7028\n",
            "Epoch 18/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4795 - mean_squared_logarithmic_error: 3.2621 - val_loss: 3.8999 - val_mean_squared_logarithmic_error: 3.6875\n",
            "Epoch 19/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5045 - mean_squared_logarithmic_error: 3.2971 - val_loss: 3.9008 - val_mean_squared_logarithmic_error: 3.6923\n",
            "Epoch 20/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4859 - mean_squared_logarithmic_error: 3.2848 - val_loss: 3.8771 - val_mean_squared_logarithmic_error: 3.6773\n",
            "Epoch 21/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4809 - mean_squared_logarithmic_error: 3.2851 - val_loss: 3.8729 - val_mean_squared_logarithmic_error: 3.6828\n",
            "Epoch 22/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4536 - mean_squared_logarithmic_error: 3.2638 - val_loss: 3.8581 - val_mean_squared_logarithmic_error: 3.6751\n",
            "Epoch 23/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4442 - mean_squared_logarithmic_error: 3.2613 - val_loss: 3.8455 - val_mean_squared_logarithmic_error: 3.6611\n",
            "Epoch 24/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4420 - mean_squared_logarithmic_error: 3.2636 - val_loss: 3.8259 - val_mean_squared_logarithmic_error: 3.6439\n",
            "Epoch 25/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4480 - mean_squared_logarithmic_error: 3.2721 - val_loss: 3.8122 - val_mean_squared_logarithmic_error: 3.6360\n",
            "Epoch 26/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3982 - mean_squared_logarithmic_error: 3.2249 - val_loss: 3.7950 - val_mean_squared_logarithmic_error: 3.6230\n",
            "Epoch 27/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3996 - mean_squared_logarithmic_error: 3.2308 - val_loss: 3.8046 - val_mean_squared_logarithmic_error: 3.6382\n",
            "Epoch 28/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4300 - mean_squared_logarithmic_error: 3.2644 - val_loss: 3.8022 - val_mean_squared_logarithmic_error: 3.6391\n",
            "Epoch 29/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4159 - mean_squared_logarithmic_error: 3.2550 - val_loss: 3.7910 - val_mean_squared_logarithmic_error: 3.6295\n",
            "Epoch 30/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3747 - mean_squared_logarithmic_error: 3.2133 - val_loss: 3.7870 - val_mean_squared_logarithmic_error: 3.6279\n",
            "Epoch 31/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4220 - mean_squared_logarithmic_error: 3.2637 - val_loss: 3.7887 - val_mean_squared_logarithmic_error: 3.6318\n",
            "Epoch 32/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3816 - mean_squared_logarithmic_error: 3.2257 - val_loss: 3.7758 - val_mean_squared_logarithmic_error: 3.6200\n",
            "Epoch 33/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3273 - mean_squared_logarithmic_error: 3.1720 - val_loss: 3.7658 - val_mean_squared_logarithmic_error: 3.6127\n",
            "Epoch 34/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3745 - mean_squared_logarithmic_error: 3.2208 - val_loss: 3.7634 - val_mean_squared_logarithmic_error: 3.6116\n",
            "Epoch 35/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3686 - mean_squared_logarithmic_error: 3.2183 - val_loss: 3.7543 - val_mean_squared_logarithmic_error: 3.6062\n",
            "Epoch 36/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3640 - mean_squared_logarithmic_error: 3.2152 - val_loss: 3.7547 - val_mean_squared_logarithmic_error: 3.6123\n",
            "Epoch 37/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3489 - mean_squared_logarithmic_error: 3.2039 - val_loss: 3.7506 - val_mean_squared_logarithmic_error: 3.6049\n",
            "Epoch 38/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3626 - mean_squared_logarithmic_error: 3.2178 - val_loss: 3.7493 - val_mean_squared_logarithmic_error: 3.6053\n",
            "Epoch 39/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3308 - mean_squared_logarithmic_error: 3.1866 - val_loss: 3.7480 - val_mean_squared_logarithmic_error: 3.6072\n",
            "Epoch 40/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3276 - mean_squared_logarithmic_error: 3.1864 - val_loss: 3.7394 - val_mean_squared_logarithmic_error: 3.5993\n",
            "Epoch 41/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3458 - mean_squared_logarithmic_error: 3.2046 - val_loss: 3.7336 - val_mean_squared_logarithmic_error: 3.5944\n",
            "Epoch 42/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3231 - mean_squared_logarithmic_error: 3.1821 - val_loss: 3.7506 - val_mean_squared_logarithmic_error: 3.6163\n",
            "Epoch 43/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3115 - mean_squared_logarithmic_error: 3.1742 - val_loss: 3.7398 - val_mean_squared_logarithmic_error: 3.5991\n",
            "Epoch 44/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3199 - mean_squared_logarithmic_error: 3.1816 - val_loss: 3.7535 - val_mean_squared_logarithmic_error: 3.6191\n",
            "Epoch 45/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3016 - mean_squared_logarithmic_error: 3.1664 - val_loss: 3.7342 - val_mean_squared_logarithmic_error: 3.5975\n",
            "Epoch 46/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3412 - mean_squared_logarithmic_error: 3.2058 - val_loss: 3.7300 - val_mean_squared_logarithmic_error: 3.5958\n",
            "Epoch 47/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3110 - mean_squared_logarithmic_error: 3.1760 - val_loss: 3.7270 - val_mean_squared_logarithmic_error: 3.5942\n",
            "Epoch 48/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3160 - mean_squared_logarithmic_error: 3.1830 - val_loss: 3.7427 - val_mean_squared_logarithmic_error: 3.6069\n",
            "Epoch 49/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3107 - mean_squared_logarithmic_error: 3.1782 - val_loss: 3.7365 - val_mean_squared_logarithmic_error: 3.6065\n",
            "Epoch 50/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2982 - mean_squared_logarithmic_error: 3.1676 - val_loss: 3.7263 - val_mean_squared_logarithmic_error: 3.5952\n",
            "Epoch 51/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2922 - mean_squared_logarithmic_error: 3.1627 - val_loss: 3.7357 - val_mean_squared_logarithmic_error: 3.6045\n",
            "Epoch 52/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3129 - mean_squared_logarithmic_error: 3.1842 - val_loss: 3.7149 - val_mean_squared_logarithmic_error: 3.5846\n",
            "Epoch 53/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3036 - mean_squared_logarithmic_error: 3.1752 - val_loss: 3.7140 - val_mean_squared_logarithmic_error: 3.5839\n",
            "Epoch 54/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3228 - mean_squared_logarithmic_error: 3.1953 - val_loss: 3.7139 - val_mean_squared_logarithmic_error: 3.5854\n",
            "Epoch 55/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3095 - mean_squared_logarithmic_error: 3.1825 - val_loss: 3.7162 - val_mean_squared_logarithmic_error: 3.5895\n",
            "Epoch 56/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3222 - mean_squared_logarithmic_error: 3.1972 - val_loss: 3.7298 - val_mean_squared_logarithmic_error: 3.6023\n",
            "Epoch 57/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3021 - mean_squared_logarithmic_error: 3.1771 - val_loss: 3.7208 - val_mean_squared_logarithmic_error: 3.5945\n",
            "Epoch 58/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3129 - mean_squared_logarithmic_error: 3.1878 - val_loss: 3.7069 - val_mean_squared_logarithmic_error: 3.5815\n",
            "Epoch 59/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2902 - mean_squared_logarithmic_error: 3.1665 - val_loss: 3.6899 - val_mean_squared_logarithmic_error: 3.5680\n",
            "Epoch 60/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2859 - mean_squared_logarithmic_error: 3.1632 - val_loss: 3.7101 - val_mean_squared_logarithmic_error: 3.5872\n",
            "Epoch 61/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2821 - mean_squared_logarithmic_error: 3.1601 - val_loss: 3.6963 - val_mean_squared_logarithmic_error: 3.5754\n",
            "Epoch 62/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2737 - mean_squared_logarithmic_error: 3.1528 - val_loss: 3.6918 - val_mean_squared_logarithmic_error: 3.5711\n",
            "Epoch 63/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2893 - mean_squared_logarithmic_error: 3.1679 - val_loss: 3.6967 - val_mean_squared_logarithmic_error: 3.5781\n",
            "Epoch 64/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2694 - mean_squared_logarithmic_error: 3.1502 - val_loss: 3.6983 - val_mean_squared_logarithmic_error: 3.5787\n",
            "Epoch 65/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2686 - mean_squared_logarithmic_error: 3.1496 - val_loss: 3.7044 - val_mean_squared_logarithmic_error: 3.5833\n",
            "Epoch 66/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2668 - mean_squared_logarithmic_error: 3.1475 - val_loss: 3.6888 - val_mean_squared_logarithmic_error: 3.5691\n",
            "Epoch 67/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2767 - mean_squared_logarithmic_error: 3.1579 - val_loss: 3.7063 - val_mean_squared_logarithmic_error: 3.5869\n",
            "Epoch 68/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2914 - mean_squared_logarithmic_error: 3.1733 - val_loss: 3.6915 - val_mean_squared_logarithmic_error: 3.5745\n",
            "Epoch 69/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2760 - mean_squared_logarithmic_error: 3.1587 - val_loss: 3.6813 - val_mean_squared_logarithmic_error: 3.5663\n",
            "Epoch 70/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2632 - mean_squared_logarithmic_error: 3.1461 - val_loss: 3.6877 - val_mean_squared_logarithmic_error: 3.5707\n",
            "Epoch 71/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2429 - mean_squared_logarithmic_error: 3.1256 - val_loss: 3.6824 - val_mean_squared_logarithmic_error: 3.5655\n",
            "Epoch 72/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2873 - mean_squared_logarithmic_error: 3.1713 - val_loss: 3.6939 - val_mean_squared_logarithmic_error: 3.5752\n",
            "Epoch 73/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2670 - mean_squared_logarithmic_error: 3.1496 - val_loss: 3.7032 - val_mean_squared_logarithmic_error: 3.5898\n",
            "Epoch 74/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2720 - mean_squared_logarithmic_error: 3.1577 - val_loss: 3.7050 - val_mean_squared_logarithmic_error: 3.5882\n",
            "Epoch 75/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2638 - mean_squared_logarithmic_error: 3.1489 - val_loss: 3.6885 - val_mean_squared_logarithmic_error: 3.5737\n",
            "Epoch 76/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2778 - mean_squared_logarithmic_error: 3.1641 - val_loss: 3.6863 - val_mean_squared_logarithmic_error: 3.5729\n",
            "Epoch 77/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2626 - mean_squared_logarithmic_error: 3.1491 - val_loss: 3.6876 - val_mean_squared_logarithmic_error: 3.5753\n",
            "Epoch 78/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2577 - mean_squared_logarithmic_error: 3.1436 - val_loss: 3.6791 - val_mean_squared_logarithmic_error: 3.5671\n",
            "Epoch 79/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2646 - mean_squared_logarithmic_error: 3.1527 - val_loss: 3.6785 - val_mean_squared_logarithmic_error: 3.5664\n",
            "Epoch 80/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2650 - mean_squared_logarithmic_error: 3.1532 - val_loss: 3.6738 - val_mean_squared_logarithmic_error: 3.5609\n",
            "Epoch 81/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2396 - mean_squared_logarithmic_error: 3.1272 - val_loss: 3.6614 - val_mean_squared_logarithmic_error: 3.5487\n",
            "Epoch 82/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2373 - mean_squared_logarithmic_error: 3.1248 - val_loss: 3.6853 - val_mean_squared_logarithmic_error: 3.5751\n",
            "Epoch 83/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2513 - mean_squared_logarithmic_error: 3.1407 - val_loss: 3.6713 - val_mean_squared_logarithmic_error: 3.5610\n",
            "Epoch 84/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2489 - mean_squared_logarithmic_error: 3.1381 - val_loss: 3.6772 - val_mean_squared_logarithmic_error: 3.5654\n",
            "Epoch 85/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2582 - mean_squared_logarithmic_error: 3.1470 - val_loss: 3.6867 - val_mean_squared_logarithmic_error: 3.5790\n",
            "Epoch 86/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2206 - mean_squared_logarithmic_error: 3.1111 - val_loss: 3.6941 - val_mean_squared_logarithmic_error: 3.5817\n",
            "Epoch 87/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2271 - mean_squared_logarithmic_error: 3.1163 - val_loss: 3.6682 - val_mean_squared_logarithmic_error: 3.5609\n",
            "Epoch 88/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3092 - mean_squared_logarithmic_error: 3.1997 - val_loss: 3.6814 - val_mean_squared_logarithmic_error: 3.5699\n",
            "Epoch 89/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2590 - mean_squared_logarithmic_error: 3.1475 - val_loss: 3.6930 - val_mean_squared_logarithmic_error: 3.5860\n",
            "Epoch 90/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2675 - mean_squared_logarithmic_error: 3.1594 - val_loss: 3.6865 - val_mean_squared_logarithmic_error: 3.5783\n",
            "Epoch 91/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2664 - mean_squared_logarithmic_error: 3.1570 - val_loss: 3.6870 - val_mean_squared_logarithmic_error: 3.5800\n",
            "Epoch 92/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2563 - mean_squared_logarithmic_error: 3.1488 - val_loss: 3.6789 - val_mean_squared_logarithmic_error: 3.5696\n",
            "Epoch 93/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2620 - mean_squared_logarithmic_error: 3.1531 - val_loss: 3.6690 - val_mean_squared_logarithmic_error: 3.5606\n",
            "Epoch 94/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2801 - mean_squared_logarithmic_error: 3.1719 - val_loss: 3.6845 - val_mean_squared_logarithmic_error: 3.5772\n",
            "Epoch 95/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2477 - mean_squared_logarithmic_error: 3.1398 - val_loss: 3.6837 - val_mean_squared_logarithmic_error: 3.5762\n",
            "Epoch 96/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2443 - mean_squared_logarithmic_error: 3.1362 - val_loss: 3.6786 - val_mean_squared_logarithmic_error: 3.5716\n",
            "Epoch 97/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2491 - mean_squared_logarithmic_error: 3.1419 - val_loss: 3.6789 - val_mean_squared_logarithmic_error: 3.5714\n",
            "Epoch 98/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2193 - mean_squared_logarithmic_error: 3.1118 - val_loss: 3.6822 - val_mean_squared_logarithmic_error: 3.5770\n",
            "Epoch 99/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2462 - mean_squared_logarithmic_error: 3.1396 - val_loss: 3.6851 - val_mean_squared_logarithmic_error: 3.5797\n",
            "Epoch 100/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2268 - mean_squared_logarithmic_error: 3.1201 - val_loss: 3.6761 - val_mean_squared_logarithmic_error: 3.5673\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HNtePHtRGQ-2"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PjL-er5hMl46",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "8ebdeb2b-a477-4c9d-8293-a45701ee4877"
      },
      "source": [
        "# with dropoput + max_on levels\n",
        "model_18_width_10_dropout = run_training(data_set=df_train_stand, x_columns=x_col_top_18, width_multiplier=10) #validation error #3,59"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_17\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_44 (Dense)             (None, 18)                342       \n",
            "_________________________________________________________________\n",
            "dropout_17 (Dropout)         (None, 18)                0         \n",
            "_________________________________________________________________\n",
            "dense_45 (Dense)             (None, 180)               3420      \n",
            "_________________________________________________________________\n",
            "dropout_18 (Dropout)         (None, 180)               0         \n",
            "_________________________________________________________________\n",
            "dense_46 (Dense)             (None, 1)                 181       \n",
            "=================================================================\n",
            "Total params: 3,943\n",
            "Trainable params: 3,943\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "Epoch 1/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 15.7964 - mean_squared_logarithmic_error: 15.6635 - val_loss: 7.9453 - val_mean_squared_logarithmic_error: 7.7220\n",
            "Epoch 2/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 6.3015 - mean_squared_logarithmic_error: 6.0012 - val_loss: 5.6921 - val_mean_squared_logarithmic_error: 5.3250\n",
            "Epoch 3/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 5.0123 - mean_squared_logarithmic_error: 4.6002 - val_loss: 5.0056 - val_mean_squared_logarithmic_error: 4.5602\n",
            "Epoch 4/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.5335 - mean_squared_logarithmic_error: 4.0651 - val_loss: 4.6875 - val_mean_squared_logarithmic_error: 4.2068\n",
            "Epoch 5/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 4.2302 - mean_squared_logarithmic_error: 3.7477 - val_loss: 4.5165 - val_mean_squared_logarithmic_error: 4.0374\n",
            "Epoch 6/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.0805 - mean_squared_logarithmic_error: 3.6122 - val_loss: 4.3814 - val_mean_squared_logarithmic_error: 3.9373\n",
            "Epoch 7/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.9932 - mean_squared_logarithmic_error: 3.5671 - val_loss: 4.2790 - val_mean_squared_logarithmic_error: 3.8567\n",
            "Epoch 8/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.8508 - mean_squared_logarithmic_error: 3.4495 - val_loss: 4.2042 - val_mean_squared_logarithmic_error: 3.8233\n",
            "Epoch 9/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.7681 - mean_squared_logarithmic_error: 3.4000 - val_loss: 4.1368 - val_mean_squared_logarithmic_error: 3.7819\n",
            "Epoch 10/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.7218 - mean_squared_logarithmic_error: 3.3802 - val_loss: 4.0862 - val_mean_squared_logarithmic_error: 3.7619\n",
            "Epoch 11/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.6593 - mean_squared_logarithmic_error: 3.3445 - val_loss: 4.0424 - val_mean_squared_logarithmic_error: 3.7370\n",
            "Epoch 12/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.6302 - mean_squared_logarithmic_error: 3.3323 - val_loss: 4.0138 - val_mean_squared_logarithmic_error: 3.7220\n",
            "Epoch 13/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5916 - mean_squared_logarithmic_error: 3.3113 - val_loss: 3.9881 - val_mean_squared_logarithmic_error: 3.7144\n",
            "Epoch 14/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5066 - mean_squared_logarithmic_error: 3.2403 - val_loss: 3.9706 - val_mean_squared_logarithmic_error: 3.7112\n",
            "Epoch 15/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5284 - mean_squared_logarithmic_error: 3.2777 - val_loss: 3.9405 - val_mean_squared_logarithmic_error: 3.7005\n",
            "Epoch 16/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4833 - mean_squared_logarithmic_error: 3.2430 - val_loss: 3.9207 - val_mean_squared_logarithmic_error: 3.6890\n",
            "Epoch 17/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4791 - mean_squared_logarithmic_error: 3.2501 - val_loss: 3.9241 - val_mean_squared_logarithmic_error: 3.6998\n",
            "Epoch 18/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4382 - mean_squared_logarithmic_error: 3.2173 - val_loss: 3.9072 - val_mean_squared_logarithmic_error: 3.6915\n",
            "Epoch 19/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4167 - mean_squared_logarithmic_error: 3.2059 - val_loss: 3.9074 - val_mean_squared_logarithmic_error: 3.6929\n",
            "Epoch 20/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4395 - mean_squared_logarithmic_error: 3.2320 - val_loss: 3.8822 - val_mean_squared_logarithmic_error: 3.6771\n",
            "Epoch 21/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4269 - mean_squared_logarithmic_error: 3.2252 - val_loss: 3.8783 - val_mean_squared_logarithmic_error: 3.6823\n",
            "Epoch 22/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4019 - mean_squared_logarithmic_error: 3.2060 - val_loss: 3.8650 - val_mean_squared_logarithmic_error: 3.6737\n",
            "Epoch 23/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3897 - mean_squared_logarithmic_error: 3.2001 - val_loss: 3.8603 - val_mean_squared_logarithmic_error: 3.6709\n",
            "Epoch 24/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3864 - mean_squared_logarithmic_error: 3.2014 - val_loss: 3.8577 - val_mean_squared_logarithmic_error: 3.6694\n",
            "Epoch 25/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3796 - mean_squared_logarithmic_error: 3.1973 - val_loss: 3.8519 - val_mean_squared_logarithmic_error: 3.6692\n",
            "Epoch 26/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3631 - mean_squared_logarithmic_error: 3.1838 - val_loss: 3.8420 - val_mean_squared_logarithmic_error: 3.6639\n",
            "Epoch 27/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3361 - mean_squared_logarithmic_error: 3.1601 - val_loss: 3.8459 - val_mean_squared_logarithmic_error: 3.6736\n",
            "Epoch 28/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3727 - mean_squared_logarithmic_error: 3.2015 - val_loss: 3.8408 - val_mean_squared_logarithmic_error: 3.6697\n",
            "Epoch 29/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3494 - mean_squared_logarithmic_error: 3.1802 - val_loss: 3.8368 - val_mean_squared_logarithmic_error: 3.6672\n",
            "Epoch 30/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3338 - mean_squared_logarithmic_error: 3.1658 - val_loss: 3.8338 - val_mean_squared_logarithmic_error: 3.6678\n",
            "Epoch 31/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3052 - mean_squared_logarithmic_error: 3.1408 - val_loss: 3.8355 - val_mean_squared_logarithmic_error: 3.6733\n",
            "Epoch 32/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3334 - mean_squared_logarithmic_error: 3.1725 - val_loss: 3.8388 - val_mean_squared_logarithmic_error: 3.6783\n",
            "Epoch 33/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3261 - mean_squared_logarithmic_error: 3.1673 - val_loss: 3.8183 - val_mean_squared_logarithmic_error: 3.6607\n",
            "Epoch 34/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3142 - mean_squared_logarithmic_error: 3.1566 - val_loss: 3.8220 - val_mean_squared_logarithmic_error: 3.6654\n",
            "Epoch 35/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3005 - mean_squared_logarithmic_error: 3.1449 - val_loss: 3.8238 - val_mean_squared_logarithmic_error: 3.6709\n",
            "Epoch 36/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3213 - mean_squared_logarithmic_error: 3.1678 - val_loss: 3.8180 - val_mean_squared_logarithmic_error: 3.6710\n",
            "Epoch 37/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2929 - mean_squared_logarithmic_error: 3.1423 - val_loss: 3.8057 - val_mean_squared_logarithmic_error: 3.6550\n",
            "Epoch 38/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2944 - mean_squared_logarithmic_error: 3.1441 - val_loss: 3.7971 - val_mean_squared_logarithmic_error: 3.6486\n",
            "Epoch 39/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2986 - mean_squared_logarithmic_error: 3.1502 - val_loss: 3.7958 - val_mean_squared_logarithmic_error: 3.6513\n",
            "Epoch 40/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3116 - mean_squared_logarithmic_error: 3.1656 - val_loss: 3.7885 - val_mean_squared_logarithmic_error: 3.6448\n",
            "Epoch 41/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2780 - mean_squared_logarithmic_error: 3.1319 - val_loss: 3.7989 - val_mean_squared_logarithmic_error: 3.6529\n",
            "Epoch 42/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2652 - mean_squared_logarithmic_error: 3.1186 - val_loss: 3.7871 - val_mean_squared_logarithmic_error: 3.6479\n",
            "Epoch 43/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2910 - mean_squared_logarithmic_error: 3.1492 - val_loss: 3.7925 - val_mean_squared_logarithmic_error: 3.6494\n",
            "Epoch 44/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2552 - mean_squared_logarithmic_error: 3.1128 - val_loss: 3.7817 - val_mean_squared_logarithmic_error: 3.6416\n",
            "Epoch 45/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2647 - mean_squared_logarithmic_error: 3.1239 - val_loss: 3.7794 - val_mean_squared_logarithmic_error: 3.6385\n",
            "Epoch 46/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2999 - mean_squared_logarithmic_error: 3.1602 - val_loss: 3.7915 - val_mean_squared_logarithmic_error: 3.6531\n",
            "Epoch 47/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2826 - mean_squared_logarithmic_error: 3.1428 - val_loss: 3.7874 - val_mean_squared_logarithmic_error: 3.6501\n",
            "Epoch 48/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2390 - mean_squared_logarithmic_error: 3.1003 - val_loss: 3.7987 - val_mean_squared_logarithmic_error: 3.6567\n",
            "Epoch 49/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2694 - mean_squared_logarithmic_error: 3.1310 - val_loss: 3.7918 - val_mean_squared_logarithmic_error: 3.6559\n",
            "Epoch 50/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2808 - mean_squared_logarithmic_error: 3.1442 - val_loss: 3.7994 - val_mean_squared_logarithmic_error: 3.6633\n",
            "Epoch 51/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2598 - mean_squared_logarithmic_error: 3.1241 - val_loss: 3.7832 - val_mean_squared_logarithmic_error: 3.6459\n",
            "Epoch 52/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2492 - mean_squared_logarithmic_error: 3.1146 - val_loss: 3.7815 - val_mean_squared_logarithmic_error: 3.6447\n",
            "Epoch 53/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2833 - mean_squared_logarithmic_error: 3.1493 - val_loss: 3.7785 - val_mean_squared_logarithmic_error: 3.6436\n",
            "Epoch 54/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2680 - mean_squared_logarithmic_error: 3.1354 - val_loss: 3.7856 - val_mean_squared_logarithmic_error: 3.6512\n",
            "Epoch 55/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2855 - mean_squared_logarithmic_error: 3.1533 - val_loss: 3.7799 - val_mean_squared_logarithmic_error: 3.6471\n",
            "Epoch 56/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2540 - mean_squared_logarithmic_error: 3.1235 - val_loss: 3.7757 - val_mean_squared_logarithmic_error: 3.6452\n",
            "Epoch 57/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2780 - mean_squared_logarithmic_error: 3.1493 - val_loss: 3.7771 - val_mean_squared_logarithmic_error: 3.6460\n",
            "Epoch 58/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2337 - mean_squared_logarithmic_error: 3.1033 - val_loss: 3.7815 - val_mean_squared_logarithmic_error: 3.6501\n",
            "Epoch 59/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2633 - mean_squared_logarithmic_error: 3.1339 - val_loss: 3.7636 - val_mean_squared_logarithmic_error: 3.6340\n",
            "Epoch 60/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2247 - mean_squared_logarithmic_error: 3.0966 - val_loss: 3.7688 - val_mean_squared_logarithmic_error: 3.6412\n",
            "Epoch 61/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2431 - mean_squared_logarithmic_error: 3.1153 - val_loss: 3.7785 - val_mean_squared_logarithmic_error: 3.6521\n",
            "Epoch 62/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2373 - mean_squared_logarithmic_error: 3.1097 - val_loss: 3.7875 - val_mean_squared_logarithmic_error: 3.6616\n",
            "Epoch 63/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2173 - mean_squared_logarithmic_error: 3.0900 - val_loss: 3.7639 - val_mean_squared_logarithmic_error: 3.6398\n",
            "Epoch 64/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2441 - mean_squared_logarithmic_error: 3.1178 - val_loss: 3.7631 - val_mean_squared_logarithmic_error: 3.6358\n",
            "Epoch 65/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2258 - mean_squared_logarithmic_error: 3.0994 - val_loss: 3.7486 - val_mean_squared_logarithmic_error: 3.6222\n",
            "Epoch 66/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2441 - mean_squared_logarithmic_error: 3.1192 - val_loss: 3.7462 - val_mean_squared_logarithmic_error: 3.6203\n",
            "Epoch 67/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2511 - mean_squared_logarithmic_error: 3.1263 - val_loss: 3.7490 - val_mean_squared_logarithmic_error: 3.6247\n",
            "Epoch 68/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2208 - mean_squared_logarithmic_error: 3.0965 - val_loss: 3.7683 - val_mean_squared_logarithmic_error: 3.6444\n",
            "Epoch 69/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2500 - mean_squared_logarithmic_error: 3.1260 - val_loss: 3.7561 - val_mean_squared_logarithmic_error: 3.6339\n",
            "Epoch 70/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2289 - mean_squared_logarithmic_error: 3.1055 - val_loss: 3.7507 - val_mean_squared_logarithmic_error: 3.6275\n",
            "Epoch 71/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2079 - mean_squared_logarithmic_error: 3.0836 - val_loss: 3.7605 - val_mean_squared_logarithmic_error: 3.6365\n",
            "Epoch 72/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2474 - mean_squared_logarithmic_error: 3.1250 - val_loss: 3.7610 - val_mean_squared_logarithmic_error: 3.6373\n",
            "Epoch 73/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2248 - mean_squared_logarithmic_error: 3.1016 - val_loss: 3.7581 - val_mean_squared_logarithmic_error: 3.6387\n",
            "Epoch 74/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2294 - mean_squared_logarithmic_error: 3.1091 - val_loss: 3.7726 - val_mean_squared_logarithmic_error: 3.6503\n",
            "Epoch 75/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2175 - mean_squared_logarithmic_error: 3.0962 - val_loss: 3.7426 - val_mean_squared_logarithmic_error: 3.6204\n",
            "Epoch 76/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2418 - mean_squared_logarithmic_error: 3.1201 - val_loss: 3.7489 - val_mean_squared_logarithmic_error: 3.6274\n",
            "Epoch 77/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2185 - mean_squared_logarithmic_error: 3.0974 - val_loss: 3.7685 - val_mean_squared_logarithmic_error: 3.6485\n",
            "Epoch 78/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2486 - mean_squared_logarithmic_error: 3.1274 - val_loss: 3.7541 - val_mean_squared_logarithmic_error: 3.6345\n",
            "Epoch 79/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1859 - mean_squared_logarithmic_error: 3.0658 - val_loss: 3.7515 - val_mean_squared_logarithmic_error: 3.6320\n",
            "Epoch 80/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1889 - mean_squared_logarithmic_error: 3.0696 - val_loss: 3.7438 - val_mean_squared_logarithmic_error: 3.6235\n",
            "Epoch 81/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2161 - mean_squared_logarithmic_error: 3.0961 - val_loss: 3.7642 - val_mean_squared_logarithmic_error: 3.6443\n",
            "Epoch 82/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2119 - mean_squared_logarithmic_error: 3.0929 - val_loss: 3.7540 - val_mean_squared_logarithmic_error: 3.6385\n",
            "Epoch 83/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2141 - mean_squared_logarithmic_error: 3.0961 - val_loss: 3.7561 - val_mean_squared_logarithmic_error: 3.6384\n",
            "Epoch 84/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2124 - mean_squared_logarithmic_error: 3.0949 - val_loss: 3.7569 - val_mean_squared_logarithmic_error: 3.6387\n",
            "Epoch 85/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2078 - mean_squared_logarithmic_error: 3.0898 - val_loss: 3.7573 - val_mean_squared_logarithmic_error: 3.6428\n",
            "Epoch 86/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1614 - mean_squared_logarithmic_error: 3.0440 - val_loss: 3.7557 - val_mean_squared_logarithmic_error: 3.6360\n",
            "Epoch 87/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2178 - mean_squared_logarithmic_error: 3.0998 - val_loss: 3.7414 - val_mean_squared_logarithmic_error: 3.6256\n",
            "Epoch 88/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2074 - mean_squared_logarithmic_error: 3.0905 - val_loss: 3.7502 - val_mean_squared_logarithmic_error: 3.6323\n",
            "Epoch 89/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2062 - mean_squared_logarithmic_error: 3.0879 - val_loss: 3.7632 - val_mean_squared_logarithmic_error: 3.6501\n",
            "Epoch 90/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2058 - mean_squared_logarithmic_error: 3.0908 - val_loss: 3.7617 - val_mean_squared_logarithmic_error: 3.6459\n",
            "Epoch 91/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2057 - mean_squared_logarithmic_error: 3.0890 - val_loss: 3.7611 - val_mean_squared_logarithmic_error: 3.6459\n",
            "Epoch 92/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2067 - mean_squared_logarithmic_error: 3.0919 - val_loss: 3.7575 - val_mean_squared_logarithmic_error: 3.6410\n",
            "Epoch 93/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2105 - mean_squared_logarithmic_error: 3.0944 - val_loss: 3.7424 - val_mean_squared_logarithmic_error: 3.6273\n",
            "Epoch 94/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2138 - mean_squared_logarithmic_error: 3.0982 - val_loss: 3.7490 - val_mean_squared_logarithmic_error: 3.6345\n",
            "Epoch 95/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1927 - mean_squared_logarithmic_error: 3.0776 - val_loss: 3.7412 - val_mean_squared_logarithmic_error: 3.6273\n",
            "Epoch 96/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2110 - mean_squared_logarithmic_error: 3.0952 - val_loss: 3.7476 - val_mean_squared_logarithmic_error: 3.6321\n",
            "Epoch 97/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1976 - mean_squared_logarithmic_error: 3.0819 - val_loss: 3.7432 - val_mean_squared_logarithmic_error: 3.6291\n",
            "Epoch 98/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2127 - mean_squared_logarithmic_error: 3.0977 - val_loss: 3.7244 - val_mean_squared_logarithmic_error: 3.6106\n",
            "Epoch 99/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2072 - mean_squared_logarithmic_error: 3.0923 - val_loss: 3.7279 - val_mean_squared_logarithmic_error: 3.6142\n",
            "Epoch 100/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2073 - mean_squared_logarithmic_error: 3.0924 - val_loss: 3.7305 - val_mean_squared_logarithmic_error: 3.6143\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "S_TsQ-GmFZox",
        "outputId": "94353405-5346-4d7d-dd36-a38a48ac54b4"
      },
      "source": [
        "# with dropoput + max_on levels \n",
        "model_15_width_10_dropout = run_training(data_set=df_train, x_columns=x_col_top_15, width_multiplier=10, epochs=200) #validation error #3.5666/3.5185"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_26\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_71 (Dense)             (None, 150)               2400      \n",
            "_________________________________________________________________\n",
            "dropout_35 (Dropout)         (None, 150)               0         \n",
            "_________________________________________________________________\n",
            "dense_72 (Dense)             (None, 150)               22650     \n",
            "_________________________________________________________________\n",
            "dropout_36 (Dropout)         (None, 150)               0         \n",
            "_________________________________________________________________\n",
            "dense_73 (Dense)             (None, 1)                 151       \n",
            "=================================================================\n",
            "Total params: 25,201\n",
            "Trainable params: 25,201\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "Epoch 1/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 11.8386 - mean_squared_logarithmic_error: 11.4274 - val_loss: 6.4836 - val_mean_squared_logarithmic_error: 5.8878\n",
            "Epoch 2/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 5.3144 - mean_squared_logarithmic_error: 4.6468 - val_loss: 5.2411 - val_mean_squared_logarithmic_error: 4.5357\n",
            "Epoch 3/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.5793 - mean_squared_logarithmic_error: 3.8815 - val_loss: 4.8108 - val_mean_squared_logarithmic_error: 4.1409\n",
            "Epoch 4/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.2309 - mean_squared_logarithmic_error: 3.5856 - val_loss: 4.5541 - val_mean_squared_logarithmic_error: 3.9436\n",
            "Epoch 5/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.9982 - mean_squared_logarithmic_error: 3.4120 - val_loss: 4.4007 - val_mean_squared_logarithmic_error: 3.8371\n",
            "Epoch 6/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.8580 - mean_squared_logarithmic_error: 3.3184 - val_loss: 4.2885 - val_mean_squared_logarithmic_error: 3.7893\n",
            "Epoch 7/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.7501 - mean_squared_logarithmic_error: 3.2582 - val_loss: 4.2117 - val_mean_squared_logarithmic_error: 3.7134\n",
            "Epoch 8/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.6521 - mean_squared_logarithmic_error: 3.1848 - val_loss: 4.1587 - val_mean_squared_logarithmic_error: 3.7042\n",
            "Epoch 9/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.5931 - mean_squared_logarithmic_error: 3.1521 - val_loss: 4.0891 - val_mean_squared_logarithmic_error: 3.6587\n",
            "Epoch 10/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.5332 - mean_squared_logarithmic_error: 3.1178 - val_loss: 4.0594 - val_mean_squared_logarithmic_error: 3.6584\n",
            "Epoch 11/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.5022 - mean_squared_logarithmic_error: 3.1088 - val_loss: 4.0263 - val_mean_squared_logarithmic_error: 3.6429\n",
            "Epoch 12/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4680 - mean_squared_logarithmic_error: 3.0915 - val_loss: 4.0052 - val_mean_squared_logarithmic_error: 3.6329\n",
            "Epoch 13/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.4373 - mean_squared_logarithmic_error: 3.0786 - val_loss: 3.9883 - val_mean_squared_logarithmic_error: 3.6325\n",
            "Epoch 14/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3887 - mean_squared_logarithmic_error: 3.0451 - val_loss: 3.9369 - val_mean_squared_logarithmic_error: 3.5954\n",
            "Epoch 15/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3884 - mean_squared_logarithmic_error: 3.0569 - val_loss: 3.9294 - val_mean_squared_logarithmic_error: 3.6100\n",
            "Epoch 16/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3575 - mean_squared_logarithmic_error: 3.0387 - val_loss: 3.9338 - val_mean_squared_logarithmic_error: 3.6279\n",
            "Epoch 17/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3282 - mean_squared_logarithmic_error: 3.0206 - val_loss: 3.9204 - val_mean_squared_logarithmic_error: 3.6186\n",
            "Epoch 18/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3122 - mean_squared_logarithmic_error: 3.0124 - val_loss: 3.9168 - val_mean_squared_logarithmic_error: 3.6277\n",
            "Epoch 19/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2935 - mean_squared_logarithmic_error: 3.0050 - val_loss: 3.8941 - val_mean_squared_logarithmic_error: 3.6047\n",
            "Epoch 20/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2798 - mean_squared_logarithmic_error: 2.9967 - val_loss: 3.8849 - val_mean_squared_logarithmic_error: 3.6026\n",
            "Epoch 21/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2691 - mean_squared_logarithmic_error: 2.9921 - val_loss: 3.9014 - val_mean_squared_logarithmic_error: 3.6329\n",
            "Epoch 22/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2626 - mean_squared_logarithmic_error: 2.9925 - val_loss: 3.8604 - val_mean_squared_logarithmic_error: 3.5980\n",
            "Epoch 23/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2581 - mean_squared_logarithmic_error: 2.9953 - val_loss: 3.8889 - val_mean_squared_logarithmic_error: 3.6263\n",
            "Epoch 24/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2549 - mean_squared_logarithmic_error: 2.9977 - val_loss: 3.8634 - val_mean_squared_logarithmic_error: 3.6025\n",
            "Epoch 25/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2329 - mean_squared_logarithmic_error: 2.9810 - val_loss: 3.8725 - val_mean_squared_logarithmic_error: 3.6147\n",
            "Epoch 26/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2303 - mean_squared_logarithmic_error: 2.9808 - val_loss: 3.8581 - val_mean_squared_logarithmic_error: 3.6058\n",
            "Epoch 27/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2241 - mean_squared_logarithmic_error: 2.9784 - val_loss: 3.8286 - val_mean_squared_logarithmic_error: 3.5867\n",
            "Epoch 28/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2185 - mean_squared_logarithmic_error: 2.9768 - val_loss: 3.8176 - val_mean_squared_logarithmic_error: 3.5751\n",
            "Epoch 29/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2120 - mean_squared_logarithmic_error: 2.9741 - val_loss: 3.8047 - val_mean_squared_logarithmic_error: 3.5643\n",
            "Epoch 30/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1903 - mean_squared_logarithmic_error: 2.9546 - val_loss: 3.8254 - val_mean_squared_logarithmic_error: 3.5884\n",
            "Epoch 31/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1965 - mean_squared_logarithmic_error: 2.9624 - val_loss: 3.8264 - val_mean_squared_logarithmic_error: 3.5960\n",
            "Epoch 32/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1899 - mean_squared_logarithmic_error: 2.9616 - val_loss: 3.8447 - val_mean_squared_logarithmic_error: 3.6098\n",
            "Epoch 33/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1719 - mean_squared_logarithmic_error: 2.9432 - val_loss: 3.8416 - val_mean_squared_logarithmic_error: 3.6175\n",
            "Epoch 34/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1740 - mean_squared_logarithmic_error: 2.9485 - val_loss: 3.8184 - val_mean_squared_logarithmic_error: 3.5953\n",
            "Epoch 35/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1873 - mean_squared_logarithmic_error: 2.9641 - val_loss: 3.8089 - val_mean_squared_logarithmic_error: 3.5896\n",
            "Epoch 36/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1687 - mean_squared_logarithmic_error: 2.9476 - val_loss: 3.8555 - val_mean_squared_logarithmic_error: 3.6470\n",
            "Epoch 37/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1762 - mean_squared_logarithmic_error: 2.9590 - val_loss: 3.8069 - val_mean_squared_logarithmic_error: 3.5864\n",
            "Epoch 38/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1712 - mean_squared_logarithmic_error: 2.9543 - val_loss: 3.7972 - val_mean_squared_logarithmic_error: 3.5833\n",
            "Epoch 39/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1505 - mean_squared_logarithmic_error: 2.9345 - val_loss: 3.7940 - val_mean_squared_logarithmic_error: 3.5866\n",
            "Epoch 40/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1470 - mean_squared_logarithmic_error: 2.9347 - val_loss: 3.7908 - val_mean_squared_logarithmic_error: 3.5824\n",
            "Epoch 41/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1578 - mean_squared_logarithmic_error: 2.9460 - val_loss: 3.7932 - val_mean_squared_logarithmic_error: 3.5808\n",
            "Epoch 42/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1452 - mean_squared_logarithmic_error: 2.9325 - val_loss: 3.8301 - val_mean_squared_logarithmic_error: 3.6289\n",
            "Epoch 43/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1428 - mean_squared_logarithmic_error: 2.9340 - val_loss: 3.7880 - val_mean_squared_logarithmic_error: 3.5743\n",
            "Epoch 44/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1501 - mean_squared_logarithmic_error: 2.9410 - val_loss: 3.7950 - val_mean_squared_logarithmic_error: 3.5918\n",
            "Epoch 45/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1392 - mean_squared_logarithmic_error: 2.9338 - val_loss: 3.7812 - val_mean_squared_logarithmic_error: 3.5728\n",
            "Epoch 46/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1475 - mean_squared_logarithmic_error: 2.9406 - val_loss: 3.7807 - val_mean_squared_logarithmic_error: 3.5747\n",
            "Epoch 47/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1425 - mean_squared_logarithmic_error: 2.9355 - val_loss: 3.8065 - val_mean_squared_logarithmic_error: 3.6032\n",
            "Epoch 48/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1299 - mean_squared_logarithmic_error: 2.9243 - val_loss: 3.7772 - val_mean_squared_logarithmic_error: 3.5687\n",
            "Epoch 49/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1067 - mean_squared_logarithmic_error: 2.9021 - val_loss: 3.7900 - val_mean_squared_logarithmic_error: 3.5883\n",
            "Epoch 50/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1215 - mean_squared_logarithmic_error: 2.9171 - val_loss: 3.7881 - val_mean_squared_logarithmic_error: 3.5839\n",
            "Epoch 51/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1122 - mean_squared_logarithmic_error: 2.9084 - val_loss: 3.8192 - val_mean_squared_logarithmic_error: 3.6124\n",
            "Epoch 52/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0934 - mean_squared_logarithmic_error: 2.8898 - val_loss: 3.7634 - val_mean_squared_logarithmic_error: 3.5561\n",
            "Epoch 53/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1234 - mean_squared_logarithmic_error: 2.9197 - val_loss: 3.7682 - val_mean_squared_logarithmic_error: 3.5613\n",
            "Epoch 54/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1006 - mean_squared_logarithmic_error: 2.8980 - val_loss: 3.7841 - val_mean_squared_logarithmic_error: 3.5778\n",
            "Epoch 55/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0666 - mean_squared_logarithmic_error: 2.8628 - val_loss: 3.7778 - val_mean_squared_logarithmic_error: 3.5727\n",
            "Epoch 56/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1147 - mean_squared_logarithmic_error: 2.9134 - val_loss: 3.7645 - val_mean_squared_logarithmic_error: 3.5625\n",
            "Epoch 57/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0927 - mean_squared_logarithmic_error: 2.8923 - val_loss: 3.7852 - val_mean_squared_logarithmic_error: 3.5806\n",
            "Epoch 58/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1022 - mean_squared_logarithmic_error: 2.8998 - val_loss: 3.8142 - val_mean_squared_logarithmic_error: 3.6121\n",
            "Epoch 59/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1031 - mean_squared_logarithmic_error: 2.9015 - val_loss: 3.7474 - val_mean_squared_logarithmic_error: 3.5448\n",
            "Epoch 60/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0807 - mean_squared_logarithmic_error: 2.8789 - val_loss: 3.7931 - val_mean_squared_logarithmic_error: 3.5922\n",
            "Epoch 61/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0996 - mean_squared_logarithmic_error: 2.8985 - val_loss: 3.7794 - val_mean_squared_logarithmic_error: 3.5811\n",
            "Epoch 62/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0925 - mean_squared_logarithmic_error: 2.8923 - val_loss: 3.8202 - val_mean_squared_logarithmic_error: 3.6235\n",
            "Epoch 63/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0615 - mean_squared_logarithmic_error: 2.8605 - val_loss: 3.7601 - val_mean_squared_logarithmic_error: 3.5627\n",
            "Epoch 64/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0845 - mean_squared_logarithmic_error: 2.8842 - val_loss: 3.7719 - val_mean_squared_logarithmic_error: 3.5711\n",
            "Epoch 65/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0723 - mean_squared_logarithmic_error: 2.8731 - val_loss: 3.8247 - val_mean_squared_logarithmic_error: 3.6225\n",
            "Epoch 66/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0308 - mean_squared_logarithmic_error: 2.8314 - val_loss: 3.7836 - val_mean_squared_logarithmic_error: 3.5801\n",
            "Epoch 67/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0582 - mean_squared_logarithmic_error: 2.8574 - val_loss: 3.7991 - val_mean_squared_logarithmic_error: 3.5963\n",
            "Epoch 68/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0660 - mean_squared_logarithmic_error: 2.8642 - val_loss: 3.7614 - val_mean_squared_logarithmic_error: 3.5572\n",
            "Epoch 69/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0618 - mean_squared_logarithmic_error: 2.8606 - val_loss: 3.7655 - val_mean_squared_logarithmic_error: 3.5715\n",
            "Epoch 70/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0382 - mean_squared_logarithmic_error: 2.8373 - val_loss: 3.7733 - val_mean_squared_logarithmic_error: 3.5722\n",
            "Epoch 71/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0645 - mean_squared_logarithmic_error: 2.8626 - val_loss: 3.7922 - val_mean_squared_logarithmic_error: 3.5917\n",
            "Epoch 72/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0366 - mean_squared_logarithmic_error: 2.8351 - val_loss: 3.7666 - val_mean_squared_logarithmic_error: 3.5640\n",
            "Epoch 73/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0460 - mean_squared_logarithmic_error: 2.8444 - val_loss: 3.8151 - val_mean_squared_logarithmic_error: 3.6224\n",
            "Epoch 74/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0342 - mean_squared_logarithmic_error: 2.8357 - val_loss: 3.7834 - val_mean_squared_logarithmic_error: 3.5826\n",
            "Epoch 75/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0415 - mean_squared_logarithmic_error: 2.8417 - val_loss: 3.8045 - val_mean_squared_logarithmic_error: 3.6047\n",
            "Epoch 76/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0400 - mean_squared_logarithmic_error: 2.8402 - val_loss: 3.7534 - val_mean_squared_logarithmic_error: 3.5548\n",
            "Epoch 77/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0190 - mean_squared_logarithmic_error: 2.8204 - val_loss: 3.8014 - val_mean_squared_logarithmic_error: 3.6044\n",
            "Epoch 78/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0278 - mean_squared_logarithmic_error: 2.8282 - val_loss: 3.7471 - val_mean_squared_logarithmic_error: 3.5516\n",
            "Epoch 79/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0546 - mean_squared_logarithmic_error: 2.8567 - val_loss: 3.7639 - val_mean_squared_logarithmic_error: 3.5677\n",
            "Epoch 80/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0171 - mean_squared_logarithmic_error: 2.8191 - val_loss: 3.7615 - val_mean_squared_logarithmic_error: 3.5602\n",
            "Epoch 81/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.0222 - mean_squared_logarithmic_error: 2.8226 - val_loss: 3.7705 - val_mean_squared_logarithmic_error: 3.5721\n",
            "Epoch 82/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0074 - mean_squared_logarithmic_error: 2.8072 - val_loss: 3.7925 - val_mean_squared_logarithmic_error: 3.5958\n",
            "Epoch 83/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0093 - mean_squared_logarithmic_error: 2.8083 - val_loss: 3.7812 - val_mean_squared_logarithmic_error: 3.5809\n",
            "Epoch 84/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0291 - mean_squared_logarithmic_error: 2.8288 - val_loss: 3.7864 - val_mean_squared_logarithmic_error: 3.5827\n",
            "Epoch 85/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9901 - mean_squared_logarithmic_error: 2.7887 - val_loss: 3.7466 - val_mean_squared_logarithmic_error: 3.5498\n",
            "Epoch 86/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9765 - mean_squared_logarithmic_error: 2.7761 - val_loss: 3.7611 - val_mean_squared_logarithmic_error: 3.5541\n",
            "Epoch 87/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0049 - mean_squared_logarithmic_error: 2.8028 - val_loss: 3.7457 - val_mean_squared_logarithmic_error: 3.5485\n",
            "Epoch 88/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9849 - mean_squared_logarithmic_error: 2.7836 - val_loss: 3.8094 - val_mean_squared_logarithmic_error: 3.6063\n",
            "Epoch 89/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9948 - mean_squared_logarithmic_error: 2.7909 - val_loss: 3.7617 - val_mean_squared_logarithmic_error: 3.5660\n",
            "Epoch 90/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9869 - mean_squared_logarithmic_error: 2.7852 - val_loss: 3.7570 - val_mean_squared_logarithmic_error: 3.5569\n",
            "Epoch 91/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0105 - mean_squared_logarithmic_error: 2.8075 - val_loss: 3.7260 - val_mean_squared_logarithmic_error: 3.5252\n",
            "Epoch 92/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0097 - mean_squared_logarithmic_error: 2.8087 - val_loss: 3.7551 - val_mean_squared_logarithmic_error: 3.5496\n",
            "Epoch 93/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9986 - mean_squared_logarithmic_error: 2.7964 - val_loss: 3.7247 - val_mean_squared_logarithmic_error: 3.5219\n",
            "Epoch 94/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9833 - mean_squared_logarithmic_error: 2.7792 - val_loss: 3.7894 - val_mean_squared_logarithmic_error: 3.5853\n",
            "Epoch 95/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9714 - mean_squared_logarithmic_error: 2.7686 - val_loss: 3.7757 - val_mean_squared_logarithmic_error: 3.5720\n",
            "Epoch 96/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9939 - mean_squared_logarithmic_error: 2.7881 - val_loss: 3.7873 - val_mean_squared_logarithmic_error: 3.5821\n",
            "Epoch 97/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9830 - mean_squared_logarithmic_error: 2.7797 - val_loss: 3.7605 - val_mean_squared_logarithmic_error: 3.5595\n",
            "Epoch 98/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9782 - mean_squared_logarithmic_error: 2.7752 - val_loss: 3.7344 - val_mean_squared_logarithmic_error: 3.5351\n",
            "Epoch 99/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9579 - mean_squared_logarithmic_error: 2.7564 - val_loss: 3.7006 - val_mean_squared_logarithmic_error: 3.4977\n",
            "Epoch 100/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9640 - mean_squared_logarithmic_error: 2.7609 - val_loss: 3.7522 - val_mean_squared_logarithmic_error: 3.5477\n",
            "Epoch 101/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9730 - mean_squared_logarithmic_error: 2.7679 - val_loss: 3.7156 - val_mean_squared_logarithmic_error: 3.5128\n",
            "Epoch 102/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9838 - mean_squared_logarithmic_error: 2.7791 - val_loss: 3.7474 - val_mean_squared_logarithmic_error: 3.5439\n",
            "Epoch 103/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9627 - mean_squared_logarithmic_error: 2.7575 - val_loss: 3.7265 - val_mean_squared_logarithmic_error: 3.5206\n",
            "Epoch 104/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9943 - mean_squared_logarithmic_error: 2.7892 - val_loss: 3.6943 - val_mean_squared_logarithmic_error: 3.4898\n",
            "Epoch 105/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9675 - mean_squared_logarithmic_error: 2.7639 - val_loss: 3.7584 - val_mean_squared_logarithmic_error: 3.5497\n",
            "Epoch 106/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9675 - mean_squared_logarithmic_error: 2.7634 - val_loss: 3.7524 - val_mean_squared_logarithmic_error: 3.5498\n",
            "Epoch 107/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9620 - mean_squared_logarithmic_error: 2.7578 - val_loss: 3.7281 - val_mean_squared_logarithmic_error: 3.5238\n",
            "Epoch 108/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9785 - mean_squared_logarithmic_error: 2.7751 - val_loss: 3.7637 - val_mean_squared_logarithmic_error: 3.5643\n",
            "Epoch 109/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9267 - mean_squared_logarithmic_error: 2.7236 - val_loss: 3.7367 - val_mean_squared_logarithmic_error: 3.5320\n",
            "Epoch 110/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9703 - mean_squared_logarithmic_error: 2.7657 - val_loss: 3.7058 - val_mean_squared_logarithmic_error: 3.5004\n",
            "Epoch 111/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9466 - mean_squared_logarithmic_error: 2.7427 - val_loss: 3.7615 - val_mean_squared_logarithmic_error: 3.5598\n",
            "Epoch 112/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9560 - mean_squared_logarithmic_error: 2.7521 - val_loss: 3.7399 - val_mean_squared_logarithmic_error: 3.5362\n",
            "Epoch 113/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9647 - mean_squared_logarithmic_error: 2.7599 - val_loss: 3.7105 - val_mean_squared_logarithmic_error: 3.5056\n",
            "Epoch 114/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9522 - mean_squared_logarithmic_error: 2.7481 - val_loss: 3.7165 - val_mean_squared_logarithmic_error: 3.5095\n",
            "Epoch 115/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9784 - mean_squared_logarithmic_error: 2.7733 - val_loss: 3.7070 - val_mean_squared_logarithmic_error: 3.5046\n",
            "Epoch 116/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9440 - mean_squared_logarithmic_error: 2.7396 - val_loss: 3.7123 - val_mean_squared_logarithmic_error: 3.5112\n",
            "Epoch 117/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9415 - mean_squared_logarithmic_error: 2.7393 - val_loss: 3.7314 - val_mean_squared_logarithmic_error: 3.5312\n",
            "Epoch 118/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9522 - mean_squared_logarithmic_error: 2.7486 - val_loss: 3.6863 - val_mean_squared_logarithmic_error: 3.4832\n",
            "Epoch 119/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9374 - mean_squared_logarithmic_error: 2.7328 - val_loss: 3.6926 - val_mean_squared_logarithmic_error: 3.4861\n",
            "Epoch 120/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9520 - mean_squared_logarithmic_error: 2.7479 - val_loss: 3.7176 - val_mean_squared_logarithmic_error: 3.5136\n",
            "Epoch 121/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9390 - mean_squared_logarithmic_error: 2.7344 - val_loss: 3.7187 - val_mean_squared_logarithmic_error: 3.5124\n",
            "Epoch 122/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9251 - mean_squared_logarithmic_error: 2.7205 - val_loss: 3.7116 - val_mean_squared_logarithmic_error: 3.5090\n",
            "Epoch 123/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9159 - mean_squared_logarithmic_error: 2.7093 - val_loss: 3.7408 - val_mean_squared_logarithmic_error: 3.5347\n",
            "Epoch 124/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9363 - mean_squared_logarithmic_error: 2.7312 - val_loss: 3.6768 - val_mean_squared_logarithmic_error: 3.4679\n",
            "Epoch 125/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9427 - mean_squared_logarithmic_error: 2.7350 - val_loss: 3.7112 - val_mean_squared_logarithmic_error: 3.5127\n",
            "Epoch 126/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9309 - mean_squared_logarithmic_error: 2.7260 - val_loss: 3.7054 - val_mean_squared_logarithmic_error: 3.4975\n",
            "Epoch 127/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9386 - mean_squared_logarithmic_error: 2.7324 - val_loss: 3.7128 - val_mean_squared_logarithmic_error: 3.5087\n",
            "Epoch 128/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9054 - mean_squared_logarithmic_error: 2.6986 - val_loss: 3.7460 - val_mean_squared_logarithmic_error: 3.5441\n",
            "Epoch 129/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9314 - mean_squared_logarithmic_error: 2.7269 - val_loss: 3.7042 - val_mean_squared_logarithmic_error: 3.4985\n",
            "Epoch 130/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9177 - mean_squared_logarithmic_error: 2.7121 - val_loss: 3.7422 - val_mean_squared_logarithmic_error: 3.5323\n",
            "Epoch 131/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9335 - mean_squared_logarithmic_error: 2.7281 - val_loss: 3.7309 - val_mean_squared_logarithmic_error: 3.5226\n",
            "Epoch 132/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9241 - mean_squared_logarithmic_error: 2.7186 - val_loss: 3.7047 - val_mean_squared_logarithmic_error: 3.5031\n",
            "Epoch 133/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9328 - mean_squared_logarithmic_error: 2.7270 - val_loss: 3.6912 - val_mean_squared_logarithmic_error: 3.4873\n",
            "Epoch 134/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9174 - mean_squared_logarithmic_error: 2.7123 - val_loss: 3.6839 - val_mean_squared_logarithmic_error: 3.4807\n",
            "Epoch 135/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9285 - mean_squared_logarithmic_error: 2.7235 - val_loss: 3.6833 - val_mean_squared_logarithmic_error: 3.4804\n",
            "Epoch 136/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8792 - mean_squared_logarithmic_error: 2.6741 - val_loss: 3.7281 - val_mean_squared_logarithmic_error: 3.5259\n",
            "Epoch 137/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9064 - mean_squared_logarithmic_error: 2.7006 - val_loss: 3.7015 - val_mean_squared_logarithmic_error: 3.4954\n",
            "Epoch 138/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8819 - mean_squared_logarithmic_error: 2.6761 - val_loss: 3.7326 - val_mean_squared_logarithmic_error: 3.5256\n",
            "Epoch 139/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9052 - mean_squared_logarithmic_error: 2.6980 - val_loss: 3.6811 - val_mean_squared_logarithmic_error: 3.4758\n",
            "Epoch 140/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9123 - mean_squared_logarithmic_error: 2.7047 - val_loss: 3.7453 - val_mean_squared_logarithmic_error: 3.5336\n",
            "Epoch 141/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8923 - mean_squared_logarithmic_error: 2.6862 - val_loss: 3.7064 - val_mean_squared_logarithmic_error: 3.5011\n",
            "Epoch 142/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8905 - mean_squared_logarithmic_error: 2.6833 - val_loss: 3.7586 - val_mean_squared_logarithmic_error: 3.5538\n",
            "Epoch 143/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9003 - mean_squared_logarithmic_error: 2.6957 - val_loss: 3.7494 - val_mean_squared_logarithmic_error: 3.5446\n",
            "Epoch 144/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8948 - mean_squared_logarithmic_error: 2.6888 - val_loss: 3.7355 - val_mean_squared_logarithmic_error: 3.5304\n",
            "Epoch 145/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9220 - mean_squared_logarithmic_error: 2.7158 - val_loss: 3.7065 - val_mean_squared_logarithmic_error: 3.5018\n",
            "Epoch 146/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9066 - mean_squared_logarithmic_error: 2.7006 - val_loss: 3.7066 - val_mean_squared_logarithmic_error: 3.4962\n",
            "Epoch 147/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8823 - mean_squared_logarithmic_error: 2.6755 - val_loss: 3.7149 - val_mean_squared_logarithmic_error: 3.5096\n",
            "Epoch 148/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8970 - mean_squared_logarithmic_error: 2.6918 - val_loss: 3.7420 - val_mean_squared_logarithmic_error: 3.5404\n",
            "Epoch 149/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8868 - mean_squared_logarithmic_error: 2.6815 - val_loss: 3.6683 - val_mean_squared_logarithmic_error: 3.4598\n",
            "Epoch 150/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8798 - mean_squared_logarithmic_error: 2.6732 - val_loss: 3.6947 - val_mean_squared_logarithmic_error: 3.4928\n",
            "Epoch 151/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8719 - mean_squared_logarithmic_error: 2.6664 - val_loss: 3.6901 - val_mean_squared_logarithmic_error: 3.4787\n",
            "Epoch 152/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8966 - mean_squared_logarithmic_error: 2.6892 - val_loss: 3.7032 - val_mean_squared_logarithmic_error: 3.4943\n",
            "Epoch 153/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8820 - mean_squared_logarithmic_error: 2.6750 - val_loss: 3.6988 - val_mean_squared_logarithmic_error: 3.4918\n",
            "Epoch 154/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9177 - mean_squared_logarithmic_error: 2.7112 - val_loss: 3.6895 - val_mean_squared_logarithmic_error: 3.4831\n",
            "Epoch 155/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8963 - mean_squared_logarithmic_error: 2.6894 - val_loss: 3.6900 - val_mean_squared_logarithmic_error: 3.4837\n",
            "Epoch 156/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8863 - mean_squared_logarithmic_error: 2.6790 - val_loss: 3.7314 - val_mean_squared_logarithmic_error: 3.5229\n",
            "Epoch 157/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8965 - mean_squared_logarithmic_error: 2.6897 - val_loss: 3.6914 - val_mean_squared_logarithmic_error: 3.4860\n",
            "Epoch 158/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9187 - mean_squared_logarithmic_error: 2.7124 - val_loss: 3.6878 - val_mean_squared_logarithmic_error: 3.4852\n",
            "Epoch 159/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9107 - mean_squared_logarithmic_error: 2.7059 - val_loss: 3.6841 - val_mean_squared_logarithmic_error: 3.4810\n",
            "Epoch 160/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8991 - mean_squared_logarithmic_error: 2.6938 - val_loss: 3.6561 - val_mean_squared_logarithmic_error: 3.4495\n",
            "Epoch 161/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8705 - mean_squared_logarithmic_error: 2.6647 - val_loss: 3.7260 - val_mean_squared_logarithmic_error: 3.5218\n",
            "Epoch 162/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8829 - mean_squared_logarithmic_error: 2.6771 - val_loss: 3.6916 - val_mean_squared_logarithmic_error: 3.4859\n",
            "Epoch 163/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8857 - mean_squared_logarithmic_error: 2.6806 - val_loss: 3.6560 - val_mean_squared_logarithmic_error: 3.4486\n",
            "Epoch 164/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8619 - mean_squared_logarithmic_error: 2.6554 - val_loss: 3.6866 - val_mean_squared_logarithmic_error: 3.4833\n",
            "Epoch 165/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8802 - mean_squared_logarithmic_error: 2.6757 - val_loss: 3.6648 - val_mean_squared_logarithmic_error: 3.4569\n",
            "Epoch 166/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8943 - mean_squared_logarithmic_error: 2.6884 - val_loss: 3.6797 - val_mean_squared_logarithmic_error: 3.4711\n",
            "Epoch 167/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8738 - mean_squared_logarithmic_error: 2.6663 - val_loss: 3.6940 - val_mean_squared_logarithmic_error: 3.4865\n",
            "Epoch 168/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8935 - mean_squared_logarithmic_error: 2.6870 - val_loss: 3.7054 - val_mean_squared_logarithmic_error: 3.4974\n",
            "Epoch 169/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8953 - mean_squared_logarithmic_error: 2.6874 - val_loss: 3.6831 - val_mean_squared_logarithmic_error: 3.4764\n",
            "Epoch 170/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8631 - mean_squared_logarithmic_error: 2.6564 - val_loss: 3.6870 - val_mean_squared_logarithmic_error: 3.4808\n",
            "Epoch 171/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8765 - mean_squared_logarithmic_error: 2.6689 - val_loss: 3.7095 - val_mean_squared_logarithmic_error: 3.5048\n",
            "Epoch 172/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8636 - mean_squared_logarithmic_error: 2.6567 - val_loss: 3.6884 - val_mean_squared_logarithmic_error: 3.4818\n",
            "Epoch 173/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8770 - mean_squared_logarithmic_error: 2.6697 - val_loss: 3.6502 - val_mean_squared_logarithmic_error: 3.4409\n",
            "Epoch 174/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8362 - mean_squared_logarithmic_error: 2.6273 - val_loss: 3.6865 - val_mean_squared_logarithmic_error: 3.4817\n",
            "Epoch 175/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8984 - mean_squared_logarithmic_error: 2.6920 - val_loss: 3.6836 - val_mean_squared_logarithmic_error: 3.4736\n",
            "Epoch 176/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8568 - mean_squared_logarithmic_error: 2.6483 - val_loss: 3.6410 - val_mean_squared_logarithmic_error: 3.4338\n",
            "Epoch 177/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8818 - mean_squared_logarithmic_error: 2.6731 - val_loss: 3.6683 - val_mean_squared_logarithmic_error: 3.4614\n",
            "Epoch 178/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8811 - mean_squared_logarithmic_error: 2.6726 - val_loss: 3.7033 - val_mean_squared_logarithmic_error: 3.4936\n",
            "Epoch 179/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8681 - mean_squared_logarithmic_error: 2.6606 - val_loss: 3.6727 - val_mean_squared_logarithmic_error: 3.4665\n",
            "Epoch 180/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8918 - mean_squared_logarithmic_error: 2.6851 - val_loss: 3.6926 - val_mean_squared_logarithmic_error: 3.4875\n",
            "Epoch 181/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8954 - mean_squared_logarithmic_error: 2.6886 - val_loss: 3.6943 - val_mean_squared_logarithmic_error: 3.4903\n",
            "Epoch 182/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8695 - mean_squared_logarithmic_error: 2.6648 - val_loss: 3.6843 - val_mean_squared_logarithmic_error: 3.4747\n",
            "Epoch 183/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8866 - mean_squared_logarithmic_error: 2.6777 - val_loss: 3.6852 - val_mean_squared_logarithmic_error: 3.4771\n",
            "Epoch 184/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8758 - mean_squared_logarithmic_error: 2.6678 - val_loss: 3.6721 - val_mean_squared_logarithmic_error: 3.4635\n",
            "Epoch 185/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8714 - mean_squared_logarithmic_error: 2.6648 - val_loss: 3.7399 - val_mean_squared_logarithmic_error: 3.5319\n",
            "Epoch 186/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8689 - mean_squared_logarithmic_error: 2.6605 - val_loss: 3.6555 - val_mean_squared_logarithmic_error: 3.4542\n",
            "Epoch 187/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8750 - mean_squared_logarithmic_error: 2.6704 - val_loss: 3.6849 - val_mean_squared_logarithmic_error: 3.4759\n",
            "Epoch 188/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8662 - mean_squared_logarithmic_error: 2.6579 - val_loss: 3.6682 - val_mean_squared_logarithmic_error: 3.4648\n",
            "Epoch 189/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.8738 - mean_squared_logarithmic_error: 2.6676 - val_loss: 3.7107 - val_mean_squared_logarithmic_error: 3.5020\n",
            "Epoch 190/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8400 - mean_squared_logarithmic_error: 2.6337 - val_loss: 3.7407 - val_mean_squared_logarithmic_error: 3.5309\n",
            "Epoch 191/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8666 - mean_squared_logarithmic_error: 2.6600 - val_loss: 3.6880 - val_mean_squared_logarithmic_error: 3.4788\n",
            "Epoch 192/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9226 - mean_squared_logarithmic_error: 2.7153 - val_loss: 3.6841 - val_mean_squared_logarithmic_error: 3.4799\n",
            "Epoch 193/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8816 - mean_squared_logarithmic_error: 2.6750 - val_loss: 3.6715 - val_mean_squared_logarithmic_error: 3.4585\n",
            "Epoch 194/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8889 - mean_squared_logarithmic_error: 2.6822 - val_loss: 3.6881 - val_mean_squared_logarithmic_error: 3.4805\n",
            "Epoch 195/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8696 - mean_squared_logarithmic_error: 2.6627 - val_loss: 3.7093 - val_mean_squared_logarithmic_error: 3.5005\n",
            "Epoch 196/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8521 - mean_squared_logarithmic_error: 2.6459 - val_loss: 3.6554 - val_mean_squared_logarithmic_error: 3.4479\n",
            "Epoch 197/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8609 - mean_squared_logarithmic_error: 2.6543 - val_loss: 3.6731 - val_mean_squared_logarithmic_error: 3.4666\n",
            "Epoch 198/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8991 - mean_squared_logarithmic_error: 2.6927 - val_loss: 3.6927 - val_mean_squared_logarithmic_error: 3.4851\n",
            "Epoch 199/200\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.8654 - mean_squared_logarithmic_error: 2.6589 - val_loss: 3.6264 - val_mean_squared_logarithmic_error: 3.4187\n",
            "Epoch 200/200\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9068 - mean_squared_logarithmic_error: 2.7007 - val_loss: 3.6474 - val_mean_squared_logarithmic_error: 3.4436\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "5KjDZB02L6DQ",
        "outputId": "ae956da7-ec5d-456f-9e2f-a0d86e640e33"
      },
      "source": [
        "# with dropoput + max_on levels\n",
        "model_18_width_20_dropout = run_training(data_set=df_train, x_columns=x_col_top_18, width_multiplier=20) #validation error "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_21\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_56 (Dense)             (None, 18)                342       \n",
            "_________________________________________________________________\n",
            "dropout_25 (Dropout)         (None, 18)                0         \n",
            "_________________________________________________________________\n",
            "dense_57 (Dense)             (None, 360)               6840      \n",
            "_________________________________________________________________\n",
            "dropout_26 (Dropout)         (None, 360)               0         \n",
            "_________________________________________________________________\n",
            "dense_58 (Dense)             (None, 1)                 361       \n",
            "=================================================================\n",
            "Total params: 7,543\n",
            "Trainable params: 7,543\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "Epoch 1/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 14.1107 - mean_squared_logarithmic_error: 13.9531 - val_loss: 7.1966 - val_mean_squared_logarithmic_error: 6.9230\n",
            "Epoch 2/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 5.8076 - mean_squared_logarithmic_error: 5.4478 - val_loss: 5.4319 - val_mean_squared_logarithmic_error: 5.0061\n",
            "Epoch 3/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.7421 - mean_squared_logarithmic_error: 4.2879 - val_loss: 4.8506 - val_mean_squared_logarithmic_error: 4.3852\n",
            "Epoch 4/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.3374 - mean_squared_logarithmic_error: 3.8725 - val_loss: 4.5881 - val_mean_squared_logarithmic_error: 4.1341\n",
            "Epoch 5/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.1312 - mean_squared_logarithmic_error: 3.6908 - val_loss: 4.4263 - val_mean_squared_logarithmic_error: 4.0015\n",
            "Epoch 6/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.9707 - mean_squared_logarithmic_error: 3.5627 - val_loss: 4.2994 - val_mean_squared_logarithmic_error: 3.9228\n",
            "Epoch 7/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.8499 - mean_squared_logarithmic_error: 3.4886 - val_loss: 4.2090 - val_mean_squared_logarithmic_error: 3.8495\n",
            "Epoch 8/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.7722 - mean_squared_logarithmic_error: 3.4360 - val_loss: 4.1299 - val_mean_squared_logarithmic_error: 3.8115\n",
            "Epoch 9/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.6834 - mean_squared_logarithmic_error: 3.3762 - val_loss: 4.0808 - val_mean_squared_logarithmic_error: 3.7861\n",
            "Epoch 10/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.6404 - mean_squared_logarithmic_error: 3.3555 - val_loss: 4.0268 - val_mean_squared_logarithmic_error: 3.7583\n",
            "Epoch 11/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5911 - mean_squared_logarithmic_error: 3.3309 - val_loss: 3.9823 - val_mean_squared_logarithmic_error: 3.7278\n",
            "Epoch 12/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5409 - mean_squared_logarithmic_error: 3.2931 - val_loss: 3.9529 - val_mean_squared_logarithmic_error: 3.7098\n",
            "Epoch 13/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5339 - mean_squared_logarithmic_error: 3.3020 - val_loss: 3.9235 - val_mean_squared_logarithmic_error: 3.7002\n",
            "Epoch 14/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4935 - mean_squared_logarithmic_error: 3.2745 - val_loss: 3.9196 - val_mean_squared_logarithmic_error: 3.7033\n",
            "Epoch 15/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4621 - mean_squared_logarithmic_error: 3.2507 - val_loss: 3.8855 - val_mean_squared_logarithmic_error: 3.6815\n",
            "Epoch 16/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4443 - mean_squared_logarithmic_error: 3.2425 - val_loss: 3.8738 - val_mean_squared_logarithmic_error: 3.6805\n",
            "Epoch 17/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4048 - mean_squared_logarithmic_error: 3.2104 - val_loss: 3.8644 - val_mean_squared_logarithmic_error: 3.6729\n",
            "Epoch 18/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4118 - mean_squared_logarithmic_error: 3.2244 - val_loss: 3.8462 - val_mean_squared_logarithmic_error: 3.6639\n",
            "Epoch 19/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3902 - mean_squared_logarithmic_error: 3.2110 - val_loss: 3.8491 - val_mean_squared_logarithmic_error: 3.6674\n",
            "Epoch 20/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3734 - mean_squared_logarithmic_error: 3.1981 - val_loss: 3.8316 - val_mean_squared_logarithmic_error: 3.6553\n",
            "Epoch 21/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3664 - mean_squared_logarithmic_error: 3.1938 - val_loss: 3.8428 - val_mean_squared_logarithmic_error: 3.6769\n",
            "Epoch 22/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3341 - mean_squared_logarithmic_error: 3.1654 - val_loss: 3.8384 - val_mean_squared_logarithmic_error: 3.6731\n",
            "Epoch 23/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3170 - mean_squared_logarithmic_error: 3.1529 - val_loss: 3.8224 - val_mean_squared_logarithmic_error: 3.6593\n",
            "Epoch 24/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3386 - mean_squared_logarithmic_error: 3.1795 - val_loss: 3.8130 - val_mean_squared_logarithmic_error: 3.6519\n",
            "Epoch 25/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3558 - mean_squared_logarithmic_error: 3.2001 - val_loss: 3.8110 - val_mean_squared_logarithmic_error: 3.6520\n",
            "Epoch 26/100\n",
            "220/747 [=======>......................] - ETA: 0s - loss: 3.3236 - mean_squared_logarithmic_error: 3.1653"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-122-996646c11af2>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# with dropoput + max_on levels\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mmodel_18_width_20_dropout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrun_training\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_set\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_columns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mx_col_top_18\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwidth_multiplier\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m20\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m#validation error\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m<ipython-input-106-f194bd3be4e4>\u001b[0m in \u001b[0;36mrun_training\u001b[0;34m(data_set, x_columns, batch_size, epochs, validation_split, width_multiplier, use_deep_model, use_smaller)\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m   \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moptimizer\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'adam'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mloss\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'mean_squared_logarithmic_error'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetrics\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'mean_squared_logarithmic_error'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 23\u001b[0;31m   \u001b[0mhistory\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_train_stand\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mx_columns\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0mdf_train\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0my_col\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mvalidation_split\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     24\u001b[0m   \u001b[0mplot_loss\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m   \u001b[0;32mreturn\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py\u001b[0m in \u001b[0;36m_method_wrapper\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    106\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_method_wrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    107\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_in_multi_worker_mode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=protected-access\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 108\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    109\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    110\u001b[0m     \u001b[0;31m# Running inside `run_distribute_coordinator` already.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1096\u001b[0m                 batch_size=batch_size):\n\u001b[1;32m   1097\u001b[0m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1098\u001b[0;31m               \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1099\u001b[0m               \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1100\u001b[0m                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    778\u001b[0m       \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    779\u001b[0m         \u001b[0mcompiler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"nonXla\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 780\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    781\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    782\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    805\u001b[0m       \u001b[0;31m# In this case we have created variables on the first call, so we run the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    806\u001b[0m       \u001b[0;31m# defunned version which is guaranteed to never create variables.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 807\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateless_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=not-callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    808\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateful_fn\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    809\u001b[0m       \u001b[0;31m# Release the lock early so that multiple threads can perform the call\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2827\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_lock\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2828\u001b[0m       \u001b[0mgraph_function\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_maybe_define_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2829\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mgraph_function\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_filtered_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=protected-access\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2830\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2831\u001b[0m   \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_filtered_call\u001b[0;34m(self, args, kwargs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1846\u001b[0m                            resource_variable_ops.BaseResourceVariable))],\n\u001b[1;32m   1847\u001b[0m         \u001b[0mcaptured_inputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcaptured_inputs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1848\u001b[0;31m         cancellation_manager=cancellation_manager)\n\u001b[0m\u001b[1;32m   1849\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1850\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_call_flat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcaptured_inputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcancellation_manager\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1922\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1923\u001b[0m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0;32m-> 1924\u001b[0;31m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[0m\u001b[1;32m   1925\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n\u001b[1;32m   1926\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    548\u001b[0m               \u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    549\u001b[0m               \u001b[0mattrs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mattrs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 550\u001b[0;31m               ctx=ctx)\n\u001b[0m\u001b[1;32m    551\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    552\u001b[0m           outputs = execute.execute_with_cancellation(\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     58\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0;32m---> 60\u001b[0;31m                                         inputs, attrs, num_outputs)\n\u001b[0m\u001b[1;32m     61\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "2ZHjYB9CI56r",
        "outputId": "49c01c42-c199-4117-b29e-8d9581928aed"
      },
      "source": [
        "# with dropoput + max_on levels\n",
        "model_15_width_all_dropout = run_training(data_set=df_train, x_columns=x_col_all, width_multiplier=10) #validation error #3.5666"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_19\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_50 (Dense)             (None, 29)                870       \n",
            "_________________________________________________________________\n",
            "dropout_21 (Dropout)         (None, 29)                0         \n",
            "_________________________________________________________________\n",
            "dense_51 (Dense)             (None, 290)               8700      \n",
            "_________________________________________________________________\n",
            "dropout_22 (Dropout)         (None, 290)               0         \n",
            "_________________________________________________________________\n",
            "dense_52 (Dense)             (None, 1)                 291       \n",
            "=================================================================\n",
            "Total params: 9,861\n",
            "Trainable params: 9,861\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "Epoch 1/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 13.1126 - mean_squared_logarithmic_error: 12.9003 - val_loss: 6.8492 - val_mean_squared_logarithmic_error: 6.5074\n",
            "Epoch 2/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 5.5613 - mean_squared_logarithmic_error: 5.1377 - val_loss: 5.2984 - val_mean_squared_logarithmic_error: 4.8155\n",
            "Epoch 3/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.6502 - mean_squared_logarithmic_error: 4.1451 - val_loss: 4.8170 - val_mean_squared_logarithmic_error: 4.3080\n",
            "Epoch 4/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.2903 - mean_squared_logarithmic_error: 3.7826 - val_loss: 4.5956 - val_mean_squared_logarithmic_error: 4.1033\n",
            "Epoch 5/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.0548 - mean_squared_logarithmic_error: 3.5797 - val_loss: 4.4388 - val_mean_squared_logarithmic_error: 3.9821\n",
            "Epoch 6/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.9209 - mean_squared_logarithmic_error: 3.4830 - val_loss: 4.3330 - val_mean_squared_logarithmic_error: 3.9295\n",
            "Epoch 7/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.7947 - mean_squared_logarithmic_error: 3.4053 - val_loss: 4.2529 - val_mean_squared_logarithmic_error: 3.8648\n",
            "Epoch 8/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.7068 - mean_squared_logarithmic_error: 3.3390 - val_loss: 4.1750 - val_mean_squared_logarithmic_error: 3.8243\n",
            "Epoch 9/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.6244 - mean_squared_logarithmic_error: 3.2853 - val_loss: 4.1268 - val_mean_squared_logarithmic_error: 3.7972\n",
            "Epoch 10/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5598 - mean_squared_logarithmic_error: 3.2419 - val_loss: 4.0971 - val_mean_squared_logarithmic_error: 3.7908\n",
            "Epoch 11/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5112 - mean_squared_logarithmic_error: 3.2120 - val_loss: 4.0515 - val_mean_squared_logarithmic_error: 3.7603\n",
            "Epoch 12/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5011 - mean_squared_logarithmic_error: 3.2189 - val_loss: 4.0244 - val_mean_squared_logarithmic_error: 3.7445\n",
            "Epoch 13/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.4055 - mean_squared_logarithmic_error: 3.1361 - val_loss: 4.0303 - val_mean_squared_logarithmic_error: 3.7619\n",
            "Epoch 14/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.4107 - mean_squared_logarithmic_error: 3.1508 - val_loss: 3.9855 - val_mean_squared_logarithmic_error: 3.7329\n",
            "Epoch 15/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4021 - mean_squared_logarithmic_error: 3.1533 - val_loss: 3.9494 - val_mean_squared_logarithmic_error: 3.7111\n",
            "Epoch 16/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3672 - mean_squared_logarithmic_error: 3.1288 - val_loss: 3.9494 - val_mean_squared_logarithmic_error: 3.7213\n",
            "Epoch 17/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3621 - mean_squared_logarithmic_error: 3.1317 - val_loss: 3.9421 - val_mean_squared_logarithmic_error: 3.7149\n",
            "Epoch 18/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2856 - mean_squared_logarithmic_error: 3.0612 - val_loss: 3.9420 - val_mean_squared_logarithmic_error: 3.7265\n",
            "Epoch 19/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3123 - mean_squared_logarithmic_error: 3.0975 - val_loss: 3.9273 - val_mean_squared_logarithmic_error: 3.7067\n",
            "Epoch 20/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2844 - mean_squared_logarithmic_error: 3.0710 - val_loss: 3.9211 - val_mean_squared_logarithmic_error: 3.7077\n",
            "Epoch 21/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2811 - mean_squared_logarithmic_error: 3.0721 - val_loss: 3.9130 - val_mean_squared_logarithmic_error: 3.7109\n",
            "Epoch 22/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3095 - mean_squared_logarithmic_error: 3.1053 - val_loss: 3.8752 - val_mean_squared_logarithmic_error: 3.6780\n",
            "Epoch 23/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2547 - mean_squared_logarithmic_error: 3.0561 - val_loss: 3.8724 - val_mean_squared_logarithmic_error: 3.6723\n",
            "Epoch 24/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2452 - mean_squared_logarithmic_error: 3.0492 - val_loss: 3.8704 - val_mean_squared_logarithmic_error: 3.6721\n",
            "Epoch 25/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2685 - mean_squared_logarithmic_error: 3.0758 - val_loss: 3.8542 - val_mean_squared_logarithmic_error: 3.6573\n",
            "Epoch 26/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2477 - mean_squared_logarithmic_error: 3.0563 - val_loss: 3.8423 - val_mean_squared_logarithmic_error: 3.6533\n",
            "Epoch 27/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2258 - mean_squared_logarithmic_error: 3.0384 - val_loss: 3.8436 - val_mean_squared_logarithmic_error: 3.6582\n",
            "Epoch 28/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2555 - mean_squared_logarithmic_error: 3.0714 - val_loss: 3.8274 - val_mean_squared_logarithmic_error: 3.6443\n",
            "Epoch 29/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2107 - mean_squared_logarithmic_error: 3.0285 - val_loss: 3.8104 - val_mean_squared_logarithmic_error: 3.6260\n",
            "Epoch 30/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1721 - mean_squared_logarithmic_error: 2.9901 - val_loss: 3.8130 - val_mean_squared_logarithmic_error: 3.6320\n",
            "Epoch 31/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2091 - mean_squared_logarithmic_error: 3.0297 - val_loss: 3.8297 - val_mean_squared_logarithmic_error: 3.6510\n",
            "Epoch 32/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1576 - mean_squared_logarithmic_error: 2.9795 - val_loss: 3.8358 - val_mean_squared_logarithmic_error: 3.6573\n",
            "Epoch 33/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1477 - mean_squared_logarithmic_error: 2.9705 - val_loss: 3.8201 - val_mean_squared_logarithmic_error: 3.6468\n",
            "Epoch 34/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1779 - mean_squared_logarithmic_error: 3.0029 - val_loss: 3.8198 - val_mean_squared_logarithmic_error: 3.6438\n",
            "Epoch 35/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1457 - mean_squared_logarithmic_error: 2.9714 - val_loss: 3.8292 - val_mean_squared_logarithmic_error: 3.6577\n",
            "Epoch 36/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1698 - mean_squared_logarithmic_error: 2.9980 - val_loss: 3.8300 - val_mean_squared_logarithmic_error: 3.6651\n",
            "Epoch 37/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1563 - mean_squared_logarithmic_error: 2.9873 - val_loss: 3.8121 - val_mean_squared_logarithmic_error: 3.6404\n",
            "Epoch 38/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1285 - mean_squared_logarithmic_error: 2.9573 - val_loss: 3.8131 - val_mean_squared_logarithmic_error: 3.6443\n",
            "Epoch 39/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1475 - mean_squared_logarithmic_error: 2.9775 - val_loss: 3.8060 - val_mean_squared_logarithmic_error: 3.6395\n",
            "Epoch 40/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1664 - mean_squared_logarithmic_error: 2.9989 - val_loss: 3.8038 - val_mean_squared_logarithmic_error: 3.6388\n",
            "Epoch 41/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1453 - mean_squared_logarithmic_error: 2.9803 - val_loss: 3.8215 - val_mean_squared_logarithmic_error: 3.6573\n",
            "Epoch 42/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1627 - mean_squared_logarithmic_error: 2.9969 - val_loss: 3.8037 - val_mean_squared_logarithmic_error: 3.6443\n",
            "Epoch 43/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1570 - mean_squared_logarithmic_error: 2.9944 - val_loss: 3.8122 - val_mean_squared_logarithmic_error: 3.6465\n",
            "Epoch 44/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1416 - mean_squared_logarithmic_error: 2.9775 - val_loss: 3.7996 - val_mean_squared_logarithmic_error: 3.6384\n",
            "Epoch 45/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1363 - mean_squared_logarithmic_error: 2.9743 - val_loss: 3.8004 - val_mean_squared_logarithmic_error: 3.6359\n",
            "Epoch 46/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1542 - mean_squared_logarithmic_error: 2.9920 - val_loss: 3.7929 - val_mean_squared_logarithmic_error: 3.6318\n",
            "Epoch 47/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1498 - mean_squared_logarithmic_error: 2.9880 - val_loss: 3.8098 - val_mean_squared_logarithmic_error: 3.6520\n",
            "Epoch 48/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1421 - mean_squared_logarithmic_error: 2.9819 - val_loss: 3.8174 - val_mean_squared_logarithmic_error: 3.6545\n",
            "Epoch 49/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0819 - mean_squared_logarithmic_error: 2.9206 - val_loss: 3.7977 - val_mean_squared_logarithmic_error: 3.6389\n",
            "Epoch 50/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1373 - mean_squared_logarithmic_error: 2.9776 - val_loss: 3.8127 - val_mean_squared_logarithmic_error: 3.6529\n",
            "Epoch 51/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1215 - mean_squared_logarithmic_error: 2.9624 - val_loss: 3.8532 - val_mean_squared_logarithmic_error: 3.6932\n",
            "Epoch 52/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0944 - mean_squared_logarithmic_error: 2.9362 - val_loss: 3.8152 - val_mean_squared_logarithmic_error: 3.6546\n",
            "Epoch 53/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1102 - mean_squared_logarithmic_error: 2.9525 - val_loss: 3.8255 - val_mean_squared_logarithmic_error: 3.6660\n",
            "Epoch 54/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1017 - mean_squared_logarithmic_error: 2.9444 - val_loss: 3.7939 - val_mean_squared_logarithmic_error: 3.6358\n",
            "Epoch 55/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0624 - mean_squared_logarithmic_error: 2.9055 - val_loss: 3.8122 - val_mean_squared_logarithmic_error: 3.6553\n",
            "Epoch 56/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0895 - mean_squared_logarithmic_error: 2.9343 - val_loss: 3.8201 - val_mean_squared_logarithmic_error: 3.6631\n",
            "Epoch 57/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1100 - mean_squared_logarithmic_error: 2.9551 - val_loss: 3.8013 - val_mean_squared_logarithmic_error: 3.6432\n",
            "Epoch 58/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0912 - mean_squared_logarithmic_error: 2.9344 - val_loss: 3.8106 - val_mean_squared_logarithmic_error: 3.6535\n",
            "Epoch 59/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0989 - mean_squared_logarithmic_error: 2.9443 - val_loss: 3.8374 - val_mean_squared_logarithmic_error: 3.6838\n",
            "Epoch 60/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1157 - mean_squared_logarithmic_error: 2.9621 - val_loss: 3.8178 - val_mean_squared_logarithmic_error: 3.6636\n",
            "Epoch 61/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0773 - mean_squared_logarithmic_error: 2.9239 - val_loss: 3.8185 - val_mean_squared_logarithmic_error: 3.6660\n",
            "Epoch 62/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0622 - mean_squared_logarithmic_error: 2.9099 - val_loss: 3.8174 - val_mean_squared_logarithmic_error: 3.6656\n",
            "Epoch 63/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0812 - mean_squared_logarithmic_error: 2.9288 - val_loss: 3.8244 - val_mean_squared_logarithmic_error: 3.6767\n",
            "Epoch 64/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0928 - mean_squared_logarithmic_error: 2.9428 - val_loss: 3.8140 - val_mean_squared_logarithmic_error: 3.6640\n",
            "Epoch 65/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0662 - mean_squared_logarithmic_error: 2.9156 - val_loss: 3.8294 - val_mean_squared_logarithmic_error: 3.6763\n",
            "Epoch 66/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0546 - mean_squared_logarithmic_error: 2.9031 - val_loss: 3.8293 - val_mean_squared_logarithmic_error: 3.6780\n",
            "Epoch 67/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0782 - mean_squared_logarithmic_error: 2.9280 - val_loss: 3.8532 - val_mean_squared_logarithmic_error: 3.7034\n",
            "Epoch 68/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0666 - mean_squared_logarithmic_error: 2.9160 - val_loss: 3.8286 - val_mean_squared_logarithmic_error: 3.6784\n",
            "Epoch 69/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0578 - mean_squared_logarithmic_error: 2.9076 - val_loss: 3.8602 - val_mean_squared_logarithmic_error: 3.7134\n",
            "Epoch 70/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0485 - mean_squared_logarithmic_error: 2.8993 - val_loss: 3.8273 - val_mean_squared_logarithmic_error: 3.6768\n",
            "Epoch 71/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0442 - mean_squared_logarithmic_error: 2.8945 - val_loss: 3.8276 - val_mean_squared_logarithmic_error: 3.6779\n",
            "Epoch 72/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0612 - mean_squared_logarithmic_error: 2.9126 - val_loss: 3.8139 - val_mean_squared_logarithmic_error: 3.6626\n",
            "Epoch 73/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0850 - mean_squared_logarithmic_error: 2.9355 - val_loss: 3.8426 - val_mean_squared_logarithmic_error: 3.6984\n",
            "Epoch 74/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0512 - mean_squared_logarithmic_error: 2.9044 - val_loss: 3.8546 - val_mean_squared_logarithmic_error: 3.7045\n",
            "Epoch 75/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0524 - mean_squared_logarithmic_error: 2.9047 - val_loss: 3.8357 - val_mean_squared_logarithmic_error: 3.6893\n",
            "Epoch 76/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0230 - mean_squared_logarithmic_error: 2.8761 - val_loss: 3.8262 - val_mean_squared_logarithmic_error: 3.6789\n",
            "Epoch 77/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0468 - mean_squared_logarithmic_error: 2.9003 - val_loss: 3.8477 - val_mean_squared_logarithmic_error: 3.7046\n",
            "Epoch 78/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0348 - mean_squared_logarithmic_error: 2.8881 - val_loss: 3.8081 - val_mean_squared_logarithmic_error: 3.6637\n",
            "Epoch 79/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0878 - mean_squared_logarithmic_error: 2.9425 - val_loss: 3.8306 - val_mean_squared_logarithmic_error: 3.6866\n",
            "Epoch 80/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0290 - mean_squared_logarithmic_error: 2.8832 - val_loss: 3.8262 - val_mean_squared_logarithmic_error: 3.6793\n",
            "Epoch 81/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0625 - mean_squared_logarithmic_error: 2.9165 - val_loss: 3.8300 - val_mean_squared_logarithmic_error: 3.6851\n",
            "Epoch 82/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0510 - mean_squared_logarithmic_error: 2.9066 - val_loss: 3.8491 - val_mean_squared_logarithmic_error: 3.7077\n",
            "Epoch 83/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0438 - mean_squared_logarithmic_error: 2.9000 - val_loss: 3.7994 - val_mean_squared_logarithmic_error: 3.6562\n",
            "Epoch 84/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0448 - mean_squared_logarithmic_error: 2.9022 - val_loss: 3.8389 - val_mean_squared_logarithmic_error: 3.6950\n",
            "Epoch 85/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0569 - mean_squared_logarithmic_error: 2.9133 - val_loss: 3.8234 - val_mean_squared_logarithmic_error: 3.6835\n",
            "Epoch 86/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0448 - mean_squared_logarithmic_error: 2.9031 - val_loss: 3.8350 - val_mean_squared_logarithmic_error: 3.6898\n",
            "Epoch 87/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0358 - mean_squared_logarithmic_error: 2.8920 - val_loss: 3.7918 - val_mean_squared_logarithmic_error: 3.6525\n",
            "Epoch 88/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0452 - mean_squared_logarithmic_error: 2.9038 - val_loss: 3.7934 - val_mean_squared_logarithmic_error: 3.6496\n",
            "Epoch 89/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0383 - mean_squared_logarithmic_error: 2.8951 - val_loss: 3.7987 - val_mean_squared_logarithmic_error: 3.6600\n",
            "Epoch 90/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0472 - mean_squared_logarithmic_error: 2.9059 - val_loss: 3.8107 - val_mean_squared_logarithmic_error: 3.6707\n",
            "Epoch 91/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0162 - mean_squared_logarithmic_error: 2.8752 - val_loss: 3.8023 - val_mean_squared_logarithmic_error: 3.6632\n",
            "Epoch 92/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0074 - mean_squared_logarithmic_error: 2.8670 - val_loss: 3.8054 - val_mean_squared_logarithmic_error: 3.6624\n",
            "Epoch 93/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0487 - mean_squared_logarithmic_error: 2.9083 - val_loss: 3.7963 - val_mean_squared_logarithmic_error: 3.6570\n",
            "Epoch 94/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9814 - mean_squared_logarithmic_error: 2.8411 - val_loss: 3.8022 - val_mean_squared_logarithmic_error: 3.6626\n",
            "Epoch 95/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0443 - mean_squared_logarithmic_error: 2.9048 - val_loss: 3.8366 - val_mean_squared_logarithmic_error: 3.6984\n",
            "Epoch 96/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0213 - mean_squared_logarithmic_error: 2.8815 - val_loss: 3.8593 - val_mean_squared_logarithmic_error: 3.7195\n",
            "Epoch 97/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0508 - mean_squared_logarithmic_error: 2.9110 - val_loss: 3.7972 - val_mean_squared_logarithmic_error: 3.6582\n",
            "Epoch 98/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0563 - mean_squared_logarithmic_error: 2.9164 - val_loss: 3.7874 - val_mean_squared_logarithmic_error: 3.6502\n",
            "Epoch 99/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0434 - mean_squared_logarithmic_error: 2.9043 - val_loss: 3.8022 - val_mean_squared_logarithmic_error: 3.6629\n",
            "Epoch 100/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0414 - mean_squared_logarithmic_error: 2.9016 - val_loss: 3.8048 - val_mean_squared_logarithmic_error: 3.6640\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "KC_ouAtaSGbK",
        "outputId": "2ea29e36-0196-4aca-f9a9-699d44747683"
      },
      "source": [
        "model_15_width_all_dropout_standardize_features = run_training(data_set=df_train_stand, x_columns=x_col_top_15, width_multiplier=10) "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_27\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_74 (Dense)             (None, 150)               2400      \n",
            "_________________________________________________________________\n",
            "dropout_37 (Dropout)         (None, 150)               0         \n",
            "_________________________________________________________________\n",
            "dense_75 (Dense)             (None, 150)               22650     \n",
            "_________________________________________________________________\n",
            "dropout_38 (Dropout)         (None, 150)               0         \n",
            "_________________________________________________________________\n",
            "dense_76 (Dense)             (None, 1)                 151       \n",
            "=================================================================\n",
            "Total params: 25,201\n",
            "Trainable params: 25,201\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "Epoch 1/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 12.0322 - mean_squared_logarithmic_error: 11.6360 - val_loss: 6.5109 - val_mean_squared_logarithmic_error: 5.9559\n",
            "Epoch 2/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 5.3347 - mean_squared_logarithmic_error: 4.7186 - val_loss: 5.2536 - val_mean_squared_logarithmic_error: 4.5943\n",
            "Epoch 3/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.5783 - mean_squared_logarithmic_error: 3.9078 - val_loss: 4.8103 - val_mean_squared_logarithmic_error: 4.1493\n",
            "Epoch 4/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 4.2318 - mean_squared_logarithmic_error: 3.5872 - val_loss: 4.5741 - val_mean_squared_logarithmic_error: 3.9590\n",
            "Epoch 5/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.9992 - mean_squared_logarithmic_error: 3.4098 - val_loss: 4.4244 - val_mean_squared_logarithmic_error: 3.8612\n",
            "Epoch 6/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.8570 - mean_squared_logarithmic_error: 3.3162 - val_loss: 4.2860 - val_mean_squared_logarithmic_error: 3.7858\n",
            "Epoch 7/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.7522 - mean_squared_logarithmic_error: 3.2615 - val_loss: 4.2096 - val_mean_squared_logarithmic_error: 3.7130\n",
            "Epoch 8/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.6416 - mean_squared_logarithmic_error: 3.1742 - val_loss: 4.1417 - val_mean_squared_logarithmic_error: 3.6865\n",
            "Epoch 9/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5913 - mean_squared_logarithmic_error: 3.1513 - val_loss: 4.0847 - val_mean_squared_logarithmic_error: 3.6585\n",
            "Epoch 10/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.5409 - mean_squared_logarithmic_error: 3.1276 - val_loss: 4.0644 - val_mean_squared_logarithmic_error: 3.6648\n",
            "Epoch 11/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4948 - mean_squared_logarithmic_error: 3.1022 - val_loss: 4.0106 - val_mean_squared_logarithmic_error: 3.6260\n",
            "Epoch 12/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4557 - mean_squared_logarithmic_error: 3.0812 - val_loss: 3.9897 - val_mean_squared_logarithmic_error: 3.6214\n",
            "Epoch 13/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.4217 - mean_squared_logarithmic_error: 3.0651 - val_loss: 3.9748 - val_mean_squared_logarithmic_error: 3.6214\n",
            "Epoch 14/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3838 - mean_squared_logarithmic_error: 3.0422 - val_loss: 3.9430 - val_mean_squared_logarithmic_error: 3.6036\n",
            "Epoch 15/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3527 - mean_squared_logarithmic_error: 3.0227 - val_loss: 3.9015 - val_mean_squared_logarithmic_error: 3.5835\n",
            "Epoch 16/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3447 - mean_squared_logarithmic_error: 3.0282 - val_loss: 3.8865 - val_mean_squared_logarithmic_error: 3.5824\n",
            "Epoch 17/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3204 - mean_squared_logarithmic_error: 3.0145 - val_loss: 3.8860 - val_mean_squared_logarithmic_error: 3.5856\n",
            "Epoch 18/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.3173 - mean_squared_logarithmic_error: 3.0203 - val_loss: 3.8959 - val_mean_squared_logarithmic_error: 3.6091\n",
            "Epoch 19/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2735 - mean_squared_logarithmic_error: 2.9867 - val_loss: 3.8557 - val_mean_squared_logarithmic_error: 3.5671\n",
            "Epoch 20/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2727 - mean_squared_logarithmic_error: 2.9929 - val_loss: 3.8532 - val_mean_squared_logarithmic_error: 3.5727\n",
            "Epoch 21/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2661 - mean_squared_logarithmic_error: 2.9924 - val_loss: 3.8636 - val_mean_squared_logarithmic_error: 3.5972\n",
            "Epoch 22/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2607 - mean_squared_logarithmic_error: 2.9938 - val_loss: 3.8346 - val_mean_squared_logarithmic_error: 3.5756\n",
            "Epoch 23/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2446 - mean_squared_logarithmic_error: 2.9846 - val_loss: 3.8653 - val_mean_squared_logarithmic_error: 3.6071\n",
            "Epoch 24/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2369 - mean_squared_logarithmic_error: 2.9821 - val_loss: 3.8378 - val_mean_squared_logarithmic_error: 3.5805\n",
            "Epoch 25/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2289 - mean_squared_logarithmic_error: 2.9791 - val_loss: 3.8369 - val_mean_squared_logarithmic_error: 3.5820\n",
            "Epoch 26/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2136 - mean_squared_logarithmic_error: 2.9667 - val_loss: 3.8344 - val_mean_squared_logarithmic_error: 3.5862\n",
            "Epoch 27/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2334 - mean_squared_logarithmic_error: 2.9905 - val_loss: 3.8090 - val_mean_squared_logarithmic_error: 3.5694\n",
            "Epoch 28/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2253 - mean_squared_logarithmic_error: 2.9864 - val_loss: 3.8256 - val_mean_squared_logarithmic_error: 3.5858\n",
            "Epoch 29/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2053 - mean_squared_logarithmic_error: 2.9693 - val_loss: 3.7946 - val_mean_squared_logarithmic_error: 3.5566\n",
            "Epoch 30/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1887 - mean_squared_logarithmic_error: 2.9557 - val_loss: 3.8052 - val_mean_squared_logarithmic_error: 3.5727\n",
            "Epoch 31/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.2051 - mean_squared_logarithmic_error: 2.9744 - val_loss: 3.8101 - val_mean_squared_logarithmic_error: 3.5829\n",
            "Epoch 32/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1898 - mean_squared_logarithmic_error: 2.9642 - val_loss: 3.8156 - val_mean_squared_logarithmic_error: 3.5828\n",
            "Epoch 33/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1768 - mean_squared_logarithmic_error: 2.9500 - val_loss: 3.8202 - val_mean_squared_logarithmic_error: 3.5967\n",
            "Epoch 34/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1904 - mean_squared_logarithmic_error: 2.9666 - val_loss: 3.7965 - val_mean_squared_logarithmic_error: 3.5753\n",
            "Epoch 35/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1768 - mean_squared_logarithmic_error: 2.9549 - val_loss: 3.8087 - val_mean_squared_logarithmic_error: 3.5899\n",
            "Epoch 36/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1610 - mean_squared_logarithmic_error: 2.9411 - val_loss: 3.8441 - val_mean_squared_logarithmic_error: 3.6384\n",
            "Epoch 37/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1724 - mean_squared_logarithmic_error: 2.9572 - val_loss: 3.7802 - val_mean_squared_logarithmic_error: 3.5603\n",
            "Epoch 38/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1563 - mean_squared_logarithmic_error: 2.9388 - val_loss: 3.7617 - val_mean_squared_logarithmic_error: 3.5472\n",
            "Epoch 39/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1609 - mean_squared_logarithmic_error: 2.9453 - val_loss: 3.7693 - val_mean_squared_logarithmic_error: 3.5618\n",
            "Epoch 40/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1564 - mean_squared_logarithmic_error: 2.9437 - val_loss: 3.7846 - val_mean_squared_logarithmic_error: 3.5754\n",
            "Epoch 41/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1413 - mean_squared_logarithmic_error: 2.9285 - val_loss: 3.7539 - val_mean_squared_logarithmic_error: 3.5411\n",
            "Epoch 42/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 3.1334 - mean_squared_logarithmic_error: 2.9207 - val_loss: 3.7918 - val_mean_squared_logarithmic_error: 3.5909\n",
            "Epoch 43/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1330 - mean_squared_logarithmic_error: 2.9238 - val_loss: 3.7594 - val_mean_squared_logarithmic_error: 3.5455\n",
            "Epoch 44/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1235 - mean_squared_logarithmic_error: 2.9130 - val_loss: 3.7929 - val_mean_squared_logarithmic_error: 3.5874\n",
            "Epoch 45/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1215 - mean_squared_logarithmic_error: 2.9139 - val_loss: 3.7604 - val_mean_squared_logarithmic_error: 3.5488\n",
            "Epoch 46/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1296 - mean_squared_logarithmic_error: 2.9220 - val_loss: 3.7681 - val_mean_squared_logarithmic_error: 3.5631\n",
            "Epoch 47/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1337 - mean_squared_logarithmic_error: 2.9259 - val_loss: 3.8065 - val_mean_squared_logarithmic_error: 3.6046\n",
            "Epoch 48/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1277 - mean_squared_logarithmic_error: 2.9220 - val_loss: 3.7851 - val_mean_squared_logarithmic_error: 3.5751\n",
            "Epoch 49/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1133 - mean_squared_logarithmic_error: 2.9081 - val_loss: 3.7850 - val_mean_squared_logarithmic_error: 3.5827\n",
            "Epoch 50/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1034 - mean_squared_logarithmic_error: 2.8978 - val_loss: 3.7786 - val_mean_squared_logarithmic_error: 3.5711\n",
            "Epoch 51/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1087 - mean_squared_logarithmic_error: 2.9031 - val_loss: 3.8078 - val_mean_squared_logarithmic_error: 3.5989\n",
            "Epoch 52/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1048 - mean_squared_logarithmic_error: 2.9002 - val_loss: 3.7671 - val_mean_squared_logarithmic_error: 3.5591\n",
            "Epoch 53/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.1046 - mean_squared_logarithmic_error: 2.9007 - val_loss: 3.7791 - val_mean_squared_logarithmic_error: 3.5731\n",
            "Epoch 54/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0999 - mean_squared_logarithmic_error: 2.8969 - val_loss: 3.7587 - val_mean_squared_logarithmic_error: 3.5525\n",
            "Epoch 55/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0916 - mean_squared_logarithmic_error: 2.8888 - val_loss: 3.7363 - val_mean_squared_logarithmic_error: 3.5325\n",
            "Epoch 56/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0847 - mean_squared_logarithmic_error: 2.8825 - val_loss: 3.7478 - val_mean_squared_logarithmic_error: 3.5456\n",
            "Epoch 57/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0806 - mean_squared_logarithmic_error: 2.8800 - val_loss: 3.7708 - val_mean_squared_logarithmic_error: 3.5672\n",
            "Epoch 58/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0950 - mean_squared_logarithmic_error: 2.8930 - val_loss: 3.7670 - val_mean_squared_logarithmic_error: 3.5651\n",
            "Epoch 59/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0807 - mean_squared_logarithmic_error: 2.8806 - val_loss: 3.7441 - val_mean_squared_logarithmic_error: 3.5441\n",
            "Epoch 60/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0556 - mean_squared_logarithmic_error: 2.8551 - val_loss: 3.7850 - val_mean_squared_logarithmic_error: 3.5858\n",
            "Epoch 61/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0785 - mean_squared_logarithmic_error: 2.8775 - val_loss: 3.8199 - val_mean_squared_logarithmic_error: 3.6211\n",
            "Epoch 62/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0768 - mean_squared_logarithmic_error: 2.8768 - val_loss: 3.7623 - val_mean_squared_logarithmic_error: 3.5652\n",
            "Epoch 63/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0623 - mean_squared_logarithmic_error: 2.8621 - val_loss: 3.7396 - val_mean_squared_logarithmic_error: 3.5451\n",
            "Epoch 64/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0616 - mean_squared_logarithmic_error: 2.8637 - val_loss: 3.7392 - val_mean_squared_logarithmic_error: 3.5408\n",
            "Epoch 65/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0641 - mean_squared_logarithmic_error: 2.8656 - val_loss: 3.7736 - val_mean_squared_logarithmic_error: 3.5713\n",
            "Epoch 66/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0297 - mean_squared_logarithmic_error: 2.8298 - val_loss: 3.7512 - val_mean_squared_logarithmic_error: 3.5475\n",
            "Epoch 67/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0539 - mean_squared_logarithmic_error: 2.8544 - val_loss: 3.7719 - val_mean_squared_logarithmic_error: 3.5704\n",
            "Epoch 68/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0344 - mean_squared_logarithmic_error: 2.8349 - val_loss: 3.7865 - val_mean_squared_logarithmic_error: 3.5865\n",
            "Epoch 69/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0506 - mean_squared_logarithmic_error: 2.8504 - val_loss: 3.7464 - val_mean_squared_logarithmic_error: 3.5539\n",
            "Epoch 70/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0505 - mean_squared_logarithmic_error: 2.8523 - val_loss: 3.7385 - val_mean_squared_logarithmic_error: 3.5410\n",
            "Epoch 71/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0707 - mean_squared_logarithmic_error: 2.8723 - val_loss: 3.7507 - val_mean_squared_logarithmic_error: 3.5519\n",
            "Epoch 72/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0411 - mean_squared_logarithmic_error: 2.8425 - val_loss: 3.7603 - val_mean_squared_logarithmic_error: 3.5604\n",
            "Epoch 73/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0327 - mean_squared_logarithmic_error: 2.8331 - val_loss: 3.7920 - val_mean_squared_logarithmic_error: 3.5991\n",
            "Epoch 74/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0464 - mean_squared_logarithmic_error: 2.8499 - val_loss: 3.7736 - val_mean_squared_logarithmic_error: 3.5756\n",
            "Epoch 75/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0458 - mean_squared_logarithmic_error: 2.8486 - val_loss: 3.7462 - val_mean_squared_logarithmic_error: 3.5478\n",
            "Epoch 76/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0437 - mean_squared_logarithmic_error: 2.8464 - val_loss: 3.7470 - val_mean_squared_logarithmic_error: 3.5500\n",
            "Epoch 77/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0484 - mean_squared_logarithmic_error: 2.8522 - val_loss: 3.7341 - val_mean_squared_logarithmic_error: 3.5394\n",
            "Epoch 78/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0276 - mean_squared_logarithmic_error: 2.8295 - val_loss: 3.7102 - val_mean_squared_logarithmic_error: 3.5160\n",
            "Epoch 79/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0400 - mean_squared_logarithmic_error: 2.8434 - val_loss: 3.7444 - val_mean_squared_logarithmic_error: 3.5484\n",
            "Epoch 80/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0405 - mean_squared_logarithmic_error: 2.8434 - val_loss: 3.7303 - val_mean_squared_logarithmic_error: 3.5304\n",
            "Epoch 81/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0406 - mean_squared_logarithmic_error: 2.8426 - val_loss: 3.7290 - val_mean_squared_logarithmic_error: 3.5316\n",
            "Epoch 82/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0131 - mean_squared_logarithmic_error: 2.8153 - val_loss: 3.7406 - val_mean_squared_logarithmic_error: 3.5484\n",
            "Epoch 83/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0116 - mean_squared_logarithmic_error: 2.8141 - val_loss: 3.7374 - val_mean_squared_logarithmic_error: 3.5412\n",
            "Epoch 84/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0033 - mean_squared_logarithmic_error: 2.8059 - val_loss: 3.7238 - val_mean_squared_logarithmic_error: 3.5225\n",
            "Epoch 85/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9961 - mean_squared_logarithmic_error: 2.7975 - val_loss: 3.6979 - val_mean_squared_logarithmic_error: 3.5048\n",
            "Epoch 86/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0256 - mean_squared_logarithmic_error: 2.8290 - val_loss: 3.7327 - val_mean_squared_logarithmic_error: 3.5310\n",
            "Epoch 87/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0242 - mean_squared_logarithmic_error: 2.8263 - val_loss: 3.7098 - val_mean_squared_logarithmic_error: 3.5178\n",
            "Epoch 88/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0224 - mean_squared_logarithmic_error: 2.8269 - val_loss: 3.7411 - val_mean_squared_logarithmic_error: 3.5443\n",
            "Epoch 89/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9882 - mean_squared_logarithmic_error: 2.7903 - val_loss: 3.7066 - val_mean_squared_logarithmic_error: 3.5168\n",
            "Epoch 90/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0022 - mean_squared_logarithmic_error: 2.8052 - val_loss: 3.7233 - val_mean_squared_logarithmic_error: 3.5280\n",
            "Epoch 91/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0079 - mean_squared_logarithmic_error: 2.8099 - val_loss: 3.6947 - val_mean_squared_logarithmic_error: 3.4989\n",
            "Epoch 92/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9891 - mean_squared_logarithmic_error: 2.7930 - val_loss: 3.7147 - val_mean_squared_logarithmic_error: 3.5134\n",
            "Epoch 93/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9673 - mean_squared_logarithmic_error: 2.7694 - val_loss: 3.7348 - val_mean_squared_logarithmic_error: 3.5385\n",
            "Epoch 94/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0068 - mean_squared_logarithmic_error: 2.8090 - val_loss: 3.7156 - val_mean_squared_logarithmic_error: 3.5193\n",
            "Epoch 95/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 3.0114 - mean_squared_logarithmic_error: 2.8160 - val_loss: 3.7250 - val_mean_squared_logarithmic_error: 3.5302\n",
            "Epoch 96/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9779 - mean_squared_logarithmic_error: 2.7795 - val_loss: 3.7122 - val_mean_squared_logarithmic_error: 3.5135\n",
            "Epoch 97/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9868 - mean_squared_logarithmic_error: 2.7908 - val_loss: 3.7296 - val_mean_squared_logarithmic_error: 3.5359\n",
            "Epoch 98/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9742 - mean_squared_logarithmic_error: 2.7776 - val_loss: 3.7229 - val_mean_squared_logarithmic_error: 3.5290\n",
            "Epoch 99/100\n",
            "747/747 [==============================] - 1s 2ms/step - loss: 2.9846 - mean_squared_logarithmic_error: 2.7889 - val_loss: 3.7153 - val_mean_squared_logarithmic_error: 3.5200\n",
            "Epoch 100/100\n",
            "747/747 [==============================] - 2s 2ms/step - loss: 2.9728 - mean_squared_logarithmic_error: 2.7764 - val_loss: 3.7253 - val_mean_squared_logarithmic_error: 3.5287\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m8Vauf-dIFqO"
      },
      "source": [
        "generate_submission(model_15_width_10_dropout, x_col_top_15, 'model_15_width_10_dropout')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "W6zjyIkqKpHM"
      },
      "source": [
        "generate_submission(model_15_width_10_dropout, x_col_top_15, 'model_15_width_10_larger_first_layer')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cxDzwN9YRZLe"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}